{"version":3,"sources":["FileUpload.js","sidebar/SidebarHead.js","sidebar/FrontHelpers.js","sidebar/MiscTab.js","sidebar/CodeTab.js","sidebar/FlowpointTab.js","sidebar/SidebarContents.js","sidebar/TabContainer.js","sidebar/Sidebar.js","MainButtons.js","parser/FlowOrder.js","parser/PytorchParser.js","parser/Parser.js","parser/TensorflowParser.js","libraries/base_library.js","libraries/pytorch_library.js","libraries/tensorflow_library.js","libraries/pytorch_autoparams.js","LibraryParser.js","DataBaseHandler.js","Cryptographer.js","PasswordDialog.js","HelpDialog.js","App.js","MainLibrary.js","serviceWorker.js","index.js"],"names":["FileUpload","SidebarHead","props","react_default","a","createElement","Typography_default","href","gutterBottom","variant","component","style","padding","index_es","color","underline","fontSize","position","right","top","IconButton_default","target","index_esm","title","placement","disableTriggerFocus","disableFocusListener","TextFieldContainer","label","value","placeholder","type","rows","margin","multiline","onChange","e","SelectContainer","FormControl_default","htmlFor","inputProps","name","id","options","map","opt","Autosuggest","_React$Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","msg","initmsg","open","arrow_idx","wrapperRef","handleClickOutside","bind","assertThisInitialized","inherits","createClass","key","document","addEventListener","removeEventListener","contains","setState","_this2","opt_keys","idx","keys","chips","val","push","height","marginLeft","backgroundColor","toLowerCase","includes","selected","onClick","class","length","disabled","width","paddingTop","marginTop","onKeyDown","keyCode","Math","max","min","ref","node","maxHeight","overflow","React","Component","SwitchContainer","clickable","marginBottom","themes","variants","htmlToImage","require","NotesSection","FrontHelpers_TextFieldContainer","environment","notes","refresh","updateEnvironment","EnvironmentSection","modelname","FrontHelpers_SelectContainer","library","libraryFetchers","updateAvailableLayers","FrontHelpers_SwitchContainer","batch_first","include_training","include_saveload","include_predict","CustomizeViewSection","visual","theme","paddingRight","paddingBottom","updateVisual","tmp","autoparams","showShape","prepOutputShapes","diagramRef","toPng","then","dataUrl","Image","src","link","download","click","MiscTab","MiscTab_EnvironmentSection","MiscTab_CustomizeViewSection","MiscTab_NotesSection","github","hljs","background","CodeTab","codetheme","darkTheme","atelierForestDark","default_highlight","language","showLineNumbers","code","fieldChanger","updateFlowpoints","flowpoints","settings","content","parameters","fieldChanger_base","TransformsSection","point","bools","ints","tuples","contiguous","reshape_ndims","new_dims","Array","from","parseInt","reshape_dims","new_value","ParametersSection","fields","int","float","select","tuple","bool","string","unknown","base_ref","p_key","parameter","istuple","n_dims","round","Infinity","dims","dimensions","ButtonContainer","tooltip","aria-label","children","SettingsSection","FrontHelpers_Autosuggest","availableLayers","getEmptyFlowpointContent","FlowpointTab_ButtonContainer","deleteSelected","Delete_default","is_output","concat_inputs","concat_dim","FlowpointTab","display","verticalAlign","textAlign","show_param_section","FlowpointTab_SettingsSection","FlowpointTab_ParametersSection","FlowpointTab_TransformsSection","SidebarContents","tab","MiscTab_MiscTab","updateSettings","notification","CodeTab_CodeTab","FlowpointTab_FlowpointTab","TabContainer","undefined","tabs","indexOf","classes","ceil","className","root","Tabs_default","onSelectTab","textColor","tabsRoot","indicator","tabsIndicator","scrollButtons","Tab_default","disableRipple","tabRoot","tabSelected","withStyles","flexGrow","borderBottom","textTransform","minWidth","fontWeight","typography","fontWeightRegular","marginRight","spacing","unit","fontFamily","join","&:hover","opacity","&$tabSelected","&:focus","darkMuiTheme","createMuiTheme","palette","useNextVariants","lightMuiTheme","Sidebar","styles","Drawer_default","anchor","drawerOpen","maxWidth","drawerWidth","SidebarHead_SidebarHead","sidebar_TabContainer","SidebarContents_SidebarContents","zIndex","boxShadow","MainButtons","bottom","left","transition","MainButtons_ButtonContainer","addFlowpoint","Add_default","copyCode","FileCopy_default","createLink","Link_default","showFileup","AttachFile_default","showHideHelp","Help_default","showHide","Menu_default","getPointName","p","replace","dent","indent","n","FormatInitParams","indentation","max_l","param","i","substring","FormatParamInputs","input_keys","isDownStream","dummies","target_key","test_key","r_key","downStreamTested","recIsDownStream","found_downstream","outputs","out_key","recGetOrder","order","dummy","ordered","ready","inputs","isReady","sort","getStateNames","states","last_user","max_index","getLastUser","FlowOrder","inps","getInputs","is_recurrent","getDummyLibrary","init_states","outs","getStateName","Fit","got_hidden_states","formated_inputs","formated_outputs","formated_inputs_with_device","formated_outputs_with_device","ProgressPrinter","code_parsers","pytorch","extras","gothidden","modelID","state_msg","prefix","torchvision","reference","Constructor","step_lib","step_msg","inp_key","dim","sn1","sn2","reshape_msg","step","slice","Forward","hidden","ResetHidden","Predict","SaveLoad","tensorflow","current_point_name","current_point_key","rawparams","raw_p_key","concatname","addname","getBaseLibrary","AbstractRNNCell","Activation","ActivityRegularization","AdaptiveAvgPool1d","AdaptiveAvgPool2d","AdaptiveAvgPool3d","AdaptiveLogSoftmaxWithLoss","AdaptiveMaxPool1d","AdaptiveMaxPool2d","AdaptiveMaxPool3d","Add","AlphaDropout","Average","AveragePooling1D","AveragePooling2D","AveragePooling3D","AvgPool1d","AvgPool2d","AvgPool3d","BatchNorm1d","BatchNorm2d","BatchNorm3d","BatchNormalization","Bidirectional","Bilinear","CELU","Concatenate","ConstantPad1d","ConstantPad2d","ConstantPad3d","Conv1d","Conv2d","Conv3d","ConvLSTM2D","ConvTranspose1d","ConvTranspose2d","ConvTranspose3d","Cropping1D","Cropping2D","Cropping3D","Dense","DenseFeatures","DepthwiseConv2D","Dot","Dropout","Dropout2d","Dropout3d","ELU","Embedding","EmbeddingBag","Flatten","Fold","FractionalMaxPool2d","GRU","GRUCell","GaussianDropout","GaussianNoise","GlobalAveragePooling1D","GlobalAveragePooling2D","GlobalAveragePooling3D","GlobalMaxPool1D","GlobalMaxPool2D","GlobalMaxPool3D","GroupNorm","Hardshrink","Hardtanh","Identity","InputLayer","InputSpec","InstanceNorm1d","InstanceNorm2d","InstanceNorm3d","LPPool1d","LPPool2d","LSTM","LSTMCell","Lambda","Layer","LayerNorm","LeakyReLU","Linear","LinearModel","LocalResponseNorm","LocallyConnected1D","LocallyConnected2D","LogSigmoid","LogSoftmax","Masking","MaxPool1d","MaxPool2d","MaxPool3d","MaxUnpool1d","MaxUnpool2d","MaxUnpool3d","Maximum","Mean","Minimum","MultiheadAttention","Multiply","PReLU","Permute","RNN","RNNCell","RReLU","ReLU","ReLU6","ReflectionPad1d","ReflectionPad2d","RepeatVector","ReplicationPad1d","ReplicationPad2d","ReplicationPad3d","Reshape","SELU","SeparableConv1D","SeparableConv2D","Sigmoid","SimpleRNN","SimpleRNNCell","Softmax","Softmax2d","Softmin","Softplus","Softshrink","Softsign","SpatialDropout1D","SpatialDropout2D","SpatialDropout3D","StackedRNNCells","Subtract","SyncBatchNorm","Tanh","Tanhshrink","Threshold","ThresholdedReLU","TimeDistributed","Unfold","UpSampling1D","UpSampling2D","UpSampling3D","Wrapper","ZeroPad2d","ZeroPadding1D","ZeroPadding2D","ZeroPadding3D","ResNet18","ResNet34","ResNet50","ResNet101","ResNet152","VGG11","VGG13","VGG16","VGG19","AlexNet","SqueezeNet1_0","SqueezeNet1_1","DenseNet121","DenseNet169","DenseNet161","DenseNet201","InceptionV3","GoogLeNet","ShuffleNetV2_x0_5","ShuffleNetV2_x1_0","ShuffleNetV2_x1_5","ShuffleNet","MobileNetV2","ResNext50","ResNext101","Segmentation FCN ResNet50","Segmentation FCN ResNet101","Segmentation DeepLabV3 ResNet50","Segmentation DeepLabV3 ResNet101","Detection Faster R-CNN ResNet50","Detection Mask R-CNN ResNet50","Keypoint R-CNN ResNet50","getPyTorchLibrary","output_size","in_features","n_classes","cutoffs","div_value","head_bias","return_indices","inplace","kernel_size","stride","ceil_mode","count_include_pad","num_features","eps","momentum","affine","track_running_stats","in1_features","in2_features","out_features","bias","alpha","in_channels","out_channels","padding_mode","dilation","groups","output_padding","num_embeddings","embedding_dim","padding_idx","max_norm","norm_type","scale_grad_by_freq","sparse","mode","output_ratio","input_size","hidden_size","num_layers","dropout","bidirectional","num_groups","num_channels","lambd","min_val","max_val","normalized_shape","elementwise_affine","negative_slope","size","beta","k","Max","keepdim","embed_dim","num_heads","num_parameters","init","nonlinearity","lower","upper","threshold","resnet18","pretrained","progress","num_classes","resnet34","resnet50","resnet101","resnet152","vgg11","vgg13","vgg16","vgg19","alexnet","squeezenet1_0","squeezenet1_1","densenet121","densenet169","densenet161","densenet201","inception_v3","googlenet","shufflenet_v2_x0_5","shufflenet_v2_x1_0","shufflenet_v2_x1_5","shufflenet_v2_x2_0","mobilenet_v2","resnext50_32x4d","resnext101_32x8d","segmentation.fcn_resnet50","segmentation.fcn_resnet101","segmentation.deeplabv3_resnet50","segmentation.deeplabv3_resnet101","detection.fasterrcnn_resnet50_fpn","pretrained_backbone","detection.maskrcnn_resnet50_fpn","detection.keypointrcnn_resnet50_fpn","getTensorFlowLibrary","trainable","dtype","dynamic","activation","l1","l2","rate","noise_shape","seed","pool_size","strides","data_format","axis","epsilon","center","scale","beta_initializer","gamma_initializer","moving_mean_initializer","moving_variance_initializer","beta_regularizer","gamma_regularizer","beta_constraint","gamma_constraint","renorm","renorm_clipping","renorm_momentum","fused","virtual_batch_size","adjustment","layer","merge_mode","weights","Conv1D","filters","dilation_rate","use_bias","kernel_initializer","bias_initializer","kernel_regularizer","bias_regularizer","activity_regularizer","kernel_constraint","bias_constraint","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","recurrent_activation","recurrent_initializer","unit_forget_bias","recurrent_regularizer","recurrent_constraint","return_sequences","go_backwards","stateful","recurrent_dropout","cropping","units","feature_columns","depth_multiplier","depthwise_initializer","depthwise_regularizer","depthwise_constraint","axes","normalize","input_dim","output_dim","embeddings_initializer","embeddings_regularizer","embeddings_constraint","mask_zero","input_length","implementation","return_state","unroll","time_major","reset_after","stddev","shape","ndim","max_ndim","min_ndim","function","output_shape","mask","arguments",")","sparse_combiner","mask_value","MaxPool1D","MaxPool2D","MaxPool3D","alpha_initializer","alpha_regularizer","alpha_constraint","shared_axes","cell","max_value","target_shape","pointwise_initializer","pointwise_regularizer","pointwise_constraint","cells","theta","interpolation","getPyTorchAutoparams","outshape","inp","floor","current","row","L_in","L_out","H_in","W_in","H_out","W_out","D_in","D_out","features","out_shape","index","SimplifyParameters","new_parameters","DeSimplifyParameters","recipe","JSON","parse","stringify","recipe_copy","new_param_lib","SimplifyOutputs","new_outputs","DeSimplifyOutputs","new_outputs_lib","SimplifyFlowpoint","flowpoint","pos","new_flowpoint","isout","out","x","y","cont","contig","re_ndims","re_dims","new_content","library_key","SimplifyContent","DeSimplifyFlowpoint","new_flowpoint_lib","new_content_lib","DeSimplifyContent","SimplifyFlowpoints","new_flowpoints","DeSimplifyFlowpoints","new_flowpoints_lib","lib_key","param_key","isArray","param_key_2","p2","console","log","FixTuples","DeSimplifyEnvironment","env","main_env","new_env_lib","DeSimplifyVisual","vis","main_vis","new_vis_lib","showName","snap","DeSimplifySettings","main_set","new_set_lib","count","lastPos","DeSimplify","main_lib","err","TryParseJSON","Library2String","Simplify","axios","rjust","rep","getId","l","lib","random","d","Date","getSeconds","getMinutes","getHours","getDate","getMonth","num2bigBase","num","getYear","toString","CryptoJS","ReplaceAll","str","search","replacement","newstr","split","getSpecialsLib","reversed","§","\"","#","%","&","=","`","^","+","´","¨","revlib","Decrypt","data","specials","decrypted","AES","decrypt","enc","Utf8","WhatIsThis","Button_default","Collapse_default","in","paragraph","LoadDialog","_React$Component2","_this3","pswd","fieldRef","_this4","Dialog_default","onClose","aria-labelledby","aria-describedby","DialogTitle_default","DialogContent_default","DialogContentText_default","PasswordDialog_WhatIsThis","focus","autoComplete","onSubmit","preventDefault","TextField_default","error","InputLabelProps","shrink","inputRef","input","DialogActions_default","continueMsg","SaveDialog","_React$Component3","_this5","_this6","HelpDialog","goTo","fullWidth","activeStep","orientation","completed","model_id","App","baseLib","encrypted_model","show_load_dialog","load_dialog_error","show_save_dialog","show_help_dialog","baseUrl","window","location","show","queue","showNotification","updateCode","loadDecryptedModel","deleteFlowpoint","handleClick","componentDidMount","fileUp","fileUPe","fileUPer","cb","query","get","res","getTime","shift","flow_order","DefaultMessage","Parser","Input","layer_key","visited","dimkey","tmp_autoparams","bestInp","all_inps","new_state","objectSpread","0","1","2","3","base_point","newPoint","copy","result","file","files","reader","FileReader","onload","readAsText","fileInput","accept","event","shiftKey","pointA","_this7","Sidebar_Sidebar","dist","getDiagramRef","avoidCollisions","startPosition","onDrag","paddingLeft","shapeBox","MainButtons_MainButtons","autoHideDuration","onExited","anchorOrigin","vertical","horizontal","message","HelpDialog_HelpDialog","PasswordDialog_LoadDialog","PasswordDialog_SaveDialog","save_dialog_error","toEncrypt","test_string","encrypted","encrypt","Encrypt","PostToDataBase","fileName","contentType","Blob","URL","createObjectURL","revokeObjectURL","saveFile","newUrl","history","pushState","Boolean","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.871ee51d.chunk.js","sourcesContent":["// FileUpload.js\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nfunction FileUpload( {onUpload} ) {\r\n    const [fileContent, setFileContent] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (onUpload) {\r\n            var fileInput = document.createElement('input');\r\n            // fileInput.innerHTML = \"<input type='file' id='fileup'/>\"\r\n            // var fileInput = document.getElementById('fileup');\r\n            fileInput.type = 'file';\r\n            fileInput.style.display = 'none';\r\n            fileInput.onchange = () => {\r\n                const file = fileInput.files[0];\r\n                if (file) {\r\n                    const reader = new FileReader();\r\n                    reader.onload = () => {\r\n                        setFileContent(reader.result);\r\n                    };\r\n                    reader.readAsText(file);\r\n                }\r\n            };\r\n            fileInput.click(); // 模拟点击，触发文件选择\r\n        }\r\n    }, [onUpload]);\r\n\r\n    return (\r\n        <div>\r\n            <input type='file' id='fileup'/>\r\n            <pre>{fileContent}</pre>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FileUpload;","import React from 'react';\r\n\r\n// Material\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n// Icons\r\nimport { FaGithub, FaLinkedin, FaNpm } from \"react-icons/fa\";\r\nimport { Link, Tooltip } from '@material-ui/core';\r\n\r\n\r\nexport const SidebarHead = props => {\r\n  return (\r\n    <div>\r\n\r\n      <Typography href='https://mariusbrataas.github.io/flowpoints_ml' gutterBottom variant=\"h5\" component=\"h2\" style={{padding:'15px'}}>\r\n        <Link href='https://mariusbrataas.github.io/flowpoints_ml' color='inherit' underline='none'>\r\n          Flowpoints\r\n        </Link>\r\n        <br/>\r\n        <span style={{fontSize: '1rem'}}>_offline</span>\r\n      </Typography>\r\n\r\n      <div style={{position:'absolute', right:5, top:5}}>\r\n        <IconButton target='_blank' href='https://www.npmjs.com/package/flowpoints'>\r\n          <FaNpm/>\r\n        </IconButton>\r\n        <IconButton target='_blank' href='https://www.linkedin.com/in/mariusbrataas/'>\r\n          <FaLinkedin/>\r\n        </IconButton>\r\n        <Tooltip title='official' placement=\"bottom\" disableTriggerFocus disableFocusListener>\r\n          <IconButton target='_blank' href='https://github.com/mariusbrataas/flowpoints_ml#readme'>\r\n            <FaGithub/>\r\n          </IconButton>\r\n        </Tooltip>\r\n        <Tooltip title='offline' placement=\"bottom\" disableTriggerFocus disableFocusListener>\r\n          <IconButton target='_blank' href='https://github.com/akise07/flowpoints_ml_offline'>\r\n            <FaGithub color='#e0a25d'/>\r\n          </IconButton>\r\n        </Tooltip>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}","import React, { Component } from 'react';\r\nimport './FrontHelpers.css'\r\n\r\n// Material\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { Paper, InputLabel, Select, MenuItem, FormControlLabel, Switch, TextField, Tooltip, Chip } from '@material-ui/core';\r\n\r\n\r\nexport const TextFieldContainer = props => {\r\n  return (\r\n    <TextField\r\n      label={props.label}\r\n      value={props.value}\r\n      placeholder={props.placeholder}\r\n      type={props.type}\r\n      rows={props.rows}\r\n      variant={props.variant}\r\n      margin={props.margin ? props.margin : 'tight'}\r\n      style={props.style}\r\n      multiline={props.multiline}\r\n      onChange={e => {\r\n        if (props.onChange) props.onChange(e.target.value)\r\n      }}/>\r\n  )\r\n}\r\n\r\n\r\nexport const SelectContainer = props => {\r\n  return (\r\n    <FormControl style={props.style}>\r\n        <InputLabel htmlFor='selectContainer'>{props.label}</InputLabel>\r\n        <Select\r\n          value={props.value}\r\n          inputProps={{ name:'selectCont', id:'selectContainer' }}\r\n          onChange={e => {\r\n            if (props.onChange) props.onChange(e.target.value)\r\n          }}>\r\n          {\r\n            props.options.map(opt => {\r\n              return (\r\n                <MenuItem value={opt}>{opt}</MenuItem>\r\n              )\r\n            })\r\n          }\r\n        </Select>\r\n    </FormControl>\r\n  )\r\n}\r\n\r\n\r\nexport const SelectContainerTooltips = props => {\r\n  return (\r\n    <FormControl style={props.style}>\r\n        <InputLabel htmlFor='selectContainer'>{props.label}</InputLabel>\r\n        <Select\r\n          value={props.value}\r\n          inputProps={{ name:'selectCont', id:'selectContainer' }}\r\n          onChange={e => {\r\n            if (props.onChange) props.onChange(e.target.value)\r\n          }}>\r\n          {\r\n            Object.keys(props.options).map(opt => {\r\n              var chips = []\r\n              props.options[opt].map(val => {\r\n                chips.push(\r\n                  <Chip label={val === 'pytorch' ? 'PT' : 'TF'} style={{fontSize:10, height:'85%', marginLeft:2, color:'white', backgroundColor:(val === 'pytorch' ? '#90caf9' : '#ffcc80')}}/>\r\n                )\r\n              })\r\n              return (\r\n                <MenuItem value={opt}>\r\n                <div class='container'>\r\n                  <div class='option'>{opt}</div>\r\n                  <div class='chips'>{chips}</div>\r\n                </div>\r\n                </MenuItem>\r\n              )\r\n            })\r\n          }\r\n        </Select>\r\n    </FormControl>\r\n  )\r\n}\r\n\r\n\r\nexport class Autosuggest extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      msg: this.props.value,\r\n      initmsg: this.props.value,\r\n      options: this.props.options,\r\n      open: false,\r\n      arrow_idx: 0\r\n    }\r\n    this.wrapperRef = null;\r\n    this.handleClickOutside = this.handleClickOutside.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    document.addEventListener('mousedown', this.handleClickOutside);\r\n  }\r\n  componentWillUnmount() {\r\n    document.removeEventListener('mousedown', this.handleClickOutside);\r\n  }\r\n  handleClickOutside(e) {\r\n    if (this.wrapperRef && !this.wrapperRef.contains(e.target)) this.setState({open:false, msg:this.props.value})\r\n  }\r\n  render() {\r\n    if (this.state.initmsg !== this.props.value) {\r\n      this.setState({\r\n        msg: this.props.value,\r\n        initmsg: this.props.value,\r\n        open: false,\r\n        arrow_idx: 0\r\n      })\r\n    }\r\n    var options = [];\r\n    var opt_keys = [];\r\n    var idx = 0;\r\n    Object.keys(this.state.options).map(opt => {\r\n      var chips = [];\r\n      this.state.options[opt].map(val => {\r\n        chips.push(\r\n          <Chip label={val === 'pytorch' ? 'PT' : 'TF'} style={{fontSize:10, height:'85%', marginLeft:2, color:'white', backgroundColor:(val === 'pytorch' ? '#90caf9' : '#ffcc80')}}/>\r\n        )\r\n      })\r\n      if (opt.toLowerCase().includes(this.state.msg.toLowerCase())) {\r\n        options.push(\r\n          <MenuItem\r\n            value={opt}\r\n            selected={this.state.arrow_idx === idx}\r\n            onClick={e => {\r\n              this.setState({arrow_idx:idx, msg:opt, open:false})\r\n              if (this.props.onChange) this.props.onChange(opt)\r\n            }}>\r\n            <div class='container'>\r\n              <div class='option'>{opt}</div>\r\n              <div class='chips'>{chips}</div>\r\n            </div>\r\n          </MenuItem>\r\n        )\r\n        opt_keys.push(opt)\r\n        idx += 1\r\n      }\r\n    })\r\n    if (options.length === 0) options.push( <MenuItem disabled value='Nothing'>No available layers</MenuItem> )\r\n    return (\r\n      <div style={{width:'100%'}}>\r\n        <TextField\r\n          style={{width:'100%', paddingTop:0, marginTop:0}}\r\n          onClick={() => {this.setState({open:!this.state.open})}}\r\n          label=\"Layer type\"\r\n          value={this.state.msg}\r\n          onChange={e => {this.setState({msg:e.target.value, arrow_idx:0, open:true})}}\r\n          margin=\"normal\"\r\n          onKeyDown={e => {\r\n            if (e.keyCode === 40) {\r\n              this.setState({arrow_idx: Math.max(Math.min(options.length - 1, this.state.arrow_idx + 1), 0)})\r\n            } else if (e.keyCode === 38) {\r\n              this.setState({arrow_idx: Math.min(Math.max(0, this.state.arrow_idx - 1), options.length)})\r\n            } else if (e.keyCode === 13) {\r\n              if (opt_keys.length > this.state.arrow_idx) {\r\n                this.setState({msg:opt_keys[this.state.arrow_idx], open:false})\r\n                if (this.props.onChange) this.props.onChange(opt_keys[this.state.arrow_idx])\r\n              }\r\n            }\r\n          }}\r\n        />\r\n        {\r\n          this.state.open ? <div ref={node => {this.wrapperRef = node}}>\r\n            <Paper style={{maxHeight:'40vh', overflow:'scroll'}}>\r\n              {\r\n                options\r\n              }\r\n            </Paper></div> : null\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n/*export const SwitchContainer = props => {\r\n  return (\r\n    <FormControlLabel\r\n      style={props.style}\r\n      control={\r\n        <Switch\r\n          checked={props.value}\r\n          color='primary'\r\n          onChange={e => {\r\n            if (props.onChange) props.onChange(!props.value)\r\n          }}/>\r\n      }\r\n      label={props.label}/>\r\n  )\r\n}*/\r\n\r\n\r\nexport const SwitchContainer = props => {\r\n  return (\r\n    <Chip\r\n      label={props.label}\r\n      clickable\r\n      style={{\r\n        marginLeft:5,\r\n        marginTop:2,\r\n        marginBottom:2,\r\n        backgroundColor:(props.value ? '#64b5f6' : '#e0e0e0'),\r\n        color:(props.value ? 'white' : '#424242')\r\n      }}\r\n      onClick={e => {\r\n        if (props.onChange) props.onChange(!props.value)\r\n      }}/>\r\n  )\r\n}\r\n\r\nexport const themes = [\r\n  'red',\r\n  'pink',\r\n  'purple',\r\n  'deep-purple',\r\n  'indigo',\r\n  'blue',\r\n  'light-blue',\r\n  'green',\r\n  'light-green',\r\n  'lime',\r\n  'yellow',\r\n  'amber',\r\n  'orange',\r\n  'deep-orange',\r\n  'brown',\r\n  'grey',\r\n  'blue-grey',\r\n  'black',\r\n  'white'\r\n]\r\n\r\nexport const variants = [\r\n  'paper',\r\n  'outlined',\r\n  'filled'\r\n]","import React, { Component } from 'react';\r\n\r\n// Local tools\r\nimport { SelectContainer, themes, variants, SwitchContainer, TextFieldContainer } from './FrontHelpers.js';\r\nimport { Button } from '@material-ui/core';\r\n\r\n// Other imports\r\n\r\nconst htmlToImage = require('html-to-image');\r\n\r\n\r\n\r\nconst NotesSection = props => {\r\n  return (\r\n    <div style={{paddingTop:30}}>\r\n\r\n      <TextFieldContainer\r\n        label='Model notes'\r\n        multiline={true}\r\n        value={props.state.environment.notes}\r\n        style={{width:'100%'}}\r\n        onChange={val => {\r\n\r\n          // Loading from state\r\n          var environment = props.refresh().environment;\r\n\r\n          // Changing notes\r\n          environment.notes = val;\r\n\r\n          // Updating state\r\n          props.updateEnvironment(environment)\r\n\r\n        }}/>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst EnvironmentSection = props => {\r\n  var environment = props.state.environment;\r\n  return (\r\n    <div>\r\n\r\n      <h3 style={{marginTop:0}}>Model name</h3>\r\n\r\n      <TextFieldContainer\r\n        label='Model name'\r\n        multiline={true}\r\n        value={props.state.environment.modelname}\r\n        style={{width:'100%'}}\r\n        onChange={val => {\r\n\r\n          // Loading from state\r\n          var environment = props.refresh().environment;\r\n\r\n          // Changing notes\r\n          environment.modelname = val;\r\n\r\n          // Updating state\r\n          props.updateEnvironment(environment)\r\n\r\n        }}/>\r\n\r\n      <h3 style={{marginTop:30}}>Environment</h3>\r\n\r\n      <SelectContainer\r\n        label='Library'\r\n        value={environment.library}\r\n        options={Object.keys(environment.libraryFetchers)}\r\n        onChange={val => {\r\n          \r\n          // Loading from state\r\n          var environment = props.refresh().environment;\r\n          environment.library = val;\r\n\r\n          // Updating state\r\n          props.updateEnvironment(environment)\r\n\r\n          // Updating available layers\r\n          props.updateAvailableLayers()\r\n\r\n        }}/>\r\n\r\n      {\r\n        environment.library === 'pytorch' ? <div style={{paddingTop:20}}>\r\n            <SwitchContainer\r\n              label='batch first'\r\n              value={environment.batch_first}\r\n              style={{paddingTop:0}}\r\n              onChange={val => {\r\n\r\n                // Loading from state\r\n                var environment = props.refresh().environment;\r\n                environment.batch_first = val;\r\n\r\n                // Updating state\r\n                props.updateEnvironment(environment)\r\n\r\n            }}/>\r\n            <SwitchContainer\r\n              label='include training function'\r\n              value={environment.include_training}\r\n              style={{paddingTop:0}}\r\n              onChange={val => {\r\n\r\n                // Loading from state\r\n                var environment = props.refresh().environment;\r\n                environment.include_training = val;\r\n\r\n                // Updating state\r\n                props.updateEnvironment(environment)\r\n\r\n              }}\r\n            />\r\n            <SwitchContainer\r\n              label='include save and load'\r\n              value={environment.include_saveload}\r\n              style={{paddingTop:0}}\r\n              onChange={val => {\r\n\r\n                // Loading from state\r\n                var environment = props.refresh().environment;\r\n                environment.include_saveload = val;\r\n\r\n                // Updating state\r\n                props.updateEnvironment(environment)\r\n\r\n              }}\r\n            />\r\n            <SwitchContainer\r\n              label='include predict'\r\n              value={environment.include_predict}\r\n              style={{paddingTop:0}}\r\n              onChange={val => {\r\n\r\n                // Loading from state\r\n                var environment = props.refresh().environment;\r\n                environment.include_predict = val;\r\n\r\n                // Updating state\r\n                props.updateEnvironment(environment)\r\n\r\n              }}\r\n            />\r\n          </div> : null\r\n      }\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst CustomizeViewSection = props => {\r\n  var visual = props.state.visual;\r\n  var environment = props.state.environment;\r\n  return (\r\n    <div style={{paddingTop:20, width:'100%'}}>\r\n      \r\n      <h3>Customize view</h3>\r\n\r\n      <div>\r\n\r\n        <SelectContainer\r\n          label='Theme'\r\n          value={visual.theme}\r\n          options={themes}\r\n          style={{width:'48%', paddingRight:10, paddingBottom:10}}\r\n          onChange={val => {\r\n\r\n            // Loading from state\r\n            var visual = props.refresh().visual;\r\n            visual.theme = val;\r\n\r\n            // Updating state\r\n            props.updateVisual(visual)\r\n\r\n          }}/>\r\n        \r\n        <SelectContainer\r\n          label='Variant'\r\n          value={visual.variant}\r\n          options={variants}\r\n          style={{width:'48%', paddingBottom:10}}\r\n          onChange={val => {\r\n\r\n            // Loading from state\r\n            var visual = props.refresh().visual;\r\n            visual.variant = val;\r\n\r\n            // Updating state\r\n            props.updateVisual(visual)\r\n\r\n          }}/>\r\n\r\n      </div>\r\n\r\n\r\n      <div style={{paddingTop:20}}>\r\n        {\r\n          [\r\n            {ref:'darkTheme', label:'Dark theme'},\r\n            {ref:'showName', label:'Show names'}\r\n          ].map(tmp => {\r\n            return (\r\n              <SwitchContainer\r\n                label={tmp.label}\r\n                value={visual[tmp.ref]}\r\n                style={{paddingTop:0}}\r\n                onChange={val => {\r\n\r\n                  // Loading from state\r\n                  var visual = props.refresh().visual;\r\n                  visual[tmp.ref] = val;\r\n\r\n                  // Updating state\r\n                  props.updateVisual(visual)\r\n\r\n                }}/>\r\n            )\r\n          })\r\n        }\r\n        {\r\n          environment.library in environment.autoparams ? <SwitchContainer\r\n            label='Show shapes'\r\n            value={visual.showShape}\r\n            style={{paddingTop:0}}\r\n            onChange={val => {\r\n              var visual = props.refresh().visual;\r\n              visual.showShape = val;\r\n              props.updateVisual(visual);\r\n              if (val) props.prepOutputShapes();\r\n            }}/> : null\r\n        }\r\n      </div>\r\n\r\n      {\r\n        props.diagramRef ? <div style={{paddingTop:20}}>\r\n            <Button\r\n              variant=\"outlined\"\r\n              onClick={(e) => {\r\n                htmlToImage.toPng(props.diagramRef).then(function (dataUrl) {\r\n                  var img = new Image();\r\n                  img.src = dataUrl;\r\n                  var link = document.createElement('a');\r\n                  link.download = 'diagram.png';\r\n                  link.href = dataUrl;\r\n                  link.click();\r\n                })\r\n              }}>\r\n              Export png\r\n            </Button></div> : null\r\n      }\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport const MiscTab = props => {\r\n  return (\r\n    <div style={{padding:15}}>\r\n\r\n      <EnvironmentSection\r\n        state={props.state}\r\n        refresh={props.refresh}\r\n        updateEnvironment={props.updateEnvironment}\r\n        updateAvailableLayers={props.updateAvailableLayers}/>\r\n      \r\n      <CustomizeViewSection\r\n        state={props.state}\r\n        refresh={props.refresh}\r\n        updateVisual={props.updateVisual}\r\n        diagramRef={props.diagramRef}\r\n        prepOutputShapes={props.prepOutputShapes}/>\r\n      \r\n      <NotesSection\r\n        state={props.state}\r\n        refresh={props.refresh}\r\n        updateEnvironment={props.updateEnvironment}/>\r\n      \r\n    </div>\r\n  )\r\n}","import React, { Component } from 'react';\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\nimport { atelierForestDark } from 'react-syntax-highlighter/dist/styles/hljs';\r\nimport github from 'react-syntax-highlighter/dist/styles/hljs/github';\r\n\r\ngithub.hljs.background = '#ffffff';\r\n\r\nexport const CodeTab = props => {\r\n  const codetheme = props.state.visual.darkTheme ? atelierForestDark : github\r\n  return (\r\n    <div style={{fontSize:12}}>\r\n\r\n      <SyntaxHighlighter language='python' style={codetheme} showLineNumbers>\r\n      {\r\n        props.state.environment.code\r\n      }\r\n      </SyntaxHighlighter>\r\n\r\n    </div>\r\n  )\r\n}","import React, { Component } from 'react';\r\nimport { Autosuggest, SelectContainer, TextFieldContainer, SwitchContainer, SelectContainerTooltips } from './FrontHelpers';\r\nimport { IconButton, TextField, MenuItem, Paper, FormControl, Chip } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport { Tooltip } from '@material-ui/core';\r\n\r\n\r\n\r\nfunction fieldChanger(refresh, updateFlowpoints, key, value) {\r\n  var state = refresh();\r\n  var environment = state.environment;\r\n  var flowpoints = state.flowpoints;\r\n  const selected = state.settings.selected;\r\n  flowpoints[selected].content[environment.library.toLowerCase()].parameters[key].value = value;\r\n  updateFlowpoints(flowpoints)\r\n}\r\n\r\nfunction fieldChanger_input(refresh, updateFlowpoints, key, value) {\r\n  var state = refresh()\r\n  var environment = state.environment;\r\n  var flowpoints = state.flowpoints;\r\n  const selected = state.settings.selected;\r\n  flowpoints[selected].content[key].value = value;\r\n  updateFlowpoints(flowpoints)\r\n}\r\n\r\nfunction fieldChanger_base(refresh, updateFlowpoints, key, value) {\r\n  var state = refresh()\r\n  var environment = state.environment;\r\n  var flowpoints = state.flowpoints;\r\n  const selected = state.settings.selected;\r\n  flowpoints[selected][key] = value;\r\n  updateFlowpoints(flowpoints)\r\n}\r\n\r\n\r\nconst TransformsSection = props => {\r\n\r\n  // Point\r\n  var point = props.state.flowpoints[props.state.settings.selected]\r\n\r\n  // Container for bools\r\n  var bools = [];\r\n  var ints = [];\r\n  var tuples = [];\r\n\r\n  // Adding bools\r\n  bools.push(\r\n    <SwitchContainer\r\n      label='contiguous'\r\n      value={point.contiguous}\r\n      onChange={val => {\r\n        fieldChanger_base(\r\n          props.refresh,\r\n          props.updateFlowpoints,\r\n          'contiguous',\r\n          val\r\n        )\r\n      }}/>\r\n  )\r\n\r\n  // Adding ints\r\n  ints.push(\r\n    <TextFieldContainer\r\n      label='Reshape dimensions'\r\n      value={point.reshape_ndims}\r\n      type='number'\r\n      variant='outlined'\r\n      margin='dense'\r\n      style={{\r\n        width: 150,\r\n        paddingRight: 5\r\n      }}\r\n      onChange={val => {\r\n        fieldChanger_base(\r\n          props.refresh,\r\n          props.updateFlowpoints,\r\n          'reshape_ndims',\r\n          val\r\n        )\r\n        if (val) {\r\n          var new_dims = [];\r\n          Array.from(Array(parseInt(val)).keys()).map(idx => {\r\n            new_dims.push(point.reshape_dims[idx] ? point.reshape_dims[idx] : 0)\r\n          })\r\n          fieldChanger_base(\r\n            props.refresh,\r\n            props.updateFlowpoints,\r\n            'reshape_dims',\r\n            new_dims\r\n          )\r\n        }\r\n      }}/>\r\n  )\r\n\r\n  // Tuples\r\n  Array.from(Array(parseInt(point.reshape_ndims ? point.reshape_ndims : 0)).keys()).map(idx => {\r\n    tuples.push(\r\n      <TextFieldContainer\r\n        label={'reshape dim ' + idx}\r\n        value={point.reshape_dims[idx]}\r\n        type='number'\r\n        variant='outlined'\r\n        margin='dense'\r\n        style={{\r\n          width: 150,\r\n          paddingRight: 5\r\n        }}\r\n        onChange={val => {\r\n          var new_value = point.reshape_dims;\r\n          new_value[idx] = val\r\n          fieldChanger_base(\r\n            props.refresh,\r\n            props.updateFlowpoints,\r\n            'reshape_dims',\r\n            new_value\r\n          )\r\n        }}/>\r\n    )\r\n  })\r\n\r\n  // Returning\r\n  return (\r\n    <div>\r\n  \r\n      <h3 style={{marginTop:30}}>Tensor transforms</h3>\r\n\r\n      <div style={{paddingTop:0, marginTop:0, marginLeft:-5, paddingBottom:10}}>{ bools }</div>\r\n      <div>{ ints }</div>\r\n      <div>{ tuples }</div>\r\n\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\nconst ParametersSection = props => {\r\n\r\n  // Point\r\n  var point = props.state.flowpoints[props.state.settings.selected];\r\n\r\n  // Creating all fields\r\n  var fields = {\r\n    int: [],\r\n    float: [],\r\n    select: [],\r\n    tuple: [],\r\n    bool: [],\r\n    string: [],\r\n    unknown: []\r\n  }\r\n\r\n  if (point.base_ref !== 'Input') {\r\n\r\n    var parameters = point.content[props.state.environment.library.toLowerCase()].parameters;\r\n\r\n    // Adding fields\r\n    Object.keys(parameters).map(p_key => {\r\n\r\n      if (p_key !== 'extras') {\r\n\r\n        const parameter = parameters[p_key]\r\n        if (parameter.istuple) {\r\n          fields.tuple.push(\r\n            <div style={{paddingTop:15}}><h5 style={{margin:0}}>{p_key}</h5></div>\r\n          )\r\n          parameter.value.map((value, idx) => {\r\n            fields.tuple.push(\r\n              <TextFieldContainer\r\n                label={p_key + ' ' + idx}\r\n                value={value}\r\n                type='number'\r\n                variant='outlined'\r\n                margin='dense'\r\n                style={{\r\n                  width: 150,\r\n                  paddingRight: 5\r\n                }}\r\n                onChange={val => {\r\n                  var new_value = parameter.value;\r\n                  new_value[idx] = val;\r\n                  fieldChanger(\r\n                    props.refresh,\r\n                    props.updateFlowpoints,\r\n                    p_key,\r\n                    new_value\r\n                  )\r\n                }}/>\r\n            )\r\n          })\r\n        } else {\r\n\r\n          switch(parameter.type) {\r\n            case 'int':\r\n              fields.int.push(\r\n                <TextFieldContainer\r\n                  label={p_key}\r\n                  value={parameter.value}\r\n                  type='number'\r\n                  variant='outlined'\r\n                  margin='dense'\r\n                  style={{\r\n                    width: 150,\r\n                    paddingRight: 5\r\n                  }}\r\n                  onChange={val => {\r\n                    fieldChanger(\r\n                      props.refresh,\r\n                      props.updateFlowpoints,\r\n                      p_key,\r\n                      val\r\n                    )\r\n                  }}/>\r\n              )\r\n              break;\r\n            \r\n            case 'float':\r\n              fields.float.push(\r\n                <TextFieldContainer\r\n                  label={p_key}\r\n                  value={parameter.value}\r\n                  type='number'\r\n                  variant='outlined'\r\n                  margin='dense'\r\n                  style={{\r\n                    width: 150,\r\n                    paddingRight: 5\r\n                  }}\r\n                  onChange={val => {\r\n                    fieldChanger(\r\n                      props.refresh,\r\n                      props.updateFlowpoints,\r\n                      p_key,\r\n                      val\r\n                    )\r\n                  }}/>\r\n              )\r\n              break;\r\n            \r\n            case 'string':\r\n            fields.string.push(\r\n              <TextFieldContainer\r\n                label={p_key}\r\n                value={parameter.value}\r\n                type='text'\r\n                variant='outlined'\r\n                margin='dense'\r\n                style={{\r\n                  width: 150,\r\n                  paddingRight: 5\r\n                }}\r\n                onChange={val => {\r\n                  fieldChanger(\r\n                    props.refresh,\r\n                    props.updateFlowpoints,\r\n                    p_key,\r\n                    val\r\n                  )\r\n                }}/>\r\n            )\r\n            break;\r\n            \r\n            case 'bool':\r\n              if (p_key === 'batch_first') {\r\n                fields.bool.push(\r\n                  <SwitchContainer\r\n                    label={p_key}\r\n                    value={props.state.environment.batch_first}\r\n                    onChange={val => {}}/>\r\n                )\r\n              } else {\r\n                fields.bool.push(\r\n                  <SwitchContainer\r\n                    label={p_key}\r\n                    value={parameter.value}\r\n                    onChange={val => {\r\n                      fieldChanger(\r\n                        props.refresh,\r\n                        props.updateFlowpoints,\r\n                        p_key,\r\n                        val\r\n                      )\r\n                    }}/>\r\n                )\r\n              }\r\n            break;\r\n          \r\n          case null:\r\n          fields.unknown.push(\r\n            <TextFieldContainer\r\n              label={p_key}\r\n              value={parameter.value}\r\n              type='text'\r\n              variant='outlined'\r\n              margin='dense'\r\n              style={{\r\n                width: 150,\r\n                paddingRight: 5\r\n              }}\r\n              onChange={val => {\r\n                fieldChanger(\r\n                  props.refresh,\r\n                  props.updateFlowpoints,\r\n                  p_key,\r\n                  val\r\n                )\r\n              }}/>\r\n          )\r\n          break;\r\n            \r\n          case 'select':\r\n          fields.select.push(\r\n            <SelectContainer\r\n              label={p_key}\r\n              value={parameter.value}\r\n              options={parameter.options}\r\n              style={{\r\n                width: 150,\r\n                paddingRight: 5\r\n              }}\r\n              onChange={val => {\r\n                fieldChanger(\r\n                  props.refresh,\r\n                  props.updateFlowpoints,\r\n                  p_key,\r\n                  val\r\n                )\r\n              }}/>\r\n          )\r\n          break;\r\n\r\n          }\r\n\r\n        }\r\n\r\n      }\r\n\r\n    })\r\n  } else {\r\n    var parameters = point.content;\r\n\r\n    // Adding n_dims field\r\n    fields.int.push(\r\n      <TextFieldContainer\r\n        label='n_dimensions'\r\n        value={parameters.n_dims}\r\n        type='number'\r\n        variant='outlined'\r\n        margin='dense'\r\n        style={{\r\n          width: 150,\r\n          paddingRight: 5\r\n        }}\r\n        onChange={val => {\r\n\r\n          val = val === '' ? '' : Math.max(Math.min(Math.round(val), Infinity), 1)\r\n\r\n          // Making sure dims got the correct number of parameters\r\n          var dims = {};\r\n          Array.from(Array(val).keys()).map(idx => {\r\n            if (idx in parameters.dimensions) {\r\n              dims[idx] = parameters.dimensions[idx];\r\n            } else {\r\n              dims[idx] = 1;\r\n            }\r\n          })\r\n\r\n          // Changing parameters\r\n          var state = props.refresh()\r\n          var flowpoints = state.flowpoints;\r\n          const selected = state.settings.selected;\r\n          flowpoints[selected].content.n_dims = val;\r\n          flowpoints[selected].content.dimensions = dims;\r\n\r\n          // Updating state\r\n          props.updateFlowpoints(flowpoints)\r\n\r\n        }}/>\r\n    )\r\n\r\n\r\n    // Adding dimensions field\r\n    fields.tuple.push(\r\n      <div style={{paddingTop:15}}><h5 style={{margin:0}}>Dimensions</h5></div>\r\n    )\r\n    Object.keys(parameters.dimensions).map((p_key, idx) => {\r\n      fields.tuple.push(\r\n        <TextFieldContainer\r\n          label={'dimension ' + p_key}\r\n          value={parameters.dimensions[p_key]}\r\n          type='number'\r\n          variant='outlined'\r\n          margin='dense'\r\n          style={{\r\n            width: 150,\r\n            paddingRight: 5\r\n          }}\r\n          onChange={val => {\r\n            var state = props.refresh();\r\n            var flowpoints = state.flowpoints;\r\n            state.flowpoints[state.settings.selected].content.dimensions[p_key] = val;\r\n            props.updateFlowpoints(flowpoints)\r\n          }}/>\r\n      )\r\n    })\r\n  }\r\n\r\n\r\n  if ((fields.int.length + fields.float.length + fields.select.length + fields.tuple.length + fields.bool.length ) > 0) {\r\n    return (\r\n      <div>\r\n  \r\n        <h3 style={{marginTop:30}}>Parameters</h3>\r\n  \r\n        <div>{ fields.int }</div>\r\n        <div>{ fields.float }</div>\r\n        <div>{ fields.select }</div>\r\n        <div>{ fields.tuple }</div>\r\n        <div>{ fields.string }</div>\r\n        <div style={{paddingTop:10, marginLeft:-5}}>{ fields.bool }</div>\r\n        {\r\n          fields.unknown.length > 0 ? <div>\r\n            <h5 style={{paddingTop:5, paddingBottom:0}}>Unknown datatypes. Put your own code here.</h5>\r\n            { fields.unknown }\r\n          </div> : null\r\n        }\r\n  \r\n      </div>\r\n    )\r\n  }\r\n\r\n  return null\r\n\r\n}\r\n\r\n\r\nconst ButtonContainer = props => {\r\n  return (\r\n    <Tooltip title={props.tooltip} placement=\"right\">\r\n      <IconButton\r\n        aria-label={props.tooltip}\r\n        style={props.style}\r\n        onClick={() => {\r\n          if (props.onClick) props.onClick()\r\n        }}>\r\n        {\r\n          props.children\r\n        }\r\n      </IconButton>\r\n    </Tooltip>\r\n  )\r\n}\r\n\r\n/*\r\n<SelectContainerTooltips\r\n        label='Layer type'\r\n        value={point.base_ref}\r\n        options={environment.availableLayers}\r\n        style={{width:'100%'}}\r\n        onChange={val => {\r\n\r\n          // Loading from state\r\n          var state = props.refresh();\r\n          var settings = state.settings;\r\n          var flowpoints = state.flowpoints;\r\n\r\n          // Changing flowpoint layer type\r\n          var point = flowpoints[settings.selected];\r\n          point.content = props.getEmptyFlowpointContent(val)\r\n          point.base_ref = val;\r\n\r\n          // Updating state\r\n          props.updateFlowpoints(flowpoints)\r\n\r\n        }}/>\r\n*/\r\n\r\n\r\nconst SettingsSection = props => {\r\n  var settings = props.state.settings;\r\n  var flowpoints = props.state.flowpoints;\r\n  var environment = props.state.environment;\r\n  const point = flowpoints[settings.selected];\r\n  return (\r\n    <div>\r\n\r\n      <h3 style={{marginTop:0}}>Flowpoint settings</h3>\r\n\r\n        <Autosuggest\r\n          value={point.base_ref}\r\n          options={environment.availableLayers}\r\n          onChange={val => {\r\n\r\n            // Loading from state\r\n            var state = props.refresh();\r\n            var settings = state.settings;\r\n            var flowpoints = state.flowpoints;\r\n  \r\n            // Changing flowpoint layer type\r\n            var point = flowpoints[settings.selected];\r\n            point.content = props.getEmptyFlowpointContent(val)\r\n            point.base_ref = val;\r\n  \r\n            // Updating state\r\n            props.updateFlowpoints(flowpoints)\r\n  \r\n          }}/>\r\n\r\n\r\n        <div style={{paddingTop:15}}>\r\n\r\n          <TextFieldContainer\r\n            label='Layer name'\r\n            value={point.name}\r\n            style={{width:'80%'}}\r\n            onChange={val => {\r\n\r\n              // Loading from state\r\n              var state = props.refresh();\r\n              var flowpoints = state.flowpoints;\r\n              var settings = state.settings;\r\n\r\n              // Changing layer name\r\n              flowpoints[settings.selected].name = val;\r\n\r\n              // Updating state\r\n              props.updateFlowpoints(flowpoints)\r\n\r\n            }}/>\r\n\r\n            <ButtonContainer\r\n              tooltip='Delete flowpoint'\r\n              style={{\r\n                marginLeft: 15,\r\n                marginTop: 5\r\n              }}\r\n              onClick={props.deleteSelected}>\r\n              <DeleteIcon/>\r\n            </ButtonContainer>\r\n\r\n        </div>\r\n\r\n\r\n        {\r\n          point.base_ref !== 'Input' ? <div style={{paddingTop:10, marginLeft:-10}}>\r\n              <SwitchContainer\r\n                label='Use as output'\r\n                value={point.is_output}\r\n                onChange={val => {\r\n\r\n                  // Loading from state\r\n                  var state = props.refresh();\r\n                  var flowpoints = state.flowpoints;\r\n\r\n                  // Changing layer output\r\n                  flowpoints[state.settings.selected].is_output = val;\r\n\r\n                  // Updating state\r\n                  props.updateFlowpoints(flowpoints);\r\n\r\n                }}/>\r\n              <SwitchContainer\r\n                label='Concatenate inputs'\r\n                value={point.concat_inputs}\r\n                onChange={val => {\r\n\r\n                  // Loading from state\r\n                  var state = props.refresh();\r\n                  var flowpoints = state.flowpoints;\r\n\r\n                  // Changing layer output\r\n                  flowpoints[state.settings.selected].concat_inputs = val;\r\n\r\n                  // Updating state\r\n                  props.updateFlowpoints(flowpoints);\r\n\r\n              }}/>\r\n            </div> : null\r\n        }\r\n\r\n        {\r\n          point.concat_inputs ? <div style={{paddingTop:15}}>\r\n            <TextFieldContainer\r\n              label='Concat dim'\r\n              value={point.concat_dim}\r\n              type='number'\r\n              variant='outlined'\r\n              margin='dense'\r\n              style={{\r\n                width: 150,\r\n                paddingRight: 5\r\n              }}\r\n              onChange={val => {\r\n                var flowpoints = props.refresh().flowpoints;\r\n                flowpoints[settings.selected].concat_dim = val;\r\n                props.updateFlowpoints(flowpoints)\r\n              }}/>\r\n          </div> : null\r\n        }\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport const FlowpointTab = props => {\r\n  var settings = props.state.settings;\r\n\r\n  // Nothing selected? Returning msg to select something\r\n  if (settings.selected === null) {\r\n    return (\r\n      <div style={{display:'table', width:'100%', height:'50px'}}>\r\n        <div style={{display:'table-cell', verticalAlign:'middle', textAlign:'center'}}>\r\n          Select a flowpoint to display it's settings.\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // Layer type doesnt exist in current library?\r\n  var show_param_section = true;\r\n  if (!(props.state.environment.library in props.state.flowpoints[props.state.settings.selected].content) && props.state.flowpoints[props.state.settings.selected].base_ref !== 'Input') {\r\n    show_param_section = false;\r\n  }\r\n\r\n  // Paramaters and settings of selected\r\n  var flowpoints = props.state.flowpoints;\r\n  const point = flowpoints[settings.selected];\r\n  return (\r\n    <div style={{padding:15}}>\r\n      \r\n      <SettingsSection\r\n        state={props.state}\r\n        refresh={props.refresh}\r\n        updateFlowpoints={props.updateFlowpoints}\r\n        getEmptyFlowpointContent={props.getEmptyFlowpointContent}\r\n        deleteSelected={props.deleteSelected}/>\r\n      \r\n      {\r\n        show_param_section ? <ParametersSection\r\n          state={props.state}\r\n          refresh={props.refresh}\r\n          updateFlowpoints={props.updateFlowpoints}/> : <div style={{display:'table', width:'100%', height:'50px', paddingTop:20}}>\r\n            <div style={{display:'table-cell', verticalAlign:'middle', textAlign:'center'}}>\r\n              Layer type is not available in your current library.\r\n            </div>\r\n          </div>\r\n      }\r\n\r\n      <TransformsSection\r\n        state={props.state}\r\n        refresh={props.refresh}\r\n        updateFlowpoints={props.updateFlowpoints}/>\r\n\r\n    </div>\r\n  )\r\n\r\n}","import React, { Component } from 'react';\r\n\r\n// Importing local tools\r\nimport { MiscTab } from './MiscTab.js';\r\nimport { CodeTab } from './CodeTab.js';\r\nimport { FlowpointTab } from './FlowpointTab.js';\r\n\r\n\r\n// Styles\r\nimport './SidebarContents.css';\r\n\r\nexport const SidebarContents = props => {\r\n  var state = props.state;\r\n  var visual = state.visual;\r\n  var settings = state.settings;\r\n  return (\r\n    <div\r\n      class='sidebarContents'\r\n      style={{\r\n        backgroundColor: (visual.darkTheme ? '#1b1918' : null)\r\n      }}>\r\n\r\n      {\r\n        settings.tab === 'Misc' ? <MiscTab\r\n          state={state}\r\n          refresh={props.refresh}\r\n          updateFlowpoints={props.updateFlowpoints}\r\n          updateEnvironment={props.updateEnvironment}\r\n          updateVisual={props.updateVisual}\r\n          updateSettings={props.updateSettings}\r\n          notification={props.notification}\r\n          updateAvailableLayers={props.updateAvailableLayers}\r\n          diagramRef={props.diagramRef}\r\n          prepOutputShapes={props.prepOutputShapes}/> : null\r\n      }\r\n      {\r\n        settings.tab === 'Code' ? <CodeTab\r\n          state={state}\r\n          refresh={props.refresh}\r\n          updateFlowpoints={props.updateFlowpoints}\r\n          updateEnvironment={props.updateEnvironment}\r\n          updateVisual={props.updateVisual}\r\n          updateSettings={props.updateSettings}\r\n          notification={props.notification}/> : null\r\n      }\r\n      {\r\n        settings.tab === 'Flowpoint' ? <FlowpointTab\r\n          state={state}\r\n          refresh={props.refresh}\r\n          updateFlowpoints={props.updateFlowpoints}\r\n          updateEnvironment={props.updateEnvironment}\r\n          updateVisual={props.updateVisual}\r\n          updateSettings={props.updateSettings}\r\n          notification={props.notification}\r\n          getEmptyFlowpointContent={props.getEmptyFlowpointContent}\r\n          deleteSelected={props.deleteSelected}/> : null\r\n      }\r\n\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\n\r\n// Styling\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 0,\r\n    overflow:'scroll',\r\n  },\r\n  tabsRoot: {\r\n    borderBottom: '1px solid #1890ff',\r\n  },\r\n  tabsIndicator: {\r\n    backgroundColor: '#1890ff',\r\n  },\r\n  tabRoot: {\r\n    textTransform: 'initial',\r\n    minWidth: 50,\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    marginRight: theme.spacing.unit * 0,\r\n    fontFamily: [\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(','),\r\n    '&:hover': {\r\n      color: '#40a9ff',\r\n      opacity: 1,\r\n    },\r\n    '&$tabSelected': {\r\n      color: '#1890ff',\r\n    },\r\n    '&:focus': {\r\n      color: '#40a9ff',\r\n    },\r\n  },\r\n  tabSelected: {},\r\n  typography: {\r\n    padding: theme.spacing.unit * 0,\r\n  },\r\n});\r\n\r\n\r\n// Main class\r\nclass TabContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      value: props.tab !== undefined ? props.tabs.indexOf(props.tab) : 0\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { value } = this.state;\r\n    const width = Math.ceil(this.props.width/this.props.tabs.length) + 'px'\r\n\r\n    return (\r\n      <div className={classes.root} style={{overflow:'hidden'}}>\r\n        <Tabs\r\n          value={value}\r\n          onChange={(e, value) => {\r\n            this.setState({ value });\r\n            if (this.props.onSelectTab) this.props.onSelectTab(this.props.tabs[value]);\r\n          }}\r\n          textColor=\"primary\"\r\n          classes={{ root: classes.tabsRoot, indicator: classes.tabsIndicator }}\r\n          scrollButtons={false}>\r\n          {\r\n            this.props.tabs.map(value => {\r\n              return (\r\n                <Tab\r\n                  disableRipple\r\n                  classes={{ root: classes.tabRoot, selected: classes.tabSelected }}\r\n                  label={value}\r\n                  style={{width: width}}\r\n                />\r\n              )\r\n            })\r\n          }\r\n        </Tabs>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// Setting proptypes\r\nTabContainer.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\n// Exporting\r\nexport default withStyles(styles)(TabContainer);\r\n","import React, { Component } from 'react';\r\n\r\n// Styles\r\nimport './Sidebar.css';\r\n\r\n// Material\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\n\r\n// Local tools\r\nimport { SidebarHead } from './SidebarHead.js';\r\nimport { SidebarContents } from './SidebarContents.js';\r\nimport TabContainer from './TabContainer.js';\r\n\r\n\r\n// Themes\r\nconst darkMuiTheme = createMuiTheme({\r\n  palette: {\r\n    type: 'dark'\r\n  },\r\n  typography: { useNextVariants: true }\r\n});\r\n\r\nconst lightMuiTheme = createMuiTheme({\r\n  palette: {\r\n    type: 'light'\r\n  },\r\n  typography: { useNextVariants: true }\r\n});\r\n\r\n\r\n// Sidebar\r\nexport const Sidebar = props => {\r\n  var state = props.state;\r\n  var visual = state.visual;\r\n  var settings = state.settings;\r\n  return (\r\n    <MuiThemeProvider theme={visual.darkTheme ? darkMuiTheme : lightMuiTheme}>\r\n\r\n      <Drawer variant='persistent' anchor='left' open={visual.drawerOpen}>\r\n        <div\r\n          class='fullSidebar'\r\n          style={{\r\n            maxWidth: visual.drawerWidth,\r\n            color: (visual.darkTheme ? 'white' : 'black'),\r\n            width: visual.drawerWidth\r\n          }}>\r\n\r\n          <SidebarHead/>\r\n\r\n          <div>\r\n            <TabContainer\r\n              tabs={['Misc', 'Code', 'Flowpoint']}\r\n              tab={settings.tab}\r\n              width={360}\r\n              onSelectTab={tab => {\r\n\r\n                // Loading state\r\n                var state = props.refresh();\r\n                var settings = state.settings;\r\n                var visual = state.visual;\r\n\r\n                // Changing tab\r\n                settings.tab = tab;\r\n\r\n                // Wider drawer if displaying code\r\n                if (tab === 'Code') {\r\n                  visual.drawerWidth = 600;\r\n                } else {\r\n                  visual.drawerWidth = 360;\r\n                }\r\n\r\n                // Updating state\r\n                props.updateSettings(settings);\r\n                props.updateVisual(visual);\r\n\r\n              }}/>\r\n          </div>\r\n          \r\n          <SidebarContents\r\n            state={state}\r\n            refresh={props.refresh}\r\n            updateFlowpoints={props.updateFlowpoints}\r\n            updateEnvironment={props.updateEnvironment}\r\n            updateVisual={props.updateVisual}\r\n            updateSettings={props.updateSettings}\r\n            notification={props.notification}\r\n            getEmptyFlowpointContent={props.getEmptyFlowpointContent}\r\n            deleteSelected={props.deleteSelected}\r\n            updateAvailableLayers={props.updateAvailableLayers}\r\n            diagramRef={props.diagramRef}\r\n            prepOutputShapes={props.prepOutputShapes}/>\r\n\r\n        </div>\r\n      </Drawer>\r\n\r\n    </MuiThemeProvider>\r\n  )\r\n}","import React, { Component } from 'react';\r\nimport { Fab, Tooltip } from '@material-ui/core';\r\n\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile'\r\n\r\n\r\nconst ButtonContainer = props => {\r\n  return (\r\n    <Tooltip title={props.tooltip} placement=\"right\" disableTriggerFocus disableFocusListener>\r\n      <Fab\r\n        style={{\r\n          background: props.color,\r\n          color: '#ffffff',\r\n          zIndex: 6,\r\n          boxShadow: 'none'\r\n        }}\r\n        aria-label={props.tooltip}\r\n        onClick={() => {\r\n          if (props.onClick) props.onClick()\r\n        }}>\r\n        {\r\n          props.children\r\n        }\r\n      </Fab>\r\n    </Tooltip>\r\n  )\r\n}\r\n\r\n\r\nexport const MainButtons = props => {\r\n  var visual = props.state.visual;\r\n  return (\r\n    <div\r\n      style={{\r\n        bottom:'5px',\r\n        left: visual.drawerWidth * visual.drawerOpen + 5 + 'px',\r\n        position: 'fixed',\r\n        transition: 'left 0.4s ease-out'\r\n      }}>\r\n      <div>\r\n\r\n        <div style={{paddingBottom:4}}>\r\n          <ButtonContainer\r\n            color='#00b0ff'\r\n            tooltip='Add flowpoint'\r\n            onClick={props.addFlowpoint}>\r\n            <AddIcon/>\r\n          </ButtonContainer>\r\n        </div>\r\n\r\n        <div style={{paddingBottom:4}}>\r\n          <ButtonContainer\r\n            color='#2979ff'\r\n            tooltip='Copy code to clip-board'\r\n            onClick={props.copyCode}>\r\n            <FileCopyIcon/>\r\n          </ButtonContainer>\r\n        </div>\r\n\r\n        <div style={{paddingBottom:4}}>\r\n          <ButtonContainer\r\n            color='#3d5afe'\r\n            tooltip='save model'\r\n            onClick={props.createLink}>\r\n            <LinkIcon/>\r\n          </ButtonContainer>\r\n        </div>\r\n\r\n        <div style={{paddingBottom:4}}>\r\n          <ButtonContainer\r\n            color='#651fff'\r\n            tooltip='import'\r\n            onClick={props.showFileup}>\r\n            <AttachFileIcon/>\r\n          </ButtonContainer>\r\n        </div>\r\n\r\n        <div style={{paddingBottom:4}}>\r\n          <ButtonContainer\r\n            color='rgb(119 73 221)'\r\n            tooltip='help'\r\n            onClick={props.showHideHelp}>\r\n            <HelpIcon/>\r\n          </ButtonContainer>\r\n        </div>\r\n\r\n        <div>\r\n          <ButtonContainer\r\n            color='#b0bec5'\r\n            tooltip='Show/hide sidebar'\r\n            onClick={props.showHide}>\r\n            <MenuIcon/>\r\n          </ButtonContainer>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}","export function getPointName(flowpoints, key) {\r\n  let p = flowpoints[key];\r\n  return (p.name === '' ? ('p_' + key) : p.name).replace(/ /g, '_')\r\n}\r\n\r\n\r\nexport function dent(indent, n) {\r\n  var msg = ''\r\n  Array.from(Array(n).keys()).map(idx => msg += indent)\r\n  return msg\r\n}\r\n\r\n\r\nexport function FormatInitParams(parameters, indentation, indent, padding) {\r\n  if (padding === undefined) padding = true\r\n  // Getting longest parameter name\r\n  var max_l = 0;\r\n  Object.keys(parameters).map(p_key => {\r\n    if (parameters[p_key].value !== 'None') max_l = Math.max(p_key.length, max_l)\r\n  })\r\n  var msg = ''\r\n  if (padding) msg += '('\r\n  Object.keys(parameters).map(p_key => {\r\n    let param = parameters[p_key];\r\n\r\n    if (param.value !== 'None') {\r\n      // Adding argument\r\n      msg += '\\n' + dent(indent, indentation + 1) + p_key\r\n\r\n      // Aligning with other arguments\r\n      for (var i = 0; i < max_l - p_key.length; i++) msg += ' '\r\n      msg += ' = '\r\n\r\n      // Adding argument values\r\n      if (param.istuple) {\r\n        // Tuples are put in between parantheses\r\n        msg += '(';\r\n        param.value.map(val => msg += (val === '' ? (param.min === Infinity ? 0 : param.min) : val) + ',');\r\n        msg = msg.substring(0, msg.length - 1) + ')';\r\n      } else if (param.type === 'select') {\r\n        msg += \"'\" + param.value + \"'\";\r\n      } else if (param.type === 'bool') {\r\n        msg += (param.value === true ? 'True' : 'False')\r\n      } else if (param.type === 'string') {\r\n        msg += '\"' + param.value + '\"'\r\n      } else {\r\n        msg += (param.value === '' ? (param.min === Infinity ? 0 : param.min) : param.value)\r\n      }\r\n      msg += ','\r\n    }\r\n  })\r\n  if (padding) {\r\n    if (max_l > 0) {\r\n      msg += '\\n' + dent(indent, 1)\r\n    }\r\n    msg += ')'\r\n  }\r\n  return msg\r\n}\r\n\r\n\r\nexport function FormatParamInputs(flowpoints, input_keys) {\r\n  var msg = ''\r\n  input_keys.map(key => msg += getPointName(flowpoints, key) + ', ')\r\n  if (input_keys.length > 0) msg = msg.substring(0, msg.length - 2)\r\n  return msg\r\n}\r\n\r\n\r\nfunction getDummyLibrary(flowpoints) {\r\n  var dummies = {}\r\n  Object.keys(flowpoints).map(key => {\r\n    var dummy = {\r\n      base_ref: flowpoints[key].base_ref,\r\n      name: flowpoints[key].name,\r\n      inputs: [],\r\n      outputs: [],\r\n      ordered: false,\r\n      ready: false,\r\n      downStreamTested: false,\r\n      is_recurrent: false\r\n    }\r\n    Object.keys(flowpoints[key].outputs).map(out_key => {\r\n      dummy.outputs.push(out_key)\r\n    })\r\n    if (flowpoints[key].base_ref === 'Input') {\r\n      dummy.ready = true;\r\n    }\r\n    dummies[key] = dummy;\r\n  })\r\n\r\n  // Adding corresponding inputs\r\n  Object.keys(dummies).map(key => {\r\n    dummies[key].outputs.map(out_key => {\r\n      dummies[out_key].inputs.push(key)\r\n    })\r\n  })\r\n\r\n  // Returning\r\n  return dummies\r\n\r\n}\r\n\r\n\r\nfunction getInputs(flowpoints) {\r\n  var inps = [];\r\n  Object.keys(flowpoints).map(key => {\r\n    if (flowpoints[key].base_ref === 'Input') inps.push(key)\r\n  })\r\n  return inps\r\n}\r\n\r\n\r\nfunction recIsDownStream(dummies, target_key, test_key) {\r\n\r\n  // Returning if matching\r\n  if (target_key === test_key) return true;\r\n\r\n  // Continue only if havent been visited before\r\n  var found_downstream = false\r\n  if (!dummies[test_key].downStreamTested) {\r\n\r\n    // Marking self as visited on this run\r\n    dummies[test_key].downStreamTested = true;\r\n\r\n    // Looking deeper down\r\n    dummies[test_key].outputs.map(out_key => {\r\n      if (!found_downstream) {\r\n        found_downstream = recIsDownStream(dummies, target_key, out_key)\r\n      }\r\n    })\r\n  }\r\n\r\n  // Returning\r\n  return found_downstream\r\n\r\n}\r\n\r\n\r\nfunction isDownStream(dummies, target_key, test_key) {\r\n\r\n  // Resetting downstream helpers\r\n  Object.keys(dummies).map(r_key => dummies[r_key].downStreamTested = false)\r\n\r\n  // Running checks\r\n  return recIsDownStream(dummies, target_key, test_key)\r\n\r\n}\r\n\r\n\r\nfunction isReady(dummies, key) {\r\n  var ready = true;\r\n  dummies[key].inputs.map(test_key => {\r\n    if ((!dummies[test_key].ready && !isDownStream(dummies, test_key, key))) {\r\n      ready = false;\r\n    }\r\n  })\r\n  return ready\r\n}\r\n\r\n\r\nfunction recGetOrder(order, dummies, key) {\r\n\r\n  // Helper\r\n  var dummy = dummies[key];\r\n\r\n  // Checking dummy, going deeper\r\n  if (dummy) {\r\n\r\n    // Visited before? -> Return\r\n    if (dummy.ordered) return order\r\n\r\n    // Dummy ready?\r\n    if (isReady(dummies, key)) {\r\n\r\n      // Making sure dummy is ready\r\n      dummy.ready = true;\r\n\r\n      // Making sure dummy is added to order\r\n      dummy.ordered = true;\r\n      if (!order.includes(key)) order.push(key)\r\n\r\n      // Going deeper\r\n      dummy.outputs.sort().map(out_key => order = recGetOrder(order, dummies, out_key))\r\n\r\n    }\r\n\r\n  }\r\n\r\n  // Returning\r\n  return order\r\n\r\n}\r\n\r\n\r\nfunction getLastUser(order, dummies, target_key) {\r\n  var max_index = -1;\r\n  order.map((test_key, idx) => {\r\n    if (dummies[test_key].inputs.includes(target_key)) max_index = Math.max(max_index, idx)\r\n  })\r\n  return order[max_index]\r\n}\r\n\r\n\r\nfunction getStateNames(order, dummies) {\r\n  var states = {};\r\n\r\n  // Adding all states\r\n  order.map((key, idx) => {\r\n    const point = dummies[key];\r\n\r\n    // Adding to states\r\n    if (!(key in states)) {\r\n      states[key] = getPointName(dummies, key) + (point.base_ref === 'Input' ? '' : '_state');\r\n    }\r\n\r\n    // Setting state of last user\r\n    const last_user = getLastUser(order, dummies, key);\r\n    if (last_user !== null) {\r\n      states[last_user] = states[key];\r\n    }\r\n\r\n  })\r\n\r\n  // Setting state of last node to default\r\n  states[order[order.length - 1]] = 'self.state'\r\n\r\n  // Returning\r\n  return states\r\n\r\n}\r\n\r\n\r\nexport function FlowOrder(state) {\r\n\r\n  // Init helpers\r\n  var inps = getInputs(state.flowpoints);\r\n  var dummies = getDummyLibrary(state.flowpoints);\r\n  var order = [];\r\n  var init_states = [];\r\n  var outs = [];\r\n\r\n  // Adding input flowpoints to beginning of order\r\n  inps.map(key => order.push(key));\r\n\r\n  // Recursively mapping tree\r\n  inps.map(key => order = recGetOrder(order, dummies, key));\r\n\r\n  // Flagging flowpoints with recurrent connections and getting init states\r\n  order.map((key, idx) => {\r\n    var is_recurrent = false;\r\n    dummies[key].outputs.map(out_key => {\r\n      if (idx > order.indexOf(out_key) && !is_recurrent) is_recurrent = true;\r\n    })\r\n    if (is_recurrent || state.flowpoints[key].is_output) {\r\n      dummies[key].is_recurrent = true;\r\n      init_states.push(key)\r\n    }\r\n  })\r\n\r\n  // Outputs\r\n  order.map(key => {\r\n    if (state.flowpoints[key].is_output) outs.push(key)\r\n  })\r\n  if (outs.length === 0) outs = [order[order.length - 1]]\r\n\r\n  // State names\r\n  var states = getStateNames(order, dummies);\r\n\r\n  // Returning\r\n  return {order, inps, states, dummies, init_states, outs}\r\n\r\n}","import { getPointName, FormatParamInputs, dent } from \"./FlowOrder\";\r\n\r\n\r\nfunction getStateName(key, flowpoints, states, init_states) {\r\n  if (init_states.includes(key)) {\r\n    return 'self.' + getPointName(flowpoints, key) + '_state'\r\n  }\r\n  return states[key]\r\n}\r\n\r\n\r\nfunction getOutputTargetName(key, flowpoints) {\r\n  return getPointName(flowpoints, key) + '_target'\r\n}\r\n\r\n\r\nfunction PyTorchImports(indent) {\r\n  var msg = '# Importing PyTorch tools'\r\n  msg += '\\nimport torch, torchvision'\r\n  msg += '\\nfrom torch import nn, optim, cuda'\r\n  msg += '\\n\\n\\n# Importing other libraries'\r\n  msg += '\\nimport numpy as np'\r\n  msg += '\\nimport pandas as pd'\r\n  msg += '\\nimport time'\r\n  msg += '\\n\\n\\n# Seed'\r\n  msg += '\\nnp.random.seed(1234)'\r\n  msg += '\\ntorch.manual_seed(1234)'\r\n  msg += '\\ncuda.manual_seed(1234)'\r\n  msg += '\\ntorch.backends.cudnn.deterministic = True'\r\n  return msg\r\n}\r\n\r\n\r\nfunction Constructor(state, order, indent, dummies, states, init_states, got_hidden_states, library, modelID) {\r\n\r\n  var flowpoints = state.flowpoints;\r\n  var environment = state.environment;\r\n\r\n  let modelname = environment.modelname === '' ? 'NeuralNet' : environment.modelname\r\n  \r\n  // Basics\r\n  var msg = '# Model'\r\n  msg += '\\nclass ' + modelname + '(nn.Module):'\r\n  msg += '\\n\\n' + dent(indent, 1) + 'def __init__(self):'\r\n  msg += '\\n\\n' + dent(indent, 2) + '# Basics'\r\n  msg += '\\n' + dent(indent, 2) + 'super(' + modelname + ', self).__init__()'\r\n  msg += '\\n' + dent(indent, 2) + 'self.name        = ' + (modelID ? (\"'\" + modelID + \"'\") : \"'model'\")\r\n  msg += '\\n' + dent(indent, 2) + 'self.batch_first = ' + (environment.batch_first ? 'True' : 'False')\r\n\r\n  // Prep aligning recurrent states\r\n  var max_l = 0;\r\n  order.map(key => {\r\n    let dummy = dummies[key];\r\n    if (dummy.is_recurrent) {\r\n      max_l = Math.max(max_l, getStateName(key, flowpoints, states, init_states).length);\r\n    }\r\n  })\r\n\r\n  // Initializing recurrent states\r\n  if (max_l > 0) {\r\n    var state_msg = dent(indent, 2) + '# Initializing states with placeholder tensors';\r\n    order.map(key => {\r\n      let dummy = dummies[key];\r\n      if (dummy.is_recurrent) {\r\n\r\n        // Init state\r\n        state_msg += '\\n' + dent(indent, 2) + getStateName(key, flowpoints, states, init_states)\r\n\r\n        // Aligning equals sign\r\n        for (var i = 0; i < max_l - getStateName(key, flowpoints, states, init_states).length; i++) state_msg += ' '\r\n        state_msg += ' = torch.tensor([0], dtype=torch.float64)'\r\n\r\n      }\r\n    })\r\n    msg += '\\n\\n' + state_msg\r\n  }\r\n\r\n  // Initializing all layers\r\n  msg += '\\n\\n' + dent(indent, 2) + '# Initializing all layers'\r\n  order.map(key => {\r\n    let point = flowpoints[key];\r\n    \r\n    if (point.base_ref === 'Concatenate') {\r\n\r\n    } else if (point.base_ref === 'Input') {\r\n\r\n    } else if (point.base_ref === 'Flatten') {\r\n\r\n    } else if (point.base_ref !== 'Mean' && point.base_ref !== 'Maximum') {\r\n      if (flowpoints[key].content[library]) {\r\n        let content = point.content[environment.library.toLowerCase()];\r\n        let parameters = content.parameters\r\n\r\n        // Getting longest parameter name\r\n        var max_l = 0;\r\n        Object.keys(parameters).map(p_key => {\r\n          if (p_key !== 'extras') max_l = Math.max(p_key.length, max_l)\r\n        })\r\n\r\n        // Init object\r\n        let prefix = content.parameters.extras.torchvision ? 'torchvision.models.' : 'nn.'\r\n        msg += '\\n' + dent(indent, 2) + 'self.' + getPointName(flowpoints, key) + ' = ' + prefix + content.reference + '(';\r\n\r\n        // Adding arguments\r\n        Object.keys(parameters).map(p_key => {\r\n\r\n          if (p_key !== 'extras') {\r\n\r\n            let param = parameters[p_key];\r\n          \r\n            // Adding argument\r\n            msg += '\\n' + dent(indent, 3) + p_key\r\n\r\n            // Aligning with other arguments\r\n            for (var i = 0; i < max_l - p_key.length; i++) msg += ' '\r\n            msg += ' = '\r\n\r\n            // Adding argument values\r\n            if (param.istuple) {\r\n              // Tuples are put in between parantheses\r\n              msg += '(';\r\n              param.value.map(val => msg += (val === '' ? (param.min === Infinity ? 0 : param.min) : val) + ',');\r\n              msg = msg.substring(0, msg.length - 1) + ')';\r\n            } else if (param.type === 'select') {\r\n              msg += \"'\" + param.value + \"'\";\r\n            } else if (param.type === 'bool') {\r\n              if (p_key === 'batch_first') {\r\n                msg += 'self.batch_first'\r\n              } else {\r\n                msg += (param.value === true ? 'True' : 'False')\r\n              }\r\n            } else {\r\n              msg += (param.value === '' ? 'None' : param.value)\r\n            }\r\n            msg += ','\r\n\r\n          }\r\n\r\n        })\r\n        if (max_l > 0) msg += '\\n' + dent(indent, 2)\r\n        msg += ')'\r\n      }\r\n    }\r\n  })\r\n\r\n  // Startup routines\r\n  if (got_hidden_states) {\r\n    msg += '\\n\\n' + dent(indent, 2) + '# Running startup routines'\r\n    msg += '\\n' + dent(indent, 2) + 'self.reset_hidden_states()'\r\n  }\r\n\r\n  // Returning\r\n  return msg\r\n\r\n}\r\n\r\n\r\nfunction ResetHidden(flowpoints, order, inps, states, dummies, indent, init_states, library) {\r\n  var msg = dent(indent, 1) + 'def reset_hidden_states(self, sample=None):'\r\n  msg += '\\n' + dent(indent, 2) + 'if type(sample) == torch.Tensor:'\r\n  msg += '\\n' + dent(indent, 3) + 'batch_size = sample.shape[0 if self.batch_first else 1]'\r\n  order.map(key => {\r\n    if (flowpoints[key].base_ref !== 'Input') {\r\n      if (flowpoints[key].content[library]) {\r\n        const parameters = flowpoints[key].content[library].parameters;\r\n        if (parameters.extras.gothidden) {\r\n          if (parameters['hidden_size'] && parameters['num_layers']) {\r\n            msg += '\\n' + dent(indent, 3) + 'self.' + getPointName(flowpoints, key) + '_hidden = '\r\n            const hidden = '\\n' + dent(indent, 4) + 'torch.zeros((' + parameters['num_layers'].value + ', batch_size, ' + parameters['hidden_size'].value + '), device=sample.device)'\r\n            msg += '(' + hidden + ', ' + hidden + '\\n' + dent(indent, 3) + ')'\r\n          }\r\n        }\r\n      }\r\n    }\r\n  })\r\n  msg += '\\n' + dent(indent, 2) + 'else:'\r\n  order.map(key => {\r\n    if (flowpoints[key].base_ref !== 'Input') {\r\n      if (flowpoints[key].content[library]) {\r\n        if (flowpoints[key].content[library].parameters.extras.gothidden) {\r\n          msg += '\\n' + dent(indent, 3) + 'self.' + getPointName(flowpoints, key) + '_hidden = None'\r\n        }\r\n      }\r\n    }\r\n  })\r\n  return msg\r\n}\r\n\r\n\r\nfunction Forward(flowpoints, order, inps, states, dummies, indent, init_states, got_hidden_states, library) {\r\n  var msg = dent(indent, 1) + 'def forward(self, '\r\n\r\n  // Adding all inputs\r\n  const formated_inputs = FormatParamInputs(dummies, inps);\r\n  msg += formated_inputs + '):'\r\n\r\n  // Forwarding\r\n  var step_lib = [];\r\n  var outputs = [];\r\n  order.map(key => {\r\n    const point = dummies[key];\r\n    if (point.base_ref === 'Concatenate') {\r\n      var step_msg = dent(indent, 2) + getStateName(key, flowpoints, states, init_states)\r\n      step_msg += ' = torch.cat(['\r\n      point.inputs.map(inp_key => step_msg += getStateName(inp_key, flowpoints, states, init_states) + ', ')\r\n      step_msg = step_msg.substring(0, step_msg.length - 2) + '], dim=' + flowpoints[key].content.pytorch.parameters.dim.value + ')'\r\n      step_lib.push({ msg:step_msg, title:'Concatenate' })\r\n    } else if (point.base_ref === 'Mean') {\r\n      var step_msg = dent(indent, 2) + getStateName(key, flowpoints, states, init_states)\r\n      step_msg += ' = torch.mean('\r\n      point.inputs.map(inp_key => step_msg += getStateName(inp_key, flowpoints, states, init_states) + ' + ')\r\n      step_msg = step_msg.substring(0, step_msg.length - 3) + ', dim=' + flowpoints[key].content.pytorch.parameters.dim.value + ')'\r\n      step_lib.push({ msg:step_msg, title:'Mean' })\r\n    } else if (point.base_ref === 'Maximum') {\r\n      var step_msg = dent(indent, 2) + getStateName(key, flowpoints, states, init_states)\r\n      step_msg += ' = torch.max('\r\n      point.inputs.map(inp_key => step_msg += getStateName(inp_key, flowpoints, states, init_states) + ' + ')\r\n      step_msg = step_msg.substring(0, step_msg.length - 3) + ', dim=' + flowpoints[key].content.pytorch.parameters.dim.value + ')[0]'\r\n      step_lib.push({ msg:step_msg, title:'Max' })\r\n    } else if (point.base_ref === 'Input') {\r\n\r\n    } else if (point.base_ref === 'Flatten') {\r\n      let sn1 = getStateName(key, flowpoints, states, init_states)\r\n      let sn2 = getStateName(point.inputs[0], flowpoints, states, init_states)\r\n      var step_msg = dent(indent, 2) + sn1\r\n      step_msg += ' = ' + sn2 + '.view(' + sn2 + '.shape[0], -1)'\r\n      step_lib.push({ msg:step_msg, title:'Flatten' })\r\n    } else {\r\n      if (flowpoints[key].content[library]) {\r\n        var step_msg = dent(indent, 2) + getStateName(key, flowpoints, states, init_states)\r\n        if (flowpoints[key].content.pytorch.parameters.extras.gothidden) step_msg += ', self.' + getPointName(flowpoints, key) + '_hidden'\r\n        step_msg += ' = self.' + getPointName(dummies, key) + '(';\r\n        if (point.inputs.length > 1) {\r\n          if (flowpoints[key].concat_inputs) {\r\n            //torch.cat(tensors, dim=0\r\n            step_msg += 'torch.cat(['\r\n            point.inputs.map(inp_key => step_msg += getStateName(inp_key, flowpoints, states, init_states) + ', ')\r\n            step_msg = step_msg.substring(0, step_msg.length -2 ) + '], dim=' + flowpoints[key].concat_dim + ')'\r\n          } else {\r\n            point.inputs.map(inp_key => step_msg += getStateName(inp_key, flowpoints, states, init_states) + ' + ');\r\n            step_msg = step_msg.substring(0, step_msg.length - 3);\r\n          }\r\n        } else {\r\n          step_msg += getStateName(point.inputs[0], flowpoints, states, init_states)\r\n        }\r\n        if (flowpoints[key].content.pytorch.parameters.extras.gothidden) step_msg += ', tuple([_.data for _ in self.' + getPointName(flowpoints, key) + '_hidden]) if self.' + getPointName(flowpoints, key) + '_hidden else None'\r\n        step_msg += ')'\r\n        step_lib.push({ msg:step_msg, title:point.base_ref });\r\n        if (flowpoints[key].contiguous) {\r\n          var reshape_msg = '';\r\n          reshape_msg += dent(indent, 2) + getStateName(key, flowpoints, states, init_states) + ' = ' + getStateName(key, flowpoints, states, init_states) + '.contiguous()'\r\n          if (flowpoints[key].reshape_ndims > 0) {\r\n            reshape_msg += '.view('\r\n            flowpoints[key].reshape_dims.map(val => {\r\n              reshape_msg += val + ', '\r\n            })\r\n            reshape_msg = reshape_msg.substring(0, reshape_msg.length - 2) + ')'\r\n          }\r\n          step_lib.push({ msg:reshape_msg, title:'Tensor transforms' });\r\n        } else if (flowpoints[key].reshape_ndims > 0) {\r\n          var reshape_msg = '';\r\n          reshape_msg += dent(indent, 2) + getStateName(key, flowpoints, states, init_states) + ' = ' + getStateName(key, flowpoints, states, init_states)\r\n          reshape_msg += '.view('\r\n          flowpoints[key].reshape_dims.map(val => {\r\n            reshape_msg += val + ', '\r\n          })\r\n          reshape_msg = reshape_msg.substring(0, reshape_msg.length - 2) + ')'\r\n          step_lib.push({ msg:reshape_msg, title:'Tensor transforms' });\r\n        }\r\n        if (flowpoints[key].is_output) outputs.push(key);\r\n      }\r\n    }\r\n  })\r\n\r\n  // Max length\r\n  var max_l = 0;\r\n  step_lib.map(step => max_l = Math.max(max_l, step.msg.length > 60 ? 0 : step.msg.length))\r\n\r\n  // Adding steps\r\n  step_lib.map(step => {\r\n    \r\n    // Adding step\r\n    msg += '\\n' + step.msg;\r\n\r\n    // Aligning comment with others\r\n    for (var i = 0; i < max_l - step.msg.length; i++) msg += ' ';\r\n    msg += ' # ' + step.title;\r\n  })\r\n\r\n  // Adding return\r\n  if (outputs.length === 0) outputs = [order[order.length-1]];\r\n  msg += '\\n' + dent(indent, 2) + 'return'\r\n  outputs.map(key => {\r\n    msg += ' ' + getStateName(key, flowpoints, states, init_states) + ','\r\n  })\r\n  msg = msg.slice(0, -1)\r\n\r\n  // Returning\r\n  return msg\r\n\r\n}\r\n\r\n// Outdated save and load. Will be deleted.\r\nfunction SaveLoad_old(flowpoints, dummies, order, indent, library, modelname) {\r\n  var msg = dent(indent, 1) + \"def save(self, name=None, extras={}):\"\r\n  msg += '\\n' + dent(indent, 2) + \"if not name: name = self.name\"\r\n  msg += '\\n' + dent(indent, 2) + \"if not '.pth' in name: name += '.pth'\"\r\n  msg += \"\\n\" + dent(indent, 2) + \"torch.save({\"\r\n  order.map(key => {\r\n    const point = dummies[key]\r\n    if (point.base_ref !== 'Input' && point.base_ref !== 'Concatenate' && point.base_ref !== 'Mean' && point.base_ref !== 'Maximum') {\r\n      if (flowpoints[key].content[library]) {\r\n        const pointcode = getPointName(dummies, key)\r\n        msg += \"\\n\" + dent(indent, 3) + \"'\" + pointcode + \"': self.\" + pointcode + ','\r\n      }\r\n    }\r\n  })\r\n  msg += \"\\n\" + dent(indent, 3) + \"'name': self.name,\"\r\n  msg += \"\\n\" + dent(indent, 3) + \"'extras': extras,\"\r\n  msg += \"\\n\" + dent(indent, 2) + \"}, name)\"\r\n  msg += \"\\n\\n\\n\" + dent(indent, 1) + \"@staticmethod\"\r\n  msg += \"\\n\" + dent(indent, 1) + \"def load(name='model'):\"\r\n  msg += \"\\n\" + dent(indent, 2) + \"if not '.pth' in name: name += '.pth'\"\r\n  msg += \"\\n\" + dent(indent, 2) + \"checkpoint = torch.load(name)\"\r\n  msg += \"\\n\" + dent(indent, 2) + \"model = \" + modelname + \"()\"\r\n  order.map(key => {\r\n    const point = dummies[key]\r\n    if (point.base_ref !== 'Input' && point.base_ref !== 'Concatenate' && point.base_ref !== 'Mean' && point.base_ref !== 'Maximum') {\r\n      if (flowpoints[key].content[library]) {\r\n        const pointcode = getPointName(dummies, key)\r\n        msg += \"\\n\" + dent(indent, 2) + \"model.\" + pointcode + \" = checkpoint['\" + pointcode + \"']\"\r\n      }\r\n    }\r\n  })\r\n  msg += \"\\n\" + dent(indent, 2) + \"model.name = checkpoint['name']\"\r\n  msg += \"\\n\" + dent(indent, 2) + \"return model, checkpoint['extras']\"\r\n\r\n  // Returning\r\n  return msg\r\n}\r\n\r\n\r\nfunction SaveLoad(flowpoints, dummies, order, indent, library, modelname) {\r\n  var msg = dent(indent, 1) + \"def save(self, path):\"\r\n  msg += '\\n' + dent(indent, 2) + \"if not '.pt' in path: path += '.pt'\"\r\n  msg += '\\n' + dent(indent, 2) + \"torch.save( self.state_dict(), path )\"\r\n  msg += '\\n\\n\\n' + dent(indent, 1) + \"@staticmethod\"\r\n  msg += '\\n' + dent(indent, 1) + \"def load(path):\"\r\n  msg += '\\n' + dent(indent, 2) + \"if not '.pt' in path: path += '.pt'\"\r\n  msg += '\\n' + dent(indent, 2) + \"model = \" + modelname + \"()\"\r\n  msg += '\\n' + dent(indent, 2) + \"model.load_state_dict( torch.load(path) )\"\r\n  msg += '\\n' + dent(indent, 2) + \"model.eval()\"\r\n  msg += '\\n' + dent(indent, 2) + \"return model\"\r\n  return msg\r\n}\r\n\r\n\r\nfunction ProgressPrinter(indent) {\r\n  var msg = '# Helper for printing progress'\r\n  msg += '\\nclass ProgressPrinter:'\r\n  msg += '\\n\\n' + dent(indent, 1) + 'def __init__(self, epochs, metrics=[]):'\r\n  msg += '\\n\\n' + dent(indent, 2) + '# Settings'\r\n  msg += '\\n' + dent(indent, 2) + 'self.epochs = epochs'\r\n  msg += '\\n' + dent(indent, 2) + 'self.metrics = metrics if type(metrics) == list else [metrics]'\r\n  msg += '\\n\\n' + dent(indent, 2) + '# Helper variables'\r\n  msg += '\\n' + dent(indent, 2) + 'self.epochs_l = 2 * len(str(self.epochs)) + 1'\r\n  msg += '\\n' + dent(indent, 2) + 'self.start_time = time.time()'\r\n  msg += '\\n' + dent(indent, 2) + 'self.log = {'\r\n  msg += '\\n' + dent(indent, 3) + 'metric:[]'\r\n  msg += '\\n' + dent(indent, 3) + \"for metric in ['Train loss', 'Test loss'] + [_.__name__ for _ in self.metrics]\"\r\n  msg += '\\n' + dent(indent, 2) + '}'\r\n  msg += '\\n\\n' + dent(indent, 2) + '# Print header'\r\n  msg += '\\n' + dent(indent, 2) + \"msg = 'Epoch'.rjust(self.epochs_l)\"\r\n  msg += '\\n' + dent(indent, 2) + \"msg += '   ' + 'Train loss'\"\r\n  msg += '\\n' + dent(indent, 2) + \"msg += '   ' + 'Test loss'\"\r\n  msg += '\\n' + dent(indent, 2) + \"msg += '   ' + 'Time left'.rjust(12)\"\r\n  msg += '\\n' + dent(indent, 2) + 'for metric in self.metrics:'\r\n  msg += '\\n' + dent(indent, 3) + \"msg += '   ' + metric.__name__.replace('_score','').rjust(8)\"\r\n  msg += '\\n' + dent(indent, 2) + 'print(msg)'\r\n  msg += '\\n\\n\\n' + dent(indent, 1) + 'def get_log(self):'\r\n  msg += '\\n' + dent(indent, 2) + 'return pd.DataFrame.from_dict(self.log)'\r\n  msg += '\\n\\n\\n' + dent(indent, 1) + 'def step(self, epoch, targets, predictions, train_loss, test_loss=None):'\r\n  msg += '\\n\\n' + dent(indent, 2) + '# Epoch and loss'\r\n  msg += '\\n' + dent(indent, 2) + \"msg = (str(epoch + 1) + '/' + str(self.epochs)).rjust(self.epochs_l)\"\r\n  msg += '\\n' + dent(indent, 2) + \"msg += ' | ' + str(train_loss).rjust(10)[:10]\"\r\n  msg += '\\n' + dent(indent, 2) + \"msg += ' | ' + str(test_loss).rjust(9)[:9]\"\r\n  msg += '\\n' + dent(indent, 2) + \"self.log['Train loss'].append(train_loss)\"\r\n  msg += '\\n' + dent(indent, 2) + \"self.log['Test loss'].append(test_loss)\"\r\n  msg += '\\n\\n' + dent(indent, 2) + \"# ETA\"\r\n  msg += '\\n' + dent(indent, 2) + \"eta_s = ((time.time() - self.start_time) / (epoch + 1)) * (self.epochs - epoch - 1)\"\r\n  msg += '\\n' + dent(indent, 2) + \"eta_msg = f'{round(eta_s // 3600)}h ' if eta_s > 3600 else ''\"\r\n  msg += '\\n' + dent(indent, 2) + \"eta_msg += f'{round(eta_s % 3600 // 60)}m ' if eta_s > 60 else ''\"\r\n  msg += '\\n' + dent(indent, 2) + \"eta_msg += f'{round(eta_s % 60)}s'\"\r\n  msg += '\\n' + dent(indent, 2) + \"msg += ' | ' + eta_msg.rjust(12)\"\r\n  msg += '\\n\\n' + dent(indent, 2) + \"# Metrics\"\r\n  msg += '\\n' + dent(indent, 2) + \"for metric in self.metrics:\"\r\n  msg += '\\n' + dent(indent, 3) + \"value = metric(targets, predictions)\"\r\n  msg += '\\n' + dent(indent, 3) + \"_name = metric.__name__.replace('_score','').rjust(8)\"\r\n  msg += '\\n' + dent(indent, 3) + \"l = len(_name)\"\r\n  msg += '\\n' + dent(indent, 3) + \"msg += ' | ' + str(value).rjust(l)[:l]\"\r\n  msg += '\\n' + dent(indent, 3) + \"self.log[metric.__name__].append(value)\"\r\n  msg += '\\n\\n' + dent(indent, 2) + \"# Print message\"\r\n  msg += '\\n' + dent(indent, 2) + \"print(msg)\"\r\n  return msg\r\n}\r\n\r\n\r\nfunction Fit(flowpoints, order, inps, states, dummies, indent, init_states, got_hidden_states, library, outs) {\r\n\r\n  const formated_inputs = FormatParamInputs(dummies, inps);\r\n  const formated_outputs = FormatParamInputs(dummies, outs);\r\n\r\n  var formated_inputs_with_device = ''\r\n  inps.map(key => formated_inputs_with_device += getPointName(dummies, key) + '.to(device), ')\r\n  formated_inputs_with_device = formated_inputs_with_device.substring(0, formated_inputs_with_device.length - 2)\r\n  \r\n  var formated_outputs_with_device = ''\r\n  outs.map(key => formated_outputs_with_device += getPointName(dummies, key) + '.to(device), ')\r\n  formated_outputs_with_device = formated_outputs_with_device.substring(0, formated_outputs_with_device.length - 2)\r\n\r\n  var msg = ProgressPrinter(indent)\r\n\r\n  msg += '\\n\\n\\n\\n# Helper function for training model'\r\n  msg += '\\n' + 'def fit(model,'\r\n  msg += '\\n' + dent(indent, 2) + 'train,'\r\n  msg += '\\n' + dent(indent, 2) + 'test=None,'\r\n  msg += '\\n' + dent(indent, 2) + 'epochs=10,'\r\n  msg += '\\n' + dent(indent, 2) + 'optimizer=optim.Adam,'\r\n  msg += '\\n' + dent(indent, 2) + 'criterion=nn.CrossEntropyLoss,'\r\n  msg += '\\n' + dent(indent, 2) + 'lr=0.001,'\r\n  msg += '\\n' + dent(indent, 2) + 'batch_size=32,'\r\n  msg += '\\n' + dent(indent, 2) + 'shuffle=True,'\r\n  msg += '\\n' + dent(indent, 2) + 'workers=4,'\r\n  msg += '\\n' + dent(indent, 2) + 'save_best=True,'\r\n  msg += '\\n' + dent(indent, 2) + 'metrics=[]):'\r\n  msg += '\\n\\n' + dent(indent, 1) + '# Creating data loaders'\r\n  msg += '\\n' + dent(indent, 1) + 'train_loader = torch.utils.data.DataLoader('\r\n  msg += '\\n' + dent(indent, 2) + 'train,'\r\n  msg += '\\n' + dent(indent, 2) + 'batch_size=batch_size,'\r\n  msg += '\\n' + dent(indent, 2) + 'shuffle=shuffle,'\r\n  msg += '\\n' + dent(indent, 2) + 'num_workers=workers'\r\n  msg += '\\n' + dent(indent, 1) + ')'\r\n  msg += '\\n' + dent(indent, 1) + 'if test:'\r\n  msg += '\\n' + dent(indent, 2) + 'test_loader = torch.utils.data.DataLoader('\r\n  msg += '\\n' + dent(indent, 3) + 'test,'\r\n  msg += '\\n' + dent(indent, 3) + 'batch_size=batch_size,'\r\n  msg += '\\n' + dent(indent, 3) + 'shuffle=False,'\r\n  msg += '\\n' + dent(indent, 3) + 'num_workers=workers'\r\n  msg += '\\n' + dent(indent, 2) + ')'\r\n  msg += '\\n' + dent(indent, 2) + 'best_loss = 1e6'\r\n  msg += '\\n\\n' + dent(indent, 1) + '# Init optimizer and criterion'\r\n  msg += '\\n' + dent(indent, 1) + \"optimizer = optimizer( filter(lambda p: p.requires_grad, model.parameters()), lr=lr )\"\r\n  msg += '\\n' + dent(indent, 1) + \"criterion = criterion()\"\r\n  msg += '\\n\\n' + dent(indent, 1) + \"# Device\"\r\n  msg += '\\n' + dent(indent, 1) + \"device = next(model.parameters()).device\"\r\n  msg += '\\n' + dent(indent, 1) + \"print(f'Training model on {device}')\"\r\n  msg += '\\n\\n' + dent(indent, 1) + \"# Prep model\"\r\n  msg += '\\n' + dent(indent, 1) + \"model.train()\"\r\n  msg += '\\n\\n' + dent(indent, 1) + \"# Progress\"\r\n  msg += '\\n' + dent(indent, 1) + \"progress_printer = ProgressPrinter(epochs, metrics)\"\r\n  msg += '\\n\\n' + dent(indent, 1) + '# Gracefully interrupting training'\r\n  msg += '\\n' + dent(indent, 1) + 'try:'\r\n  msg += '\\n\\n' + dent(indent, 2) + \"# Looping through epochs\"\r\n  msg += '\\n' + dent(indent, 2) + \"for epoch in range(epochs):\"\r\n  msg += '\\n\\n' + dent(indent, 3) + \"# Reset epoch loss\"\r\n  msg += '\\n' + dent(indent, 3) + \"train_loss, test_loss = 0, 0\"\r\n  msg += '\\n\\n' + dent(indent, 3) + \"# Reset predictions and targets\"\r\n  msg += '\\n' + dent(indent, 3) + \"predictions, targets = [], []\"\r\n  msg += '\\n\\n' + dent(indent, 3) + \"# Looping through training data\"\r\n  msg += '\\n' + dent(indent, 3) + \"for \" + formated_inputs + \", \" + formated_outputs + \" in train_loader:\"\r\n  msg += '\\n\\n' + dent(indent, 4) + \"# Prediction\"\r\n  msg += '\\n' + dent(indent, 4) + \"prediction = model( \" + formated_inputs_with_device + ' )'\r\n  msg += '\\n\\n' + dent(indent, 4) + \"# Loss\"\r\n  msg += '\\n' + dent(indent, 4) + \"loss = criterion( prediction, \" + formated_outputs_with_device + \" )\"\r\n  msg += '\\n' + dent(indent, 4) + \"train_loss += loss.item()\"\r\n  msg += '\\n\\n' + dent(indent, 4) + \"# Backward pass and optimization\"\r\n  msg += '\\n' + dent(indent, 4) + \"loss.backward()       # Backward pass\"\r\n  msg += '\\n' + dent(indent, 4) + \"optimizer.step()      # Optimizing weights\"\r\n  msg += '\\n' + dent(indent, 4) + \"optimizer.zero_grad() # Clearing gradients\"\r\n  msg += '\\n\\n' + dent(indent, 3) + '# Average train loss'\r\n  msg += '\\n' + dent(indent, 3) + 'train_loss /= len(train)'\r\n  msg += '\\n\\n' + dent(indent, 3) + \"# Testing step\"\r\n  msg += '\\n' + dent(indent, 3) + \"if test:\"\r\n  msg += '\\n\\n' + dent(indent, 4) + \"# Switching off autograd\"\r\n  msg += '\\n' + dent(indent, 4) + \"with torch.no_grad():\"\r\n  msg += '\\n\\n' + dent(indent, 5) + '# Looping through testing data'\r\n  msg += '\\n' + dent(indent, 5) + \"for \" + formated_inputs + \", \" + formated_outputs + \" in test_loader:\"\r\n  msg += '\\n\\n' + dent(indent, 6) + \"# Prediction\"\r\n  msg += '\\n' + dent(indent, 6) + \"prediction = model( \" + formated_inputs_with_device + ' )'\r\n  msg += '\\n\\n' + dent(indent, 6) + \"# Loss\"\r\n  msg += '\\n' + dent(indent, 6) + \"loss = criterion( prediction, \" + formated_outputs_with_device + \" )\"\r\n  msg += '\\n' + dent(indent, 6) + \"test_loss += loss.item()\"\r\n  msg += '\\n\\n' + dent(indent, 6) + \"# Appending predictions and targets\"\r\n  msg += '\\n' + dent(indent, 6) + \"for pred, targ in zip(prediction.cpu().detach().numpy().squeeze(),\"\r\n  msg += '\\n' + dent(indent, 11) + '  ' + formated_outputs + \".cpu().detach().numpy().squeeze()):\"\r\n  msg += '\\n' + dent(indent, 7) + \"predictions.append(pred.reshape(-1))\"\r\n  msg += '\\n' + dent(indent, 7) + \"targets.append(targ.reshape(-1))\"\r\n  msg += '\\n\\n' + dent(indent, 5) + '# Average test loss'\r\n  msg += '\\n' + dent(indent, 5) + 'test_loss /= len(test)'\r\n  msg += '\\n\\n' + dent(indent, 5) + '# Saving best model?'\r\n  msg += '\\n' + dent(indent, 5) + 'if save_best and best_loss > test_loss:'\r\n  msg += '\\n' + dent(indent, 6) + 'best_loss = test_loss'\r\n  msg += '\\n' + dent(indent, 6) + \"torch.save(model.state_dict(), 'best_model.pth')\"\r\n  msg += '\\n\\n' + dent(indent, 3) + \"# Progress\"\r\n  msg += '\\n' + dent(indent, 3) + \"progress_printer.step(epoch,\"\r\n  msg += '\\n' + dent(indent, 8) + \"  np.array(targets),\"\r\n  msg += '\\n' + dent(indent, 8) + \"  np.array(predictions),\"\r\n  msg += '\\n' + dent(indent, 8) + \"  train_loss,\"\r\n  msg += '\\n' + dent(indent, 8) + \"  test_loss)\"\r\n  msg += '\\n\\n' + dent(indent, 1) + '# Handling user interruption'\r\n  msg += '\\n' + dent(indent, 1) + 'except KeyboardInterrupt:'\r\n  msg += '\\n' + dent(indent, 2) + \"print('Gracefully interrupting training')\"\r\n  msg += '\\n' + dent(indent, 2) + 'optimizer.zero_grad()'\r\n  msg += '\\n' + dent(indent, 2) + 'pass'\r\n  msg += '\\n\\n' + dent(indent, 1) + '# Finish and return'\r\n  msg += '\\n' + dent(indent, 1) + 'model.eval()'\r\n  msg += '\\n' + dent(indent, 1) + 'cuda.empty_cache()'\r\n  msg += '\\n' + dent(indent, 1) + 'return progress_printer.get_log()'\r\n  return msg\r\n}\r\n\r\n\r\nfunction Predict(indent, dummies, inps) {\r\n  const formated_inputs = FormatParamInputs(dummies, inps);\r\n  var msg = dent(indent, 1) + 'def predict(self, ' + formated_inputs + '):'\r\n  msg += '\\n' + dent(indent, 2) + 'device = next(self.parameters()).device # Current device'\r\n  msg += '\\n' + dent(indent, 2) + 'self.eval()                             # Switch to eval mode'\r\n  msg += '\\n' + dent(indent, 2) + 'with torch.no_grad():                   # Switch off autograd'\r\n  msg += '\\n' + dent(indent, 3) + 'return self('\r\n  inps.map(key => msg += getPointName(dummies, key) + '.to(device), ')\r\n  msg = msg.substring(0, msg.length - 2)\r\n  msg += ')'\r\n  return msg\r\n}\r\n\r\n\r\nexport function PyTorchParser(state, order, inps, states, dummies, indent, init_states, outs) {\r\n\r\n  var flowpoints = state.flowpoints;\r\n  const library = state.environment.library.toLowerCase()\r\n\r\n  // Imports\r\n  var msg = PyTorchImports(indent)\r\n\r\n  // Need hidden states?\r\n  var got_hidden_states = false\r\n  order.map(key => {\r\n    if (flowpoints[key].base_ref !== 'Input') {\r\n      if (flowpoints[key].content[library]) {\r\n        if (flowpoints[key].content[library].parameters.extras.gothidden) {\r\n          got_hidden_states = true\r\n        }\r\n      }\r\n    }\r\n  })\r\n\r\n  // Adding all code\r\n  msg += '\\n\\n\\n' + Constructor(state, order, indent, dummies, states, init_states, got_hidden_states, library, state.settings.modelID);\r\n  msg += '\\n\\n\\n' + Forward(flowpoints, order, inps, states, dummies, indent, init_states, got_hidden_states, library);\r\n  if (got_hidden_states) msg += '\\n\\n\\n' + ResetHidden(flowpoints, order, inps, states, dummies, indent, init_states, library);\r\n  if (state.environment.include_predict) msg += '\\n\\n\\n' + Predict(indent, dummies, inps)\r\n  if (state.environment.include_saveload) msg += '\\n\\n\\n' + SaveLoad(flowpoints, dummies, order, indent, library, state.environment.modelname === '' ? 'NeuralNet' : state.environment.modelname);\r\n  if (state.environment.include_training) msg += '\\n\\n\\n\\n' +  Fit(flowpoints, order, inps, states, dummies, indent, init_states, got_hidden_states, library, outs)\r\n\r\n  // Returning\r\n  return msg\r\n}","import { FlowOrder } from \"./FlowOrder\";\r\nimport { PyTorchParser } from \"./PytorchParser\";\r\nimport { TensorFlowParser } from \"./TensorflowParser\";\r\n\r\n\r\nfunction ReplaceAll(str, search, replacement) {\r\n  var newstr = ''\r\n  str.split(search).map(val => {newstr += val + replacement})\r\n  return newstr.substring(0, newstr.length - replacement.length)\r\n}\r\n\r\n\r\nconst code_parsers = {\r\n  pytorch: PyTorchParser,\r\n  tensorflow: TensorFlowParser\r\n}\r\n\r\n\r\nfunction DefaultMessage(state) {\r\n  var msg = \"\";\r\n  msg += \"'''\\n\";\r\n  msg += \"Created using flowpoints.io\\n\\n\";\r\n  if (state.settings.modelID) {\r\n    msg += \"Link to model:\\n\";\r\n    msg += \"https://mariusbrataas.github.io/flowpoints_ml/?p=\" + state.settings.modelID + \"\\n\\n\";\r\n  }\r\n  msg += \"LICENSE:\\n\"\r\n  msg += \"https://github.com/mariusbrataas/flowpoints_ml/blob/master/LICENSE\"\r\n  if (state.environment.notes !== '') {\r\n    var notes = state.environment.notes;\r\n    notes = ReplaceAll(notes, \"'\", '')\r\n    msg += '\\n\\nNOTES:\\n' + notes\r\n  }\r\n  msg += \"\\n'''\\n\\n\\n\"\r\n  return msg\r\n}\r\n\r\n\r\nexport function Parser(state) {\r\n\r\n  if (Object.keys(state.flowpoints).length > 0) {\r\n\r\n    // Order and inputs\r\n    const tmp = FlowOrder(state)\r\n    const flow_order = tmp.order;\r\n    const inps = tmp.inps;\r\n    const states = tmp.states;\r\n    const init_states = tmp.init_states;\r\n    const outs = tmp.outs;\r\n    var dummies = tmp.dummies;\r\n\r\n    // Init msg with default text\r\n    var msg = DefaultMessage(state)\r\n\r\n    // Parsing\r\n    const lib = state.environment.library.toLowerCase()\r\n    if (lib in code_parsers) {\r\n      msg += code_parsers[lib](state, flow_order, inps, states, dummies, '    ', init_states, outs)\r\n    }\r\n\r\n    // Returning\r\n    return {msg, order:flow_order, dummies}\r\n\r\n  }\r\n\r\n  return {msg:'', order:[], dummies:{}}\r\n\r\n}","import { getPointName, FormatParamInputs, dent, FormatInitParams } from \"./FlowOrder\";\r\n\r\n\r\nfunction TensorFlowImports() {\r\n  var msg = '# Importing TensorFlow tools'\r\n  msg += '\\nimport tensorflow as tf'\r\n  return msg\r\n}\r\n\r\n\r\nfunction Constructor(state, order, inps, dummies, indent) {\r\n\r\n  var flowpoints = state.flowpoints;\r\n  var environment = state.environment;\r\n\r\n  // Basics\r\n  var msg = '# Model'\r\n  msg += \"\\ndef NeuralNet(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy']):\"\r\n\r\n  // Initializing inputs\r\n  msg += '\\n\\n' + dent(indent, 1) + '# Initializing inputs'\r\n  order.map(key => {\r\n    let point = flowpoints[key]\r\n    let current_point_name = getPointName(flowpoints, key);\r\n\r\n    if (inps.includes(key)) {\r\n      let content = point.content;\r\n      msg += '\\n' + dent(indent, 1) + current_point_name + ' = tf.keras.layers.Input(('\r\n      Object.keys(content.dimensions).sort().map(idx => msg += '' + content.dimensions[idx] + ',')\r\n      msg += \"), name='\" + current_point_name + \"')\"\r\n    }\r\n  })\r\n\r\n  // Initializing layers\r\n  var current_point_name = '';\r\n  var current_point_key = '';\r\n  var outputs = [];\r\n  msg += '\\n\\n' + dent(indent, 1) + '# Initializing layers'\r\n  order.map(key => {\r\n    let point = flowpoints[key]\r\n    current_point_name = getPointName(flowpoints, key);\r\n    current_point_key = key\r\n\r\n    if (point.base_ref !== 'Input') {\r\n      const content = point.content[environment.library.toLowerCase()];\r\n\r\n      if (content) {\r\n        const rawparams = content.parameters;\r\n        var parameters = { name:{type:'string', value:current_point_name} }\r\n        Object.keys(rawparams).map(raw_p_key => {\r\n          if (raw_p_key !== 'extras') parameters[raw_p_key] = rawparams[raw_p_key]\r\n        })\r\n        //parameters['name'] = {type:'string', value:current_point_name};\r\n        let inputs = dummies[key].inputs;\r\n\r\n        /*\r\n        Need an add-operation first?\r\n        If a node got multiple inputs and is not \"Concatenate\", those inputs should be added together.\r\n        */ \r\n        if (inputs.length > 1) {\r\n\r\n          if (point.base_ref === 'Concatenate') {\r\n\r\n            // Adding inputs\r\n            msg += '\\n' + dent(indent, 1) + current_point_name + ' = tf.keras.layers.Concatenate(axis=' + point.concat_dim + ')('\r\n            msg += '\\n' + dent(indent, 2) + '['\r\n            inputs.map(inp_key => {\r\n              msg += '\\n' + dent(indent, 3) + getPointName(flowpoints, inp_key) + ','\r\n            })\r\n            msg = msg.slice(0, -1)\r\n            msg += '\\n' + dent(indent, 2) + ']'\r\n            msg += '\\n' + dent(indent, 1) + ')'\r\n\r\n          } else {\r\n\r\n            if (point.concat_inputs) {\r\n\r\n              // Concat name\r\n              var concatname = \"'concat_\"\r\n              inputs.map(inp_key => concatname += getPointName(flowpoints, inp_key) + '_')\r\n              concatname = concatname.slice(0, -1) + \"'\"\r\n\r\n              // Creating layer\r\n              msg += '\\n' + dent(indent, 1) + current_point_name + ' = tf.keras.layers.' + content.reference\r\n              msg += FormatInitParams(parameters, 1, indent)\r\n              msg += '('\r\n              msg += '\\n' + dent(indent, 2) + \"tf.keras.layers.Concatenate(name=\" + concatname + \", axis=\" + point.concat_dim + \")([\"\r\n              inputs.map(inp_key => {\r\n                msg += '\\n' + dent(indent, 3) + getPointName(flowpoints, inp_key) + ','\r\n              })\r\n              msg = msg.slice(0, -1)\r\n              msg += '\\n' + dent(indent, 2) + '])'\r\n              msg += '\\n' + dent(indent, 1) + ')'\r\n\r\n            } else {\r\n\r\n              // Adder name\r\n              var addname = \"'add_\"\r\n              inputs.map(inp_key => addname += getPointName(flowpoints, inp_key) + '_')\r\n              addname = addname.slice(0, -1) + \"'\"\r\n\r\n              // Creating layer\r\n              msg += '\\n' + dent(indent, 1) + current_point_name + ' = tf.keras.layers.' + content.reference\r\n              msg += FormatInitParams(parameters, 1, indent)\r\n              msg += '('\r\n              msg += '\\n' + dent(indent, 2) + \"tf.keras.layers.Add(name=\" + addname + \")([\"\r\n              inputs.map(inp_key => {\r\n                msg += '\\n' + dent(indent, 3) + getPointName(flowpoints, inp_key) + ','\r\n              })\r\n              msg = msg.slice(0, -1)\r\n              msg += '\\n' + dent(indent, 2) + '])'\r\n              msg += '\\n' + dent(indent, 1) + ')'\r\n\r\n            }\r\n\r\n          }\r\n\r\n        } else {\r\n\r\n          // Creating layer\r\n          msg += '\\n' + dent(indent, 1) + current_point_name + ' = tf.keras.layers.' + content.reference\r\n          msg += FormatInitParams(parameters, 1, indent)\r\n          msg += '(' + getPointName(flowpoints, inputs[0]) + ')'\r\n\r\n        }\r\n        if (point.is_output) outputs.push(current_point_key)\r\n      } else {\r\n        msg += '\\n\\nCOULD NOT ADD ' + current_point_name + ' (' + point.base_ref + ')!'\r\n        msg += '\\nThe layertype is not available in the the currently selected library.\\n\\n'\r\n      }\r\n    }\r\n  })\r\n\r\n  // Fixing outputs?\r\n  if (outputs.length === 0 && current_point_key !== '') outputs.push(current_point_key)\r\n\r\n  // Creating model\r\n  msg += '\\n\\n' + dent(indent, 1) + '# Creating model'\r\n  msg += '\\n' + dent(indent, 1) + '_model = tf.keras.models.Model('\r\n  if (inps.length > 0) {\r\n    msg += '\\n' + dent(indent, 2) + 'inputs  = [' + FormatParamInputs(dummies, inps) + '],'\r\n  }\r\n  if (outputs.length > 0) {\r\n    msg += '\\n' + dent(indent, 2) + 'outputs = [' + FormatParamInputs(dummies, outputs) + ']'\r\n  }\r\n  if (state.settings.modelID !== '' && state.settings.modelID !== null) {\r\n    msg += ','\r\n    msg += '\\n' + dent(indent, 2) + \"name    = 'flowpoints.io/?p=\" + state.settings.modelID + \"'\"\r\n  }\r\n  msg += '\\n' + dent(indent, 1) + ')'\r\n\r\n  // Compiling model\r\n  msg += '\\n\\n' + dent(indent, 1) + '# Compiling model'\r\n  msg += '\\n' + dent(indent, 1) + \"_model.compile(\"\r\n  msg += '\\n' + dent(indent, 2) + \"optimizer = optimizer,\"\r\n  msg += '\\n' + dent(indent, 2) + \"loss      = loss,\"\r\n  msg += '\\n' + dent(indent, 2) + \"metrics   = metrics\"\r\n  msg += '\\n' + dent(indent, 1) + ')'\r\n\r\n  // Returning model\r\n  msg += '\\n\\n' + dent(indent, 1) + '# Returning model'\r\n  msg += '\\n' + dent(indent, 1) + 'return _model'\r\n\r\n  // Returning\r\n  return msg\r\n\r\n}\r\n\r\n\r\n\r\nexport function TensorFlowParser(state, order, inps, states, dummies, indent) {\r\n\r\n  var flowpoints = state.flowpoints;\r\n\r\n  // Imports\r\n  var msg = TensorFlowImports()\r\n\r\n  // Adding all code\r\n  msg += '\\n\\n\\n' + Constructor(state, order, inps, dummies, indent)\r\n\r\n  // Returning\r\n  return msg\r\n}","export function getBaseLibrary() {\r\n  return {\r\n    \"AbstractRNNCell\": {\r\n      \"tensorflow\": \"AbstractRNNCell\"\r\n    },\r\n    \"Activation\": {\r\n      \"tensorflow\": \"Activation\"\r\n    },\r\n    \"ActivityRegularization\": {\r\n      \"tensorflow\": \"ActivityRegularization\"\r\n    },\r\n    \"AdaptiveAvgPool1d\": {\r\n      \"pytorch\": \"AdaptiveAvgPool1d\"\r\n    },\r\n    \"AdaptiveAvgPool2d\": {\r\n      \"pytorch\": \"AdaptiveAvgPool2d\"\r\n    },\r\n    \"AdaptiveAvgPool3d\": {\r\n      \"pytorch\": \"AdaptiveAvgPool3d\"\r\n    },\r\n    \"AdaptiveLogSoftmaxWithLoss\": {\r\n      \"pytorch\": \"AdaptiveLogSoftmaxWithLoss\"\r\n    },\r\n    \"AdaptiveMaxPool1d\": {\r\n      \"pytorch\": \"AdaptiveMaxPool1d\"\r\n    },\r\n    \"AdaptiveMaxPool2d\": {\r\n      \"pytorch\": \"AdaptiveMaxPool2d\"\r\n    },\r\n    \"AdaptiveMaxPool3d\": {\r\n      \"pytorch\": \"AdaptiveMaxPool3d\"\r\n    },\r\n    \"Add\": {\r\n      \"tensorflow\": \"Add\"\r\n    },\r\n    \"AlphaDropout\": {\r\n      \"pytorch\": \"AlphaDropout\",\r\n      \"tensorflow\": \"AlphaDropout\"\r\n    },\r\n    \"Average\": {\r\n      \"tensorflow\": \"Average\"\r\n    },\r\n    \"AveragePooling1D\": {\r\n      \"tensorflow\": \"AveragePooling1D\"\r\n    },\r\n    \"AveragePooling2D\": {\r\n      \"tensorflow\": \"AveragePooling2D\"\r\n    },\r\n    \"AveragePooling3D\": {\r\n      \"tensorflow\": \"AveragePooling3D\"\r\n    },\r\n    \"AvgPool1d\": {\r\n      \"pytorch\": \"AvgPool1d\"\r\n    },\r\n    \"AvgPool2d\": {\r\n      \"pytorch\": \"AvgPool2d\"\r\n    },\r\n    \"AvgPool3d\": {\r\n      \"pytorch\": \"AvgPool3d\"\r\n    },\r\n    \"BatchNorm1d\": {\r\n      \"pytorch\": \"BatchNorm1d\"\r\n    },\r\n    \"BatchNorm2d\": {\r\n      \"pytorch\": \"BatchNorm2d\"\r\n    },\r\n    \"BatchNorm3d\": {\r\n      \"pytorch\": \"BatchNorm3d\"\r\n    },\r\n    \"BatchNormalization\": {\r\n      \"tensorflow\": \"BatchNormalization\"\r\n    },\r\n    \"Bidirectional\": {\r\n      \"tensorflow\": \"Bidirectional\"\r\n    },\r\n    \"Bilinear\": {\r\n      \"pytorch\": \"Bilinear\"\r\n    },\r\n    \"CELU\": {\r\n      \"pytorch\": \"CELU\"\r\n    },\r\n    \"Concatenate\": {\r\n      \"pytorch\": \"Concatenate\",\r\n      \"tensorflow\": \"Concatenate\"\r\n    },\r\n    \"ConstantPad1d\": {\r\n      \"pytorch\": \"ConstantPad1d\"\r\n    },\r\n    \"ConstantPad2d\": {\r\n      \"pytorch\": \"ConstantPad2d\"\r\n    },\r\n    \"ConstantPad3d\": {\r\n      \"pytorch\": \"ConstantPad3d\"\r\n    },\r\n    \"Conv1d\": {\r\n      \"pytorch\": \"Conv1d\",\r\n      \"tensorflow\": \"Conv1D\"\r\n    },\r\n    \"Conv2d\": {\r\n      \"pytorch\": \"Conv2d\",\r\n      \"tensorflow\": \"Conv2D\"\r\n    },\r\n    \"Conv3d\": {\r\n      \"pytorch\": \"Conv3d\",\r\n      \"tensorflow\": \"Conv3D\"\r\n    },\r\n    \"ConvLSTM2D\": {\r\n      \"tensorflow\": \"ConvLSTM2D\"\r\n    },\r\n    \"ConvTranspose1d\": {\r\n      \"pytorch\": \"ConvTranspose1d\"\r\n    },\r\n    \"ConvTranspose2d\": {\r\n      \"pytorch\": \"ConvTranspose2d\",\r\n      \"tensorflow\": \"Conv2DTranspose\"\r\n    },\r\n    \"ConvTranspose3d\": {\r\n      \"pytorch\": \"ConvTranspose3d\",\r\n      \"tensorflow\": \"Conv3DTranspose\"\r\n    },\r\n    \"Cropping1D\": {\r\n      \"tensorflow\": \"Cropping1D\"\r\n    },\r\n    \"Cropping2D\": {\r\n      \"tensorflow\": \"Cropping2D\"\r\n    },\r\n    \"Cropping3D\": {\r\n      \"tensorflow\": \"Cropping3D\"\r\n    },\r\n    \"Dense\": {\r\n      \"tensorflow\": \"Dense\"\r\n    },\r\n    \"DenseFeatures\": {\r\n      \"tensorflow\": \"DenseFeatures\"\r\n    },\r\n    \"DepthwiseConv2D\": {\r\n      \"tensorflow\": \"DepthwiseConv2D\"\r\n    },\r\n    \"Dot\": {\r\n      \"tensorflow\": \"Dot\"\r\n    },\r\n    \"Dropout\": {\r\n      \"pytorch\": \"Dropout\",\r\n      \"tensorflow\": \"Dropout\"\r\n    },\r\n    \"Dropout2d\": {\r\n      \"pytorch\": \"Dropout2d\"\r\n    },\r\n    \"Dropout3d\": {\r\n      \"pytorch\": \"Dropout3d\"\r\n    },\r\n    \"ELU\": {\r\n      \"pytorch\": \"ELU\",\r\n      \"tensorflow\": \"ELU\"\r\n    },\r\n    \"Embedding\": {\r\n      \"pytorch\": \"Embedding\",\r\n      \"tensorflow\": \"Embedding\"\r\n    },\r\n    \"EmbeddingBag\": {\r\n      \"pytorch\": \"EmbeddingBag\"\r\n    },\r\n    \"Flatten\": {\r\n      \"pytorch\": \"Flatten\",\r\n      \"tensorflow\": \"Flatten\"\r\n    },\r\n    \"Fold\": {\r\n      \"pytorch\": \"Fold\"\r\n    },\r\n    \"FractionalMaxPool2d\": {\r\n      \"pytorch\": \"FractionalMaxPool2d\"\r\n    },\r\n    \"GRU\": {\r\n      \"pytorch\": \"GRU\",\r\n      \"tensorflow\": \"GRU\"\r\n    },\r\n    \"GRUCell\": {\r\n      \"pytorch\": \"GRUCell\",\r\n      \"tensorflow\": \"GRUCell\"\r\n    },\r\n    \"GaussianDropout\": {\r\n      \"tensorflow\": \"GaussianDropout\"\r\n    },\r\n    \"GaussianNoise\": {\r\n      \"tensorflow\": \"GaussianNoise\"\r\n    },\r\n    \"GlobalAveragePooling1D\": {\r\n      \"tensorflow\": \"GlobalAveragePooling1D\"\r\n    },\r\n    \"GlobalAveragePooling2D\": {\r\n      \"tensorflow\": \"GlobalAveragePooling2D\"\r\n    },\r\n    \"GlobalAveragePooling3D\": {\r\n      \"tensorflow\": \"GlobalAveragePooling3D\"\r\n    },\r\n    \"GlobalMaxPool1D\": {\r\n      \"tensorflow\": \"GlobalMaxPool1D\"\r\n    },\r\n    \"GlobalMaxPool2D\": {\r\n      \"tensorflow\": \"GlobalMaxPool2D\"\r\n    },\r\n    \"GlobalMaxPool3D\": {\r\n      \"tensorflow\": \"GlobalMaxPool3D\"\r\n    },\r\n    \"GroupNorm\": {\r\n      \"pytorch\": \"GroupNorm\"\r\n    },\r\n    \"Hardshrink\": {\r\n      \"pytorch\": \"Hardshrink\"\r\n    },\r\n    \"Hardtanh\": {\r\n      \"pytorch\": \"Hardtanh\"\r\n    },\r\n    \"Identity\": {\r\n      \"pytorch\": \"Identity\"\r\n    },\r\n    \"InputLayer\": {\r\n      \"tensorflow\": \"InputLayer\"\r\n    },\r\n    \"InputSpec\": {\r\n      \"tensorflow\": \"InputSpec\"\r\n    },\r\n    \"InstanceNorm1d\": {\r\n      \"pytorch\": \"InstanceNorm1d\"\r\n    },\r\n    \"InstanceNorm2d\": {\r\n      \"pytorch\": \"InstanceNorm2d\"\r\n    },\r\n    \"InstanceNorm3d\": {\r\n      \"pytorch\": \"InstanceNorm3d\"\r\n    },\r\n    \"LPPool1d\": {\r\n      \"pytorch\": \"LPPool1d\"\r\n    },\r\n    \"LPPool2d\": {\r\n      \"pytorch\": \"LPPool2d\"\r\n    },\r\n    \"LSTM\": {\r\n      \"pytorch\": \"LSTM\",\r\n      \"tensorflow\": \"LSTM\"\r\n    },\r\n    \"LSTMCell\": {\r\n      \"pytorch\": \"LSTMCell\",\r\n      \"tensorflow\": \"LSTMCell\"\r\n    },\r\n    \"Lambda\": {\r\n      \"tensorflow\": \"Lambda\"\r\n    },\r\n    \"Layer\": {\r\n      \"tensorflow\": \"Layer\"\r\n    },\r\n    \"LayerNorm\": {\r\n      \"pytorch\": \"LayerNorm\"\r\n    },\r\n    \"LeakyReLU\": {\r\n      \"pytorch\": \"LeakyReLU\",\r\n      \"tensorflow\": \"LeakyReLU\"\r\n    },\r\n    \"Linear\": {\r\n      \"pytorch\": \"Linear\",\r\n      \"tensorflow\": \"Dense\"\r\n    },\r\n    \"LinearModel\": {\r\n      \"tensorflow\": \"LinearModel\"\r\n    },\r\n    \"LocalResponseNorm\": {\r\n      \"pytorch\": \"LocalResponseNorm\"\r\n    },\r\n    \"LocallyConnected1D\": {\r\n      \"tensorflow\": \"LocallyConnected1D\"\r\n    },\r\n    \"LocallyConnected2D\": {\r\n      \"tensorflow\": \"LocallyConnected2D\"\r\n    },\r\n    \"LogSigmoid\": {\r\n      \"pytorch\": \"LogSigmoid\"\r\n    },\r\n    \"LogSoftmax\": {\r\n      \"pytorch\": \"LogSoftmax\"\r\n    },\r\n    \"Masking\": {\r\n      \"tensorflow\": \"Masking\"\r\n    },\r\n    \"MaxPool1d\": {\r\n      \"pytorch\": \"MaxPool1d\",\r\n      \"tensorflow\": \"MaxPool1D\"\r\n    },\r\n    \"MaxPool2d\": {\r\n      \"pytorch\": \"MaxPool2d\",\r\n      \"tensorflow\": \"MaxPool2D\"\r\n    },\r\n    \"MaxPool3d\": {\r\n      \"pytorch\": \"MaxPool3d\",\r\n      \"tensorflow\": \"MaxPool3D\"\r\n    },\r\n    \"MaxUnpool1d\": {\r\n      \"pytorch\": \"MaxUnpool1d\"\r\n    },\r\n    \"MaxUnpool2d\": {\r\n      \"pytorch\": \"MaxUnpool2d\"\r\n    },\r\n    \"MaxUnpool3d\": {\r\n      \"pytorch\": \"MaxUnpool3d\"\r\n    },\r\n    \"Maximum\": {\r\n      \"pytorch\": \"Max\",\r\n      \"tensorflow\": \"Maximum\"\r\n    },\r\n    \"Mean\": {\r\n      \"pytorch\": \"Mean\"\r\n    },\r\n    \"Minimum\": {\r\n      \"tensorflow\": \"Minimum\"\r\n    },\r\n    \"MultiheadAttention\": {\r\n      \"pytorch\": \"MultiheadAttention\"\r\n    },\r\n    \"Multiply\": {\r\n      \"tensorflow\": \"Multiply\"\r\n    },\r\n    \"PReLU\": {\r\n      \"pytorch\": \"PReLU\",\r\n      \"tensorflow\": \"PReLU\"\r\n    },\r\n    \"Permute\": {\r\n      \"tensorflow\": \"Permute\"\r\n    },\r\n    \"RNN\": {\r\n      \"pytorch\": \"RNN\",\r\n      \"tensorflow\": \"RNN\"\r\n    },\r\n    \"RNNCell\": {\r\n      \"pytorch\": \"RNNCell\"\r\n    },\r\n    \"RReLU\": {\r\n      \"pytorch\": \"RReLU\"\r\n    },\r\n    \"ReLU\": {\r\n      \"pytorch\": \"ReLU\",\r\n      \"tensorflow\": \"ReLU\"\r\n    },\r\n    \"ReLU6\": {\r\n      \"pytorch\": \"ReLU6\"\r\n    },\r\n    \"ReflectionPad1d\": {\r\n      \"pytorch\": \"ReflectionPad1d\"\r\n    },\r\n    \"ReflectionPad2d\": {\r\n      \"pytorch\": \"ReflectionPad2d\"\r\n    },\r\n    \"RepeatVector\": {\r\n      \"tensorflow\": \"RepeatVector\"\r\n    },\r\n    \"ReplicationPad1d\": {\r\n      \"pytorch\": \"ReplicationPad1d\"\r\n    },\r\n    \"ReplicationPad2d\": {\r\n      \"pytorch\": \"ReplicationPad2d\"\r\n    },\r\n    \"ReplicationPad3d\": {\r\n      \"pytorch\": \"ReplicationPad3d\"\r\n    },\r\n    \"Reshape\": {\r\n      \"tensorflow\": \"Reshape\"\r\n    },\r\n    \"SELU\": {\r\n      \"pytorch\": \"SELU\"\r\n    },\r\n    \"SeparableConv1D\": {\r\n      \"tensorflow\": \"SeparableConv1D\"\r\n    },\r\n    \"SeparableConv2D\": {\r\n      \"tensorflow\": \"SeparableConv2D\"\r\n    },\r\n    \"Sigmoid\": {\r\n      \"pytorch\": \"Sigmoid\"\r\n    },\r\n    \"SimpleRNN\": {\r\n      \"tensorflow\": \"SimpleRNN\"\r\n    },\r\n    \"SimpleRNNCell\": {\r\n      \"tensorflow\": \"SimpleRNNCell\"\r\n    },\r\n    \"Softmax\": {\r\n      \"pytorch\": \"Softmax\",\r\n      \"tensorflow\": \"Softmax\"\r\n    },\r\n    \"Softmax2d\": {\r\n      \"pytorch\": \"Softmax2d\"\r\n    },\r\n    \"Softmin\": {\r\n      \"pytorch\": \"Softmin\"\r\n    },\r\n    \"Softplus\": {\r\n      \"pytorch\": \"Softplus\"\r\n    },\r\n    \"Softshrink\": {\r\n      \"pytorch\": \"Softshrink\"\r\n    },\r\n    \"Softsign\": {\r\n      \"pytorch\": \"Softsign\"\r\n    },\r\n    \"SpatialDropout1D\": {\r\n      \"tensorflow\": \"SpatialDropout1D\"\r\n    },\r\n    \"SpatialDropout2D\": {\r\n      \"tensorflow\": \"SpatialDropout2D\"\r\n    },\r\n    \"SpatialDropout3D\": {\r\n      \"tensorflow\": \"SpatialDropout3D\"\r\n    },\r\n    \"StackedRNNCells\": {\r\n      \"tensorflow\": \"StackedRNNCells\"\r\n    },\r\n    \"Subtract\": {\r\n      \"tensorflow\": \"Subtract\"\r\n    },\r\n    \"SyncBatchNorm\": {\r\n      \"pytorch\": \"SyncBatchNorm\"\r\n    },\r\n    \"Tanh\": {\r\n      \"pytorch\": \"Tanh\"\r\n    },\r\n    \"Tanhshrink\": {\r\n      \"pytorch\": \"Tanhshrink\"\r\n    },\r\n    \"Threshold\": {\r\n      \"pytorch\": \"Threshold\"\r\n    },\r\n    \"ThresholdedReLU\": {\r\n      \"tensorflow\": \"ThresholdedReLU\"\r\n    },\r\n    \"TimeDistributed\": {\r\n      \"tensorflow\": \"TimeDistributed\"\r\n    },\r\n    \"Unfold\": {\r\n      \"pytorch\": \"Unfold\"\r\n    },\r\n    \"UpSampling1D\": {\r\n      \"tensorflow\": \"UpSampling1D\"\r\n    },\r\n    \"UpSampling2D\": {\r\n      \"tensorflow\": \"UpSampling2D\"\r\n    },\r\n    \"UpSampling3D\": {\r\n      \"tensorflow\": \"UpSampling3D\"\r\n    },\r\n    \"Wrapper\": {\r\n      \"tensorflow\": \"Wrapper\"\r\n    },\r\n    \"ZeroPad2d\": {\r\n      \"pytorch\": \"ZeroPad2d\"\r\n    },\r\n    \"ZeroPadding1D\": {\r\n      \"tensorflow\": \"ZeroPadding1D\"\r\n    },\r\n    \"ZeroPadding2D\": {\r\n      \"tensorflow\": \"ZeroPadding2D\"\r\n    },\r\n    \"ZeroPadding3D\": {\r\n      \"tensorflow\": \"ZeroPadding3D\"\r\n    },\r\n    \"ResNet18\": {\r\n      \"pytorch\": \"resnet18\"\r\n    },\r\n    \"ResNet34\": {\r\n      \"pytorch\": \"resnet34\"\r\n    },\r\n    \"ResNet50\": {\r\n      \"pytorch\": \"resnet50\"\r\n    },\r\n    \"ResNet101\": {\r\n      \"pytorch\": \"resnet101\"\r\n    },\r\n    \"ResNet152\": {\r\n      \"pytorch\": \"resnet152\"\r\n    },\r\n    \"VGG11\": {\r\n      \"pytorch\": \"vgg11\"\r\n    },\r\n    \"VGG13\": {\r\n      \"pytorch\": \"vgg13\"\r\n    },\r\n    \"VGG16\": {\r\n      \"pytorch\": \"vgg16\"\r\n    },\r\n    \"VGG19\": {\r\n      \"pytorch\": \"vgg19\"\r\n    },\r\n    \"AlexNet\": {\r\n      \"pytorch\": \"alexnet\"\r\n    },\r\n    \"SqueezeNet1_0\": {\r\n      \"pytorch\": \"squeezenet1_0\"\r\n    },\r\n    \"SqueezeNet1_1\": {\r\n      \"pytorch\": \"squeezenet1_1\"\r\n    },\r\n    \"DenseNet121\": {\r\n      \"pytorch\": \"densenet121\"\r\n    },\r\n    \"DenseNet169\": {\r\n      \"pytorch\": \"densenet169\"\r\n    },\r\n    \"DenseNet161\": {\r\n      \"pytorch\": \"densenet161\"\r\n    },\r\n    \"DenseNet201\": {\r\n      \"pytorch\": \"densenet201\"\r\n    },\r\n    \"InceptionV3\": {\r\n      \"pytorch\": \"inception_v3\"\r\n    },\r\n    \"GoogLeNet\": {\r\n      \"pytorch\": \"googlenet\"\r\n    },\r\n    \"ShuffleNetV2_x0_5\": {\r\n      \"pytorch\": \"shufflenet_v2_x0_5\"\r\n    },\r\n    \"ShuffleNetV2_x1_0\": {\r\n      \"pytorch\": \"shufflenet_v2_x1_0\"\r\n    },\r\n    \"ShuffleNetV2_x1_5\": {\r\n      \"pytorch\": \"shufflenet_v2_x1_5\"\r\n    },\r\n    \"ShuffleNet\": {\r\n      \"pytorch\": \"shufflenet_v2_x2_0\"\r\n    },\r\n    \"MobileNetV2\": {\r\n      \"pytorch\": \"mobilenet_v2\"\r\n    },\r\n    \"ResNext50\": {\r\n      \"pytorch\": \"resnext50_32x4d\"\r\n    },\r\n    \"ResNext101\": {\r\n      \"pytorch\": \"resnext101_32x8d\"\r\n    },\r\n    \"Segmentation FCN ResNet50\": {\r\n      \"pytorch\": \"segmentation.fcn_resnet50\"\r\n    },\r\n    \"Segmentation FCN ResNet101\": {\r\n      \"pytorch\": \"segmentation.fcn_resnet101\"\r\n    },\r\n    \"Segmentation DeepLabV3 ResNet50\": {\r\n      \"pytorch\": \"segmentation.deeplabv3_resnet50\"\r\n    },\r\n    \"Segmentation DeepLabV3 ResNet101\": {\r\n      \"pytorch\": \"segmentation.deeplabv3_resnet101\"\r\n    },\r\n    \"Detection Faster R-CNN ResNet50\": {\r\n      \"pytorch\": \"detection.fasterrcnn_resnet50_fpn\"\r\n    },\r\n    \"Detection Mask R-CNN ResNet50\": {\r\n      \"pytorch\": \"detection.maskrcnn_resnet50_fpn\"\r\n    },\r\n    \"Keypoint R-CNN ResNet50\": {\r\n      \"pytorch\": \"detection.keypointrcnn_resnet50_fpn\"\r\n    }\r\n  }\r\n}","export function getPyTorchLibrary() {\r\n  return {\r\n    \"AdaptiveAvgPool1d\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"output_size\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"AdaptiveAvgPool2d\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"output_size\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"AdaptiveAvgPool3d\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"output_size\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"AdaptiveLogSoftmaxWithLoss\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"in_features\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"n_classes\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"cutoffs\": {\r\n        \"type\": \"sequence\",\r\n        \"value\": null,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"div_value\": {\r\n        \"type\": \"float\",\r\n        \"value\": 4.0,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"head_bias\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"AdaptiveMaxPool1d\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"output_size\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"return_indices\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"AdaptiveMaxPool2d\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"output_size\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"return_indices\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"AdaptiveMaxPool3d\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"output_size\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"return_indices\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"AlphaDropout\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"p\": {\r\n        \"type\": \"float\",\r\n        \"value\": 0.5,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"inplace\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"AvgPool1d\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"kernel_size\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"stride\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"padding\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"ceil_mode\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"count_include_pad\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"AvgPool2d\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"kernel_size\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"stride\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"padding\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"ceil_mode\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"count_include_pad\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"AvgPool3d\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"kernel_size\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"stride\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"padding\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"ceil_mode\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"count_include_pad\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"BatchNorm1d\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"num_features\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"eps\": {\r\n        \"type\": \"float\",\r\n        \"value\": 1e-05,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"momentum\": {\r\n        \"type\": \"float\",\r\n        \"value\": 0.1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"affine\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"track_running_stats\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"BatchNorm2d\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"num_features\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"eps\": {\r\n        \"type\": \"float\",\r\n        \"value\": 1e-05,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"momentum\": {\r\n        \"type\": \"float\",\r\n        \"value\": 0.1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"affine\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"track_running_stats\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"BatchNorm3d\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"num_features\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"eps\": {\r\n        \"type\": \"float\",\r\n        \"value\": 1e-05,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"momentum\": {\r\n        \"type\": \"float\",\r\n        \"value\": 0.1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"affine\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"track_running_stats\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"Bilinear\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"in1_features\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"in2_features\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"out_features\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"CELU\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"alpha\": {\r\n        \"type\": \"float\",\r\n        \"value\": 1.0,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"inplace\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"Concatenate\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"dim\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"ConstantPad1d\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"padding\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"ConstantPad2d\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"padding\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"ConstantPad3d\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"padding\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"Conv1d\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"in_channels\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"out_channels\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_size\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"stride\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"padding\": {\r\n        \"type\": \"int\",\r\n        \"value\": 0,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"padding_mode\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"'zeros'\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"dilation\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"groups\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"Conv2d\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"in_channels\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"out_channels\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_size\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"stride\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"padding\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          0,\r\n          0\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"padding_mode\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"'zeros'\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"dilation\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"groups\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"Conv3d\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"in_channels\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"out_channels\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_size\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"stride\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"padding\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          0,\r\n          0,\r\n          0\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"padding_mode\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"'zeros'\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"dilation\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"groups\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"ConvTranspose1d\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"in_channels\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"out_channels\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_size\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"stride\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"padding\": {\r\n        \"type\": \"int\",\r\n        \"value\": 0,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"output_padding\": {\r\n        \"type\": \"int\",\r\n        \"value\": 0,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"groups\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"dilation\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"ConvTranspose2d\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"in_channels\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"out_channels\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_size\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"stride\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"padding\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          0,\r\n          0\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"output_padding\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          0,\r\n          0\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"groups\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"dilation\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"ConvTranspose3d\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"in_channels\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"out_channels\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_size\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"stride\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"padding\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          0,\r\n          0,\r\n          0\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"output_padding\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          0,\r\n          0,\r\n          0\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"groups\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"dilation\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"Dropout\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"p\": {\r\n        \"type\": \"float\",\r\n        \"value\": 0.5,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"inplace\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"Dropout2d\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"p\": {\r\n        \"type\": \"float\",\r\n        \"value\": 0.5,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"inplace\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"Dropout3d\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"p\": {\r\n        \"type\": \"float\",\r\n        \"value\": 0.5,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"inplace\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"ELU\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"alpha\": {\r\n        \"type\": \"float\",\r\n        \"value\": 1.0,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"inplace\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"Embedding\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"num_embeddings\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"embedding_dim\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"padding_idx\": {\r\n        \"type\": \"int\",\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"max_norm\": {\r\n        \"type\": \"float\",\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"norm_type\": {\r\n        \"type\": \"float\",\r\n        \"value\": 2.0,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"scale_grad_by_freq\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"sparse\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"EmbeddingBag\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"num_embeddings\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"embedding_dim\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"max_norm\": {\r\n        \"type\": \"float\",\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"norm_type\": {\r\n        \"type\": \"float\",\r\n        \"value\": 2.0,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"scale_grad_by_freq\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"mode\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"'mean'\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"sparse\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"Flatten\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n    },\r\n    \"Fold\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"output_size\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_size\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"stride\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"padding\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          0\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"dilation\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"FractionalMaxPool2d\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"kernel_size\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"output_size\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"output_ratio\": {\r\n        \"type\": \"float\",\r\n        \"value\": [\r\n          0.5,\r\n          0.5\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": 1\r\n      },\r\n      \"return_indices\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"GRU\": {\r\n      \"extras\": {\r\n        \"gothidden\": true\r\n      },\r\n      \"input_size\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"hidden_size\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"num_layers\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"batch_first\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"dropout\": {\r\n        \"type\": \"float\",\r\n        \"value\": 0.0,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bidirectional\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"GRUCell\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"input_size\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"hidden_size\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"GroupNorm\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"num_groups\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"num_channels\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"eps\": {\r\n        \"type\": \"float\",\r\n        \"value\": 1e-05,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"affine\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"Hardshrink\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"lambd\": {\r\n        \"type\": \"float\",\r\n        \"value\": 0.5,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"Hardtanh\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"min_val\": {\r\n        \"type\": \"float\",\r\n        \"value\": -1.0,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"max_val\": {\r\n        \"type\": \"float\",\r\n        \"value\": 1.0,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"inplace\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"Identity\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n    },\r\n    \"InstanceNorm1d\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"num_features\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"eps\": {\r\n        \"type\": \"float\",\r\n        \"value\": 1e-05,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"momentum\": {\r\n        \"type\": \"float\",\r\n        \"value\": 0.1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"affine\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"track_running_stats\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"InstanceNorm2d\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"num_features\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"eps\": {\r\n        \"type\": \"float\",\r\n        \"value\": 1e-05,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"momentum\": {\r\n        \"type\": \"float\",\r\n        \"value\": 0.1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"affine\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"track_running_stats\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"InstanceNorm3d\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"num_features\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"eps\": {\r\n        \"type\": \"float\",\r\n        \"value\": 1e-05,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"momentum\": {\r\n        \"type\": \"float\",\r\n        \"value\": 0.1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"affine\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"track_running_stats\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"LPPool1d\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"kernel_size\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"stride\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"ceil_mode\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"LPPool2d\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"kernel_size\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"stride\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"ceil_mode\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"LSTM\": {\r\n      \"extras\": {\r\n        \"gothidden\": true\r\n      },\r\n      \"input_size\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"hidden_size\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"num_layers\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"batch_first\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"dropout\": {\r\n        \"type\": \"float\",\r\n        \"value\": 0.0,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bidirectional\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"LSTMCell\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"input_size\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"hidden_size\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"LayerNorm\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"normalized_shape\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"eps\": {\r\n        \"type\": \"float\",\r\n        \"value\": 1e-05,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"elementwise_affine\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"LeakyReLU\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"negative_slope\": {\r\n        \"type\": \"float\",\r\n        \"value\": 0.01,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"inplace\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"Linear\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"in_features\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"out_features\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"LocalResponseNorm\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"size\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"alpha\": {\r\n        \"type\": \"float\",\r\n        \"value\": 0.0001,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"beta\": {\r\n        \"type\": \"float\",\r\n        \"value\": 0.75,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"k\": {\r\n        \"type\": \"float\",\r\n        \"value\": 1.0,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"LogSigmoid\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n    },\r\n    \"LogSoftmax\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"dim\": {\r\n        \"type\": \"int\",\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"Max\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"dim\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"keepdim\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"MaxPool1d\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"kernel_size\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"stride\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"padding\": {\r\n        \"type\": \"int\",\r\n        \"value\": 0,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"dilation\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"return_indices\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"ceil_mode\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"MaxPool2d\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"kernel_size\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"stride\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"padding\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          0,\r\n          0\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"dilation\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          0,\r\n          0\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"return_indices\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"ceil_mode\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"MaxPool3d\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"kernel_size\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"stride\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"padding\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          0,\r\n          0,\r\n          0\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"dilation\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          0,\r\n          0,\r\n          0\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"return_indices\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"ceil_mode\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"MaxUnpool1d\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"kernel_size\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"stride\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"padding\": {\r\n        \"type\": \"int\",\r\n        \"value\": 0,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"MaxUnpool2d\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"kernel_size\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"stride\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"padding\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          0,\r\n          0\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"MaxUnpool3d\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"kernel_size\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"stride\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"padding\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          0,\r\n          0,\r\n          0\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"Mean\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"dim\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"keepdim\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"MultiheadAttention\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"embed_dim\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"num_heads\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"PReLU\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"num_parameters\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"init\": {\r\n        \"type\": \"float\",\r\n        \"value\": 0.25,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"RNN\": {\r\n      \"extras\": {\r\n        \"gothidden\": true\r\n      },\r\n      \"input_size\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"hidden_size\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"num_layers\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"nonlinearity\": {\r\n        \"type\": \"select\",\r\n        \"value\": \"tanh\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity,\r\n        \"options\": [\r\n          \"relu\",\r\n          \"tanh\"\r\n        ]\r\n      },\r\n      \"bias\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"batch_first\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"dropout\": {\r\n        \"type\": \"float\",\r\n        \"value\": 0.0,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bidirectional\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"RNNCell\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"input_size\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"hidden_size\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"nonlinearity\": {\r\n        \"type\": \"select\",\r\n        \"value\": \"tanh\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity,\r\n        \"options\": [\r\n          \"relu\",\r\n          \"tanh\"\r\n        ]\r\n      }\r\n    },\r\n    \"RReLU\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"lower\": {\r\n        \"type\": \"float\",\r\n        \"value\": 0.125,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"upper\": {\r\n        \"type\": \"float\",\r\n        \"value\": 0.3333333333333333,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"inplace\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"ReLU\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"inplace\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"ReLU6\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"inplace\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"ReflectionPad1d\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"padding\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"ReflectionPad2d\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"padding\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"ReplicationPad1d\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"padding\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"ReplicationPad2d\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"padding\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"ReplicationPad3d\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"padding\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"SELU\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"inplace\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"Sigmoid\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n    },\r\n    \"Softmax\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"dim\": {\r\n        \"type\": \"int\",\r\n        \"value\": \"1\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"Softmax2d\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n    },\r\n    \"Softmin\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"dim\": {\r\n        \"type\": \"int\",\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"Softplus\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"beta\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"threshold\": {\r\n        \"type\": \"int\",\r\n        \"value\": 20,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"Softshrink\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"lambd\": {\r\n        \"type\": \"float\",\r\n        \"value\": 0.5,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"Softsign\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n    },\r\n    \"SyncBatchNorm\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"num_features\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"eps\": {\r\n        \"type\": \"float\",\r\n        \"value\": 1e-05,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"momentum\": {\r\n        \"type\": \"float\",\r\n        \"value\": 0.1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"affine\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"track_running_stats\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"Tanh\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n    },\r\n    \"Tanhshrink\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n    },\r\n    \"Threshold\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"threshold\": {\r\n        \"type\": \"float\",\r\n        \"value\": 0.0,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"value\": {\r\n        \"type\": \"float\",\r\n        \"value\": 1.0,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"inplace\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"Unfold\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"kernel_size\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"stride\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"padding\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          0\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"dilation\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"ZeroPad2d\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      },\r\n      \"padding\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"resnet18\": {\r\n      \"extras\": {\r\n        \"gothidden\": false,\r\n        \"torchvision\": true\r\n      },\r\n      \"pretrained\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"progress\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"num_classes\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1000,\r\n        \"istuple\": false,\r\n        \"min\": 0,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"resnet34\": {\r\n      \"extras\": {\r\n        \"gothidden\": false,\r\n        \"torchvision\": true\r\n      },\r\n      \"pretrained\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"progress\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"num_classes\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1000,\r\n        \"istuple\": false,\r\n        \"min\": 0,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"resnet50\": {\r\n      \"extras\": {\r\n        \"gothidden\": false,\r\n        \"torchvision\": true\r\n      },\r\n      \"pretrained\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"progress\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"num_classes\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1000,\r\n        \"istuple\": false,\r\n        \"min\": 0,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"resnet101\": {\r\n      \"extras\": {\r\n        \"gothidden\": false,\r\n        \"torchvision\": true\r\n      },\r\n      \"pretrained\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"progress\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"num_classes\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1000,\r\n        \"istuple\": false,\r\n        \"min\": 0,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"resnet152\": {\r\n      \"extras\": {\r\n        \"gothidden\": false,\r\n        \"torchvision\": true\r\n      },\r\n      \"pretrained\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"progress\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"num_classes\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1000,\r\n        \"istuple\": false,\r\n        \"min\": 0,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"vgg11\": {\r\n      \"extras\": {\r\n        \"gothidden\": false,\r\n        \"torchvision\": true\r\n      },\r\n      \"pretrained\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"progress\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"num_classes\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1000,\r\n        \"istuple\": false,\r\n        \"min\": 0,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"vgg13\": {\r\n      \"extras\": {\r\n        \"gothidden\": false,\r\n        \"torchvision\": true\r\n      },\r\n      \"pretrained\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"progress\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"num_classes\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1000,\r\n        \"istuple\": false,\r\n        \"min\": 0,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"vgg16\": {\r\n      \"extras\": {\r\n        \"gothidden\": false,\r\n        \"torchvision\": true\r\n      },\r\n      \"pretrained\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"progress\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"num_classes\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1000,\r\n        \"istuple\": false,\r\n        \"min\": 0,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"vgg19\": {\r\n      \"extras\": {\r\n        \"gothidden\": false,\r\n        \"torchvision\": true\r\n      },\r\n      \"pretrained\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"progress\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"num_classes\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1000,\r\n        \"istuple\": false,\r\n        \"min\": 0,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"alexnet\": {\r\n      \"extras\": {\r\n        \"gothidden\": false,\r\n        \"torchvision\": true\r\n      },\r\n      \"pretrained\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"progress\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"num_classes\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1000,\r\n        \"istuple\": false,\r\n        \"min\": 0,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"squeezenet1_0\": {\r\n      \"extras\": {\r\n        \"gothidden\": false,\r\n        \"torchvision\": true\r\n      },\r\n      \"pretrained\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"progress\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"num_classes\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1000,\r\n        \"istuple\": false,\r\n        \"min\": 0,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"squeezenet1_1\": {\r\n      \"extras\": {\r\n        \"gothidden\": false,\r\n        \"torchvision\": true\r\n      },\r\n      \"pretrained\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"progress\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"num_classes\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1000,\r\n        \"istuple\": false,\r\n        \"min\": 0,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"densenet121\": {\r\n      \"extras\": {\r\n        \"gothidden\": false,\r\n        \"torchvision\": true\r\n      },\r\n      \"pretrained\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"progress\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"num_classes\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1000,\r\n        \"istuple\": false,\r\n        \"min\": 0,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"densenet169\": {\r\n      \"extras\": {\r\n        \"gothidden\": false,\r\n        \"torchvision\": true\r\n      },\r\n      \"pretrained\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"progress\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"num_classes\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1000,\r\n        \"istuple\": false,\r\n        \"min\": 0,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"densenet161\": {\r\n      \"extras\": {\r\n        \"gothidden\": false,\r\n        \"torchvision\": true\r\n      },\r\n      \"pretrained\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"progress\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"num_classes\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1000,\r\n        \"istuple\": false,\r\n        \"min\": 0,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"densenet201\": {\r\n      \"extras\": {\r\n        \"gothidden\": false,\r\n        \"torchvision\": true\r\n      },\r\n      \"pretrained\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"progress\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"num_classes\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1000,\r\n        \"istuple\": false,\r\n        \"min\": 0,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"inception_v3\": {\r\n      \"extras\": {\r\n        \"gothidden\": false,\r\n        \"torchvision\": true\r\n      },\r\n      \"pretrained\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"progress\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"num_classes\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1000,\r\n        \"istuple\": false,\r\n        \"min\": 0,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"googlenet\": {\r\n      \"extras\": {\r\n        \"gothidden\": false,\r\n        \"torchvision\": true\r\n      },\r\n      \"pretrained\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"progress\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"num_classes\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1000,\r\n        \"istuple\": false,\r\n        \"min\": 0,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"shufflenet_v2_x0_5\": {\r\n      \"extras\": {\r\n        \"gothidden\": false,\r\n        \"torchvision\": true\r\n      },\r\n      \"pretrained\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"progress\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"num_classes\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1000,\r\n        \"istuple\": false,\r\n        \"min\": 0,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"shufflenet_v2_x1_0\": {\r\n      \"extras\": {\r\n        \"gothidden\": false,\r\n        \"torchvision\": true\r\n      },\r\n      \"pretrained\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"progress\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"num_classes\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1000,\r\n        \"istuple\": false,\r\n        \"min\": 0,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"shufflenet_v2_x1_5\": {\r\n      \"extras\": {\r\n        \"gothidden\": false,\r\n        \"torchvision\": true\r\n      },\r\n      \"pretrained\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"progress\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"num_classes\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1000,\r\n        \"istuple\": false,\r\n        \"min\": 0,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"shufflenet_v2_x2_0\": {\r\n      \"extras\": {\r\n        \"gothidden\": false,\r\n        \"torchvision\": true\r\n      },\r\n      \"pretrained\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"progress\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"num_classes\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1000,\r\n        \"istuple\": false,\r\n        \"min\": 0,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"mobilenet_v2\": {\r\n      \"extras\": {\r\n        \"gothidden\": false,\r\n        \"torchvision\": true\r\n      },\r\n      \"pretrained\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"progress\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"num_classes\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1000,\r\n        \"istuple\": false,\r\n        \"min\": 0,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"resnext50_32x4d\": {\r\n      \"extras\": {\r\n        \"gothidden\": false,\r\n        \"torchvision\": true\r\n      },\r\n      \"pretrained\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"progress\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"num_classes\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1000,\r\n        \"istuple\": false,\r\n        \"min\": 0,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"resnext101_32x8d\": {\r\n      \"extras\": {\r\n        \"gothidden\": false,\r\n        \"torchvision\": true\r\n      },\r\n      \"pretrained\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"progress\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"num_classes\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1000,\r\n        \"istuple\": false,\r\n        \"min\": 0,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"segmentation.fcn_resnet50\": {\r\n      \"extras\": {\r\n        \"gothidden\": false,\r\n        \"torchvision\": true\r\n      },\r\n      \"pretrained\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"progress\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"num_classes\": {\r\n        \"type\": \"int\",\r\n        \"value\": 21,\r\n        \"istuple\": false,\r\n        \"min\": 0,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"segmentation.fcn_resnet101\": {\r\n      \"extras\": {\r\n        \"gothidden\": false,\r\n        \"torchvision\": true\r\n      },\r\n      \"pretrained\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"progress\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"num_classes\": {\r\n        \"type\": \"int\",\r\n        \"value\": 21,\r\n        \"istuple\": false,\r\n        \"min\": 0,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"segmentation.deeplabv3_resnet50\": {\r\n      \"extras\": {\r\n        \"gothidden\": false,\r\n        \"torchvision\": true\r\n      },\r\n      \"pretrained\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"progress\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"num_classes\": {\r\n        \"type\": \"int\",\r\n        \"value\": 21,\r\n        \"istuple\": false,\r\n        \"min\": 0,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"segmentation.deeplabv3_resnet101\": {\r\n      \"extras\": {\r\n        \"gothidden\": false,\r\n        \"torchvision\": true\r\n      },\r\n      \"pretrained\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"progress\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"num_classes\": {\r\n        \"type\": \"int\",\r\n        \"value\": 21,\r\n        \"istuple\": false,\r\n        \"min\": 0,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"detection.fasterrcnn_resnet50_fpn\": {\r\n      \"extras\": {\r\n        \"gothidden\": false,\r\n        \"torchvision\": true\r\n      },\r\n      \"pretrained\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"pretrained_backbone\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"progress\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"num_classes\": {\r\n        \"type\": \"int\",\r\n        \"value\": 91,\r\n        \"istuple\": false,\r\n        \"min\": 0,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"detection.maskrcnn_resnet50_fpn\": {\r\n      \"extras\": {\r\n        \"gothidden\": false,\r\n        \"torchvision\": true\r\n      },\r\n      \"pretrained\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"pretrained_backbone\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"progress\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"num_classes\": {\r\n        \"type\": \"int\",\r\n        \"value\": 91,\r\n        \"istuple\": false,\r\n        \"min\": 0,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n    \"detection.keypointrcnn_resnet50_fpn\": {\r\n      \"extras\": {\r\n        \"gothidden\": false,\r\n        \"torchvision\": true\r\n      },\r\n      \"pretrained\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"pretrained_backbone\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"progress\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"num_classes\": {\r\n        \"type\": \"int\",\r\n        \"value\": 91,\r\n        \"istuple\": false,\r\n        \"min\": 0,\r\n        \"max\": Infinity\r\n      }\r\n    },\r\n  }\r\n}","export function getTensorFlowLibrary() {\r\n  return {\r\n    \"AbstractRNNCell\": {\r\n      \"trainable\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"dtype\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"dynamic\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"Activation\": {\r\n      \"activation\": {\r\n        \"type\": \"\",\r\n        \"value\": null,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"ActivityRegularization\": {\r\n      \"l1\": {\r\n        \"type\": \"float\",\r\n        \"value\": 0.0,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"l2\": {\r\n        \"type\": \"float\",\r\n        \"value\": 0.0,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"Add\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"AlphaDropout\": {\r\n      \"rate\": {\r\n        \"type\": \"float\",\r\n        \"value\": 1.0,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"noise_shape\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"seed\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"Average\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"AveragePooling1D\": {\r\n      \"pool_size\": {\r\n        \"type\": \"int\",\r\n        \"value\": 2,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"strides\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"padding\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"valid\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"data_format\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"channels_last\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"AveragePooling2D\": {\r\n      \"pool_size\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          2,\r\n          2\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"strides\": {\r\n        \"type\": null,\r\n        \"value\": [\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"padding\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"valid\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"data_format\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"AveragePooling3D\": {\r\n      \"pool_size\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          2,\r\n          2,\r\n          2\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"strides\": {\r\n        \"type\": null,\r\n        \"value\": [\r\n          1,\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"padding\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"valid\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"data_format\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"BatchNormalization\": {\r\n      \"axis\": {\r\n        \"type\": \"int\",\r\n        \"value\": -1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"momentum\": {\r\n        \"type\": \"float\",\r\n        \"value\": 0.99,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"epsilon\": {\r\n        \"type\": \"float\",\r\n        \"value\": 0.001,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"center\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"scale\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"beta_initializer\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"zeros\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"gamma_initializer\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"ones\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"moving_mean_initializer\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"zeros\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"moving_variance_initializer\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"ones\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"beta_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"gamma_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"beta_constraint\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"gamma_constraint\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"renorm\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"renorm_clipping\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"renorm_momentum\": {\r\n        \"type\": \"float\",\r\n        \"value\": 0.99,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"fused\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"trainable\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"virtual_batch_size\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"adjustment\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"Bidirectional\": {\r\n      \"layer\": {\r\n        \"type\": \"\",\r\n        \"value\": null,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"merge_mode\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"concat\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"weights\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"Concatenate\": {\r\n      \"axis\": {\r\n        \"type\": \"int\",\r\n        \"value\": -1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"Conv1D\": {\r\n      \"filters\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_size\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"strides\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"padding\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"valid\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"data_format\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"channels_last\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"dilation_rate\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"activation\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"use_bias\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_initializer\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"glorot_uniform\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias_initializer\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"zeros\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"activity_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_constraint\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias_constraint\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"Conv2D\": {\r\n      \"filters\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_size\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"strides\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"padding\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"valid\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"data_format\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"dilation_rate\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"activation\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"use_bias\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_initializer\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"glorot_uniform\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias_initializer\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"zeros\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"activity_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_constraint\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias_constraint\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"Conv2DTranspose\": {\r\n      \"filters\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_size\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"strides\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"padding\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"valid\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"output_padding\": {\r\n        \"type\": null,\r\n        \"value\": [\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"data_format\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"dilation_rate\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"activation\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"use_bias\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_initializer\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"glorot_uniform\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias_initializer\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"zeros\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"activity_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_constraint\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias_constraint\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"Conv3D\": {\r\n      \"filters\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_size\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"strides\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"padding\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"valid\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"data_format\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"dilation_rate\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"activation\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"use_bias\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_initializer\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"glorot_uniform\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias_initializer\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"zeros\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"activity_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_constraint\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias_constraint\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"Conv3DTranspose\": {\r\n      \"filters\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_size\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"strides\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"padding\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"valid\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"output_padding\": {\r\n        \"type\": null,\r\n        \"value\": [\r\n          1,\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"data_format\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"activation\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"use_bias\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_initializer\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"glorot_uniform\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias_initializer\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"zeros\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"activity_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_constraint\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias_constraint\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"ConvLSTM2D\": {\r\n      \"filters\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_size\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"strides\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"padding\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"valid\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"data_format\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"dilation_rate\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"activation\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"tanh\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"recurrent_activation\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"hard_sigmoid\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"use_bias\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_initializer\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"glorot_uniform\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"recurrent_initializer\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"orthogonal\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias_initializer\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"zeros\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"unit_forget_bias\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"recurrent_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"activity_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_constraint\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"recurrent_constraint\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias_constraint\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"return_sequences\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"go_backwards\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"stateful\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"dropout\": {\r\n        \"type\": \"float\",\r\n        \"value\": 0.0,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"recurrent_dropout\": {\r\n        \"type\": \"float\",\r\n        \"value\": 0.0,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"Cropping1D\": {\r\n      \"cropping\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"Cropping2D\": {\r\n      \"cropping\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          0,\r\n          0,\r\n          0,\r\n          0\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"data_format\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"Cropping3D\": {\r\n      \"cropping\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1,\r\n          1,\r\n          1,\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"data_format\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"Dense\": {\r\n      \"units\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"activation\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"use_bias\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_initializer\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"glorot_uniform\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias_initializer\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"zeros\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"activity_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_constraint\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias_constraint\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"DenseFeatures\": {\r\n      \"feature_columns\": {\r\n        \"type\": null,\r\n        \"value\": null,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"trainable\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"DepthwiseConv2D\": {\r\n      \"kernel_size\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"strides\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"padding\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"valid\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"depth_multiplier\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"data_format\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"activation\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"use_bias\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"depthwise_initializer\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"glorot_uniform\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias_initializer\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"zeros\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"depthwise_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"activity_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"depthwise_constraint\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias_constraint\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"Dot\": {\r\n      \"axes\": {\r\n        \"type\": \"int\",\r\n        \"value\": null,\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"normalize\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"Dropout\": {\r\n      \"rate\": {\r\n        \"type\": \"float\",\r\n        \"value\": 1.0,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"noise_shape\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"seed\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"ELU\": {\r\n      \"alpha\": {\r\n        \"type\": \"float\",\r\n        \"value\": 1.0,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"Embedding\": {\r\n      \"input_dim\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"output_dim\": {\r\n        \"type\": \"\",\r\n        \"value\": null,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"embeddings_initializer\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"uniform\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"embeddings_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"activity_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"embeddings_constraint\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"mask_zero\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"input_length\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"Flatten\": {\r\n      \"data_format\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"GRU\": {\r\n      \"units\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"activation\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"tanh\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"recurrent_activation\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"sigmoid\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"use_bias\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_initializer\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"glorot_uniform\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"recurrent_initializer\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"orthogonal\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias_initializer\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"zeros\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"recurrent_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"activity_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_constraint\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"recurrent_constraint\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias_constraint\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"dropout\": {\r\n        \"type\": \"float\",\r\n        \"value\": 0.0,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"recurrent_dropout\": {\r\n        \"type\": \"float\",\r\n        \"value\": 0.0,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"implementation\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"return_sequences\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"return_state\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"go_backwards\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"stateful\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"unroll\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"time_major\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"reset_after\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"GRUCell\": {\r\n      \"units\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"activation\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"tanh\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"recurrent_activation\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"hard_sigmoid\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"use_bias\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_initializer\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"glorot_uniform\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"recurrent_initializer\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"orthogonal\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias_initializer\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"zeros\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"recurrent_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_constraint\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"recurrent_constraint\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias_constraint\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"dropout\": {\r\n        \"type\": \"float\",\r\n        \"value\": 0.0,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"recurrent_dropout\": {\r\n        \"type\": \"float\",\r\n        \"value\": 0.0,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"implementation\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"reset_after\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"GaussianDropout\": {\r\n      \"rate\": {\r\n        \"type\": \"float\",\r\n        \"value\": 1.0,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"GaussianNoise\": {\r\n      \"stddev\": {\r\n        \"type\": \"float\",\r\n        \"value\": 1.0,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"GlobalAveragePooling1D\": {\r\n      \"data_format\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"channels_last\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"GlobalAveragePooling2D\": {\r\n      \"data_format\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"GlobalAveragePooling3D\": {\r\n      \"data_format\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"GlobalMaxPool1D\": {\r\n      \"data_format\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"channels_last\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"GlobalMaxPool2D\": {\r\n      \"data_format\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"GlobalMaxPool3D\": {\r\n      \"data_format\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"InputSpec\": {\r\n      \"dtype\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"shape\": {\r\n        \"type\": null,\r\n        \"value\": null,\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"ndim\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"max_ndim\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"min_ndim\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"axes\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"None)\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"LSTM\": {\r\n      \"units\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"activation\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"tanh\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"recurrent_activation\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"sigmoid\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"use_bias\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_initializer\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"glorot_uniform\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"recurrent_initializer\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"orthogonal\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias_initializer\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"zeros\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"unit_forget_bias\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"recurrent_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"activity_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_constraint\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"recurrent_constraint\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias_constraint\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"dropout\": {\r\n        \"type\": \"float\",\r\n        \"value\": 0.0,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"recurrent_dropout\": {\r\n        \"type\": \"float\",\r\n        \"value\": 0.0,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"implementation\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"return_sequences\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"return_state\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"go_backwards\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"stateful\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"time_major\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"unroll\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"LSTMCell\": {\r\n      \"units\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"activation\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"tanh\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"recurrent_activation\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"hard_sigmoid\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"use_bias\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_initializer\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"glorot_uniform\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"recurrent_initializer\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"orthogonal\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias_initializer\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"zeros\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"unit_forget_bias\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"recurrent_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_constraint\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"recurrent_constraint\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias_constraint\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"dropout\": {\r\n        \"type\": \"float\",\r\n        \"value\": 0.0,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"recurrent_dropout\": {\r\n        \"type\": \"float\",\r\n        \"value\": 0.0,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"implementation\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"Lambda\": {\r\n      \"function\": {\r\n        \"type\": \"\",\r\n        \"value\": null,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"output_shape\": {\r\n        \"type\": null,\r\n        \"value\": null,\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"mask\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"arguments\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"Layer\": {\r\n      \")\": {\r\n        \"type\": null,\r\n        \"value\": null,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"LeakyReLU\": {\r\n      \"alpha\": {\r\n        \"type\": \"float\",\r\n        \"value\": 0.3,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"LinearModel\": {\r\n      \"feature_columns\": {\r\n        \"type\": null,\r\n        \"value\": null,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"units\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"sparse_combiner\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"sum\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"trainable\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"LocallyConnected1D\": {\r\n      \"filters\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_size\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"strides\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"padding\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"valid\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"data_format\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"activation\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"use_bias\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_initializer\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"glorot_uniform\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias_initializer\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"zeros\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"activity_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_constraint\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias_constraint\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"implementation\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"LocallyConnected2D\": {\r\n      \"filters\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_size\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"strides\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"padding\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"valid\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"data_format\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"activation\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"use_bias\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_initializer\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"glorot_uniform\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias_initializer\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"zeros\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"activity_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_constraint\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias_constraint\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"implementation\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"Masking\": {\r\n      \"mask_value\": {\r\n        \"type\": \"float\",\r\n        \"value\": 0.0,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"MaxPool1D\": {\r\n      \"pool_size\": {\r\n        \"type\": \"int\",\r\n        \"value\": 2,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"strides\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"padding\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"valid\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"data_format\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"channels_last\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"MaxPool2D\": {\r\n      \"pool_size\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          2,\r\n          2\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"strides\": {\r\n        \"type\": null,\r\n        \"value\": [\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"padding\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"valid\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"data_format\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"MaxPool3D\": {\r\n      \"pool_size\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          2,\r\n          2,\r\n          2\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"strides\": {\r\n        \"type\": null,\r\n        \"value\": [\r\n          1,\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"padding\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"valid\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"data_format\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"Maximum\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"Minimum\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"Multiply\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"PReLU\": {\r\n      \"alpha_initializer\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"zeros\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"alpha_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"alpha_constraint\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"shared_axes\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"Permute\": {\r\n      \"dims\": {\r\n        \"type\": \"int\",\r\n        \"value\": null,\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"RNN\": {\r\n      \"cell\": {\r\n        \"type\": \"\",\r\n        \"value\": null,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"return_sequences\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"return_state\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"go_backwards\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"stateful\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"unroll\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"time_major\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"ReLU\": {\r\n      \"max_value\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"negative_slope\": {\r\n        \"type\": \"int\",\r\n        \"value\": 0,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"threshold\": {\r\n        \"type\": \"int\",\r\n        \"value\": 0,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"RepeatVector\": {\r\n      \"n\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"Reshape\": {\r\n      \"target_shape\": {\r\n        \"type\": \"int\",\r\n        \"value\": null,\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"SeparableConv1D\": {\r\n      \"filters\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_size\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"strides\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"padding\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"valid\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"data_format\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"dilation_rate\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"depth_multiplier\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"activation\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"use_bias\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"depthwise_initializer\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"glorot_uniform\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"pointwise_initializer\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"glorot_uniform\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias_initializer\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"zeros\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"depthwise_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"pointwise_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"activity_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"depthwise_constraint\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"pointwise_constraint\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias_constraint\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"SeparableConv2D\": {\r\n      \"filters\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_size\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"strides\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"padding\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"valid\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"data_format\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"dilation_rate\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"depth_multiplier\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"activation\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"use_bias\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"depthwise_initializer\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"glorot_uniform\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"pointwise_initializer\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"glorot_uniform\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias_initializer\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"zeros\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"depthwise_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"pointwise_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"activity_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"depthwise_constraint\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"pointwise_constraint\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias_constraint\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"SimpleRNN\": {\r\n      \"units\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"activation\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"tanh\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"use_bias\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_initializer\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"glorot_uniform\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"recurrent_initializer\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"orthogonal\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias_initializer\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"zeros\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"recurrent_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"activity_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_constraint\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"recurrent_constraint\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias_constraint\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"dropout\": {\r\n        \"type\": \"float\",\r\n        \"value\": 0.0,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"recurrent_dropout\": {\r\n        \"type\": \"float\",\r\n        \"value\": 0.0,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"return_sequences\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"return_state\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"go_backwards\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"stateful\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"unroll\": {\r\n        \"type\": \"bool\",\r\n        \"value\": false,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"SimpleRNNCell\": {\r\n      \"units\": {\r\n        \"type\": \"int\",\r\n        \"value\": 1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"activation\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"tanh\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"use_bias\": {\r\n        \"type\": \"bool\",\r\n        \"value\": true,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_initializer\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"glorot_uniform\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"recurrent_initializer\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"orthogonal\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias_initializer\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"zeros\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"recurrent_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias_regularizer\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"kernel_constraint\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"recurrent_constraint\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"bias_constraint\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"dropout\": {\r\n        \"type\": \"float\",\r\n        \"value\": 0.0,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"recurrent_dropout\": {\r\n        \"type\": \"float\",\r\n        \"value\": 0.0,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"Softmax\": {\r\n      \"axis\": {\r\n        \"type\": \"int\",\r\n        \"value\": -1,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"SpatialDropout1D\": {\r\n      \"rate\": {\r\n        \"type\": \"float\",\r\n        \"value\": 1.0,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"SpatialDropout2D\": {\r\n      \"rate\": {\r\n        \"type\": \"float\",\r\n        \"value\": 1.0,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"data_format\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"SpatialDropout3D\": {\r\n      \"rate\": {\r\n        \"type\": \"float\",\r\n        \"value\": 1.0,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"data_format\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"StackedRNNCells\": {\r\n      \"cells\": {\r\n        \"type\": \"\",\r\n        \"value\": null,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"Subtract\": {\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"ThresholdedReLU\": {\r\n      \"theta\": {\r\n        \"type\": \"float\",\r\n        \"value\": 1.0,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"TimeDistributed\": {\r\n      \"layer\": {\r\n        \"type\": \"\",\r\n        \"value\": null,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"UpSampling1D\": {\r\n      \"size\": {\r\n        \"type\": \"int\",\r\n        \"value\": 2,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"UpSampling2D\": {\r\n      \"size\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          2,\r\n          2\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"data_format\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"interpolation\": {\r\n        \"type\": \"string\",\r\n        \"value\": \"nearest\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"UpSampling3D\": {\r\n      \"size\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          2,\r\n          2,\r\n          2\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"data_format\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"Wrapper\": {\r\n      \"layer\": {\r\n        \"type\": \"\",\r\n        \"value\": null,\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"ZeroPadding1D\": {\r\n      \"padding\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"ZeroPadding2D\": {\r\n      \"padding\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"data_format\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    },\r\n    \"ZeroPadding3D\": {\r\n      \"padding\": {\r\n        \"type\": \"int\",\r\n        \"value\": [\r\n          1,\r\n          1,\r\n          1\r\n        ],\r\n        \"istuple\": true,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"data_format\": {\r\n        \"type\": null,\r\n        \"value\": \"None\",\r\n        \"istuple\": false,\r\n        \"min\": -Infinity,\r\n        \"max\": Infinity\r\n      },\r\n      \"extras\": {\r\n        \"gothidden\": false\r\n      }\r\n    }\r\n  }\r\n}","export function getPyTorchAutoparams() {\r\n  return {\r\n    \"AdaptiveAvgPool1d\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        var tmp = inp;\r\n        tmp[tmp.length - 1] = p.output_size.value;\r\n        return tmp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"AdaptiveAvgPool2d\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        var tmp = inp;\r\n        tmp[tmp.length - 2] = p.output_size.value[0];\r\n        tmp[tmp.length - 1] = p.output_size.value[1];\r\n        return tmp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"AdaptiveAvgPool3d\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        var tmp = inp;\r\n        tmp[tmp.length - 3] = p.output_size.value[0];\r\n        tmp[tmp.length - 2] = p.output_size.value[1];\r\n        tmp[tmp.length - 1] = p.output_size.value[2];\r\n        return tmp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"AdaptiveLogSoftmaxWithLoss\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return inp.slice(0, inp.length - 1)\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"AdaptiveMaxPool1d\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        var tmp = inp;\r\n        tmp[tmp.length - 1] = p.output_size.value;\r\n        return tmp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"AdaptiveMaxPool2d\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        var tmp = inp;\r\n        tmp[tmp.length - 2] = p.output_size.value[0];\r\n        tmp[tmp.length - 1] = p.output_size.value[1];\r\n        return tmp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"AdaptiveMaxPool3d\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        var tmp = inp;\r\n        tmp[tmp.length - 3] = p.output_size.value[0];\r\n        tmp[tmp.length - 2] = p.output_size.value[1];\r\n        tmp[tmp.length - 1] = p.output_size.value[2];\r\n        return tmp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"AlphaDropout\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return inp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"AvgPool1d\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        var tmp = inp;\r\n        tmp[tmp.length - 1] = 1 + ((inp[inp.length - 1] + 2 * p.padding.value - p.kernel_size.value) / p.stride.value)\r\n        if (p.ceil_mode.value) {\r\n          tmp[tmp.length - 1] = Math.ceil(tmp[tmp.length - 1])\r\n        } else {\r\n          tmp[tmp.length - 1] = Math.floor(tmp[tmp.length - 1])\r\n        }\r\n        return tmp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"AvgPool2d\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        var tmp = inp;\r\n        tmp[tmp.length - 2] = 1 + ((inp[inp.length - 2] + 2 * p.padding.value[0] - p.kernel_size.value[0]) / p.stride.value[0])\r\n        tmp[tmp.length - 1] = 1 + ((inp[inp.length - 1] + 2 * p.padding.value[1] - p.kernel_size.value[1]) / p.stride.value[1])\r\n        if (p.ceil_mode.value) {\r\n          tmp[tmp.length - 2] = Math.ceil(tmp[tmp.length - 2])\r\n          tmp[tmp.length - 1] = Math.ceil(tmp[tmp.length - 1])\r\n        } else {\r\n          tmp[tmp.length - 2] = Math.floor(tmp[tmp.length - 2])\r\n          tmp[tmp.length - 1] = Math.floor(tmp[tmp.length - 1])\r\n        }\r\n        return tmp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"AvgPool3d\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        var tmp = inp;\r\n        tmp[tmp.length - 3] = 1 + ((inp[inp.length - 3] + 2 * p.padding.value[0] - p.kernel_size.value[0]) / p.stride.value[0])\r\n        tmp[tmp.length - 2] = 1 + ((inp[inp.length - 2] + 2 * p.padding.value[1] - p.kernel_size.value[1]) / p.stride.value[1])\r\n        tmp[tmp.length - 1] = 1 + ((inp[inp.length - 1] + 2 * p.padding.value[2] - p.kernel_size.value[2]) / p.stride.value[2])\r\n        if (p.ceil_mode.value) {\r\n          tmp[tmp.length - 3] = Math.ceil(tmp[tmp.length - 3])\r\n          tmp[tmp.length - 2] = Math.ceil(tmp[tmp.length - 2])\r\n          tmp[tmp.length - 1] = Math.ceil(tmp[tmp.length - 1])\r\n        } else {\r\n          tmp[tmp.length - 3] = Math.floor(tmp[tmp.length - 3])\r\n          tmp[tmp.length - 2] = Math.floor(tmp[tmp.length - 2])\r\n          tmp[tmp.length - 1] = Math.floor(tmp[tmp.length - 1])\r\n        }\r\n        return tmp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"BatchNorm1d\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return inp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        p.num_features.value = inp[1]\r\n        return p\r\n      }\r\n    },\r\n    \"BatchNorm2d\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return inp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        p.num_features.value = inp[1]\r\n        return p\r\n      }\r\n    },\r\n    \"BatchNorm3d\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return inp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        p.num_features.value = inp[1]\r\n        return p\r\n      }\r\n    },\r\n    \"Bilinear\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        var tmp = inp;\r\n        tmp[tmp.length - 1] = p.out_features.value;\r\n        return tmp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        p.num_features.current = inp[1]\r\n        return p\r\n      }\r\n    },\r\n    \"CELU\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return inp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"Concatenate\": {\r\n      outshape: (inp, p) => {\r\n        var tmp = inp[0]\r\n        inp.slice(1).map(row => {tmp[p.dim.value] += row[p.dim.value]})\r\n        return tmp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"ConstantPad1d\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        var tmp = inp;\r\n        tmp[tmp.length - 1] = inp[inp.length - 1] + 2 * p.padding.value;\r\n        return tmp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"ConstantPad2d\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        var tmp = inp;\r\n        tmp[tmp.length - 2] = inp[inp.length - 2] + 2 * p.padding.value[0]\r\n        tmp[tmp.length - 1] = inp[inp.length - 1] + 2 * p.padding.value[1]\r\n        return tmp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"ConstantPad3d\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        var tmp = inp;\r\n        tmp[tmp.length - 3] = inp[inp.length - 3] + 2 * p.padding.value[0]\r\n        tmp[tmp.length - 2] = inp[inp.length - 2] + 2 * p.padding.value[1]\r\n        tmp[tmp.length - 1] = inp[inp.length - 1] + 2 * p.padding.value[2]\r\n        return tmp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"Conv1d\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        var tmp = inp;\r\n        const L_in = inp[inp.length - 1]\r\n        const L_out = Math.floor(1 + (L_in + 2 * p.padding.value - p.dilation.value * (p.kernel_size.value - 1) - 1) / p.stride.value)\r\n        tmp[tmp.length - 2] = p.out_channels.value\r\n        tmp[tmp.length - 1] = L_out\r\n        return tmp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        p.in_channels.value = inp[inp.length - 2]\r\n        return p\r\n      }\r\n    },\r\n    \"Conv2d\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        var tmp = inp;\r\n        const H_in = inp[inp.length - 2]\r\n        const W_in = inp[inp.length - 1]\r\n        const H_out = Math.floor(1 + (H_in + 2 * p.padding.value[0] - p.dilation.value[0] * (p.kernel_size.value[0] - 1) - 1) / p.stride.value[0])\r\n        const W_out = Math.floor(1 + (W_in + 2 * p.padding.value[1] - p.dilation.value[1] * (p.kernel_size.value[1] - 1) - 1) / p.stride.value[1])\r\n        tmp[tmp.length - 3] = p.out_channels.value\r\n        tmp[tmp.length - 2] = H_out\r\n        tmp[tmp.length - 1] = W_out\r\n        return tmp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        p.in_channels.value = inp[inp.length - 3]\r\n        return p\r\n      }\r\n    },\r\n    \"Conv3d\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        var tmp = inp;\r\n        const D_in = inp[inp.length - 3]\r\n        const H_in = inp[inp.length - 2]\r\n        const W_in = inp[inp.length - 1]\r\n        const D_out = Math.floor(1 + (D_in + 2 * p.padding.value[0] - p.dilation.value[0] * (p.kernel_size.value[0] - 1) - 1) / p.stride.value[0])\r\n        const H_out = Math.floor(1 + (H_in + 2 * p.padding.value[1] - p.dilation.value[1] * (p.kernel_size.value[1] - 1) - 1) / p.stride.value[1])\r\n        const W_out = Math.floor(1 + (W_in + 2 * p.padding.value[2] - p.dilation.value[2] * (p.kernel_size.value[2] - 1) - 1) / p.stride.value[2])\r\n        tmp[tmp.length - 4] = p.out_channels.value\r\n        tmp[tmp.length - 3] = D_out\r\n        tmp[tmp.length - 2] = H_out\r\n        tmp[tmp.length - 1] = W_out\r\n        return tmp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        p.in_channels.value = inp[inp.length - 4]\r\n        return p\r\n      }\r\n    },\r\n    \"ConvTranspose1d\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        var tmp = inp;\r\n        const L_in = inp[inp.length - 1]\r\n        const L_out = (L_in - 1) * p.stride.value + p.dilation.value * (p.kernel_size.value - 1) + p.output_padding.value + 1\r\n        tmp[tmp.length - 2] = p.out_channels.value\r\n        tmp[tmp.length - 1] = L_out\r\n        return tmp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        p.in_channels.value = inp[inp.length - 2]\r\n        return p\r\n      }\r\n    },\r\n    \"ConvTranspose2d\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        var tmp = inp;\r\n        const H_in = inp[inp.length - 2]\r\n        const W_in = inp[inp.length - 1]\r\n        const H_out = (H_in - 1) * p.stride.value[0] + p.dilation.value[0] * (p.kernel_size.value[0] - 1) + p.output_padding.value[0] + 1\r\n        const W_out = (W_in - 1) * p.stride.value[1] + p.dilation.value[1] * (p.kernel_size.value[1] - 1) + p.output_padding.value[1] + 1\r\n        tmp[tmp.length - 3] = p.out_channels.value\r\n        tmp[tmp.length - 2] = H_out\r\n        tmp[tmp.length - 1] = W_out\r\n        return tmp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        p.in_channels.value = inp[inp.length - 3]\r\n        return p\r\n      }\r\n    },\r\n    \"ConvTranspose3d\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        var tmp = inp;\r\n        const D_in = inp[inp.length - 3]\r\n        const H_in = inp[inp.length - 2]\r\n        const W_in = inp[inp.length - 1]\r\n        const D_out = (D_in - 1) * p.stride.value[0] + p.dilation.value[0] * (p.kernel_size.value[0] - 1) + p.output_padding.value[0] + 1\r\n        const H_out = (H_in - 1) * p.stride.value[1] + p.dilation.value[1] * (p.kernel_size.value[1] - 1) + p.output_padding.value[1] + 1\r\n        const W_out = (W_in - 1) * p.stride.value[2] + p.dilation.value[2] * (p.kernel_size.value[2] - 1) + p.output_padding.value[2] + 1\r\n        tmp[tmp.length - 4] = p.out_channels.value\r\n        tmp[tmp.length - 3] = D_out\r\n        tmp[tmp.length - 2] = H_out\r\n        tmp[tmp.length - 1] = W_out\r\n        return tmp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        p.in_channels.value = inp[inp.length - 4]\r\n        return p\r\n      }\r\n    },\r\n    \"Dropout\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return inp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"Dropout2d\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return inp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"Dropout3d\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return inp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"ELU\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return inp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"Embedding\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        var tmp = inp\r\n        inp[inp.length - 1] = p.embedding_dim.value\r\n        return tmp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        p.num_embeddings.value = inp[inp.length - 1]\r\n        return p\r\n      }\r\n    },\r\n    \"EmbeddingBag\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        var tmp = inp\r\n        tmp.push(p.embedding_dim.value)\r\n        return tmp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"Flatten\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        var features = 1/inp[0]\r\n        inp.map(val => {features *= val})\r\n        return [inp[0], Math.round(features)]\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"FractionalMaxPool2d\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        var tmp = inp;\r\n        const H_in = inp[inp.length - 2]\r\n        const W_in = inp[inp.length - 1]\r\n        const H_out = Math.floor(1 + (H_in + 2 * p.padding.value[0] - p.dilation.value[0] * (p.kernel_size.value[0] - 1) - 1) / p.stride.value[0])\r\n        const W_out = Math.floor(1 + (W_in + 2 * p.padding.value[1] - p.dilation.value[1] * (p.kernel_size.value[1] - 1) - 1) / p.stride.value[1])\r\n        tmp[tmp.length - 2] = H_out\r\n        tmp[tmp.length - 1] = W_in\r\n        return tmp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"GRU\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        var idx = 0\r\n        var out_shape = inp.map((val, index) => {\r\n          idx = index\r\n          return val\r\n        })\r\n        out_shape[idx] = p.hidden_size.value\r\n        return out_shape\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        p.input_size.value = inp[inp.length-1]\r\n        return p\r\n      }\r\n    },\r\n    \"GRUCell\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        var idx = 0\r\n        var out_shape = inp.map((val, index) => {\r\n          idx = index\r\n          return val\r\n        })\r\n        out_shape[idx] = p.hidden_size.value\r\n        return out_shape\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        p.input_size.value = inp[inp.length-1]\r\n        return p\r\n      }\r\n    },\r\n    \"GroupNorm\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return inp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        p.num_channels.value = inp[1]\r\n        return p\r\n      }\r\n    },\r\n    \"Hardshrink\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return inp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"Identity\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return inp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"InstanceNorm1d\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return inp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        p.num_features.value = inp[1]\r\n        return p\r\n      }\r\n    },\r\n    \"InstanceNorm2d\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return inp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        p.num_features.value = inp[1]\r\n        return p\r\n      }\r\n    },\r\n    \"InstanceNorm3d\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return inp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        p.num_features.value = inp[1]\r\n        return p\r\n      }\r\n    },\r\n    \"LPPool1d\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        var tmp = inp\r\n        var L_out = 1 + (inp[inp.length - 1] + 2 * p.padding.value - p.kernel_size.value) / p.stride.value\r\n        if (p.ceil_mode.value) {\r\n          L_out = Math.ceil(L_out)\r\n        } else {\r\n          L_out = Math.floor(L_out)\r\n        }\r\n        tmp[tmp.length - 1] = L_out\r\n        return tmp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"LPPool2d\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        var tmp = inp\r\n        var H_out = 1 + (inp[inp.length - 2] + 2 * p.padding.value[0] - p.dilation[0] * (p.kernel_size[0] - 1) - 1) / p.stride.value[0]\r\n        var W_out = 1 + (inp[inp.length - 1] + 2 * p.padding.value[1] - p.dilation[1] * (p.kernel_size[1] - 1) - 1) / p.stride.value[1]\r\n        if (p.ceil_mode.value) {\r\n          H_out = Math.ceil(H_out)\r\n          W_out = Math.ceil(W_out)\r\n        } else {\r\n          H_out = Math.floor(H_out)\r\n          W_out = Math.floor(W_out)\r\n        }\r\n        tmp[tmp.length - 2] = H_out\r\n        tmp[tmp.length - 1] = W_out\r\n        return tmp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"LSTM\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        var idx = 0\r\n        var out_shape = inp.map((val, index) => {\r\n          idx = index\r\n          return val\r\n        })\r\n        out_shape[idx] = p.hidden_size.value\r\n        return out_shape\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        p.input_size.value = inp[inp.length-1]\r\n        return p\r\n      }\r\n    },\r\n    \"LSTMCell\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        var idx = 0\r\n        var out_shape = inp.map((val, index) => {\r\n          idx = index\r\n          return val\r\n        })\r\n        out_shape[idx] = p.hidden_size.value\r\n        return out_shape\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        p.input_size.value = inp[inp.length-1]\r\n        return p\r\n      }\r\n    },\r\n    \"LayerNorm\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return inp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"LeakyReLU\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return inp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"Linear\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        var idx = 0;\r\n        var out_shape = inp.map((val, index) => {\r\n          idx = index;\r\n          return val\r\n        });\r\n        out_shape[idx] = p.out_features.value;\r\n        return out_shape\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        p.in_features.value = inp[inp.length - 1]\r\n        return p\r\n      }\r\n    },\r\n    \"LocalResponseNorm\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return inp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"LogSigmoid\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return inp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"LogSoftmax\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return inp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"Max\": {\r\n      outshape: (inp, p) => {\r\n        return inp[0]\r\n      },\r\n      autoparams: (inp, p) => {\r\n        return p\r\n      }\r\n    },\r\n    \"MaxPool1d\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        const L_in = inp[inp.length - 1]\r\n        const L_out = Math.floor(1 + (L_in + 2 * p.padding.value - p.dilation.value * (p.kernel_size.value - 1) - 1) / p.stride.value)\r\n        inp[inp.length - 1] = L_out;\r\n        return inp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"MaxPool2d\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        const H_in = inp[inp.length - 2]\r\n        const W_in = inp[inp.length - 1]\r\n        const H_out = Math.floor(1 + (H_in + 2 * p.padding.value[0] - p.dilation.value[0] * (p.kernel_size.value[0] - 1) - 1) / p.stride.value[0])\r\n        const W_out = Math.floor(1 + (W_in + 2 * p.padding.value[1] - p.dilation.value[1] * (p.kernel_size.value[1] - 1) - 1) / p.stride.value[1])\r\n        inp[inp.length - 2] = H_out\r\n        inp[inp.length - 1] = W_out\r\n        return inp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"MaxPool3d\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        const D_in = inp[inp.length - 3]\r\n        const H_in = inp[inp.length - 2]\r\n        const W_in = inp[inp.length - 1]\r\n        const D_out = Math.floor(1 + (D_in + 2 * p.padding.value[0] - p.dilation.value[0] * (p.kernel_size.value[0] - 1) - 1) / p.stride.value[0])\r\n        const H_out = Math.floor(1 + (H_in + 2 * p.padding.value[1] - p.dilation.value[1] * (p.kernel_size.value[1] - 1) - 1) / p.stride.value[1])\r\n        const W_out = Math.floor(1 + (W_in + 2 * p.padding.value[2] - p.dilation.value[2] * (p.kernel_size.value[2] - 1) - 1) / p.stride.value[2])\r\n        inp[inp.length - 3] = D_out\r\n        inp[inp.length - 2] = H_out\r\n        inp[inp.length - 1] = W_out\r\n        return inp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"MaxUnpool1d\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        const H_in = inp[inp.length - 1]\r\n        inp[inp.length - 1] = (H_in - 1) * p.stride.value - 2 * p.padding.value + p.kernel_size.value\r\n        return inp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"MaxUnpool2d\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        const H_in = inp[inp.length - 2]\r\n        const W_in = inp[inp.length - 1]\r\n        inp[inp.length - 2] = (H_in - 1) * p.stride.value[0] - 2 * p.padding.value[0] + p.kernel_size.value[0]\r\n        inp[inp.length - 1] = (W_in - 1) * p.stride.value[1] - 2 * p.padding.value[1] + p.kernel_size.value[1]\r\n        return inp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"MaxUnpool3d\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        const D_in = inp[inp.length - 3]\r\n        const H_in = inp[inp.length - 2]\r\n        const W_in = inp[inp.length - 1]\r\n        inp[inp.length - 3] = (D_in - 1) * p.stride.value[0] - 2 * p.padding.value[0] + p.kernel_size.value[0]\r\n        inp[inp.length - 2] = (H_in - 1) * p.stride.value[1] - 2 * p.padding.value[1] + p.kernel_size.value[1]\r\n        inp[inp.length - 1] = (W_in - 1) * p.stride.value[2] - 2 * p.padding.value[2] + p.kernel_size.value[2]\r\n        return inp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"Mean\": {\r\n      outshape: (inp, p) => {\r\n        return inp[0]\r\n      },\r\n      autoparams: (inp, p) => {\r\n        return p\r\n      }\r\n    },\r\n    \"PReLU\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return inp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"RNN\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        var idx = 0\r\n        var out_shape = inp.map((val, index) => {\r\n          idx = index\r\n          return val\r\n        })\r\n        out_shape[idx] = p.hidden_size.value\r\n        return out_shape\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        p.input_size.value = inp[inp.length-1]\r\n        return p\r\n      }\r\n    },\r\n    \"RNNCell\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        var idx = 0\r\n        var out_shape = inp.map((val, index) => {\r\n          idx = index\r\n          return val\r\n        })\r\n        out_shape[idx] = p.hidden_size.value\r\n        return out_shape\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        p.input_size.value = inp[inp.length-1]\r\n        return p\r\n      }\r\n    },\r\n    \"RReLU\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return inp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"ReLU\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return inp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"ReLU6\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return inp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"ReflectionPad1d\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        let W_out = inp[inp.length - 1] + 2 * p.padding.value\r\n        inp[inp.length - 1] = W_out\r\n        return inp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"ReflectionPad2d\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        let H_out = inp[inp.length - 2] + 2 * p.padding.value[0]\r\n        let W_out = inp[inp.length - 1] + 2 * p.padding.value[1]\r\n        inp[inp.length - 2] = H_out\r\n        inp[inp.length - 1] = W_out\r\n        return inp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"ReplicationPad1d\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        let W_out = inp[inp.length - 1] + 2 * p.padding.value\r\n        inp[inp.length - 1] = W_out\r\n        return inp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"ReplicationPad2d\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        let H_out = inp[inp.length - 2] + 2 * p.padding.value[0]\r\n        let W_out = inp[inp.length - 1] + 2 * p.padding.value[1]\r\n        inp[inp.length - 2] = H_out\r\n        inp[inp.length - 1] = W_out\r\n        return inp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"ReplicationPad3d\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        let D_out = inp[inp.length - 3] + 2 * p.padding.value[0]\r\n        let H_out = inp[inp.length - 2] + 2 * p.padding.value[1]\r\n        let W_out = inp[inp.length - 1] + 2 * p.padding.value[2]\r\n        inp[inp.length - 3] = D_out\r\n        inp[inp.length - 2] = H_out\r\n        inp[inp.length - 1] = W_out\r\n        return inp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"SELU\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return inp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"Sigmoid\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return inp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"Softmax\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return inp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"Softmax2d\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return inp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"Softmin\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return inp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"Softplus\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return inp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"Softshrink\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return inp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"Softsign\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return inp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"SyncBatchNorm\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return inp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        p.num_features.value = inp[1]\r\n        return p\r\n      }\r\n    },\r\n    \"Tanh\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return inp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"Tanhshrink\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return inp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"Threshold\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return inp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"ZeroPad2d\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        const H_out = inp[inp.length - 2] + 2 * p.padding[0]\r\n        const W_out = inp[inp.length - 1] + 2 * p.padding[1]\r\n        inp[inp.length - 2] = H_out\r\n        inp[inp.length - 1] = W_out\r\n        return inp\r\n      },\r\n      autoparams: (inp, p) => {\r\n        inp = inp[0]\r\n        return p\r\n      }\r\n    },\r\n    \"resnet18\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return [inp[0], p.num_classes.value]\r\n      },\r\n      autoparams: (inp, p) => {\r\n        return p\r\n      }\r\n    },\r\n    \"resnet34\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return [inp[0], p.num_classes.value]\r\n      },\r\n      autoparams: (inp, p) => {\r\n        return p\r\n      }\r\n    },\r\n    \"resnet50\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return [inp[0], p.num_classes.value]\r\n      },\r\n      autoparams: (inp, p) => {\r\n        return p\r\n      }\r\n    },\r\n    \"resnet101\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return [inp[0], p.num_classes.value]\r\n      },\r\n      autoparams: (inp, p) => {\r\n        return p\r\n      }\r\n    },\r\n    \"resnet152\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return [inp[0], p.num_classes.value]\r\n      },\r\n      autoparams: (inp, p) => {\r\n        return p\r\n      }\r\n    },\r\n    \"vgg11\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return [inp[0], p.num_classes.value]\r\n      },\r\n      autoparams: (inp, p) => {\r\n        return p\r\n      }\r\n    },\r\n    \"vgg13\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return [inp[0], p.num_classes.value]\r\n      },\r\n      autoparams: (inp, p) => {\r\n        return p\r\n      }\r\n    },\r\n    \"vgg16\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return [inp[0], p.num_classes.value]\r\n      },\r\n      autoparams: (inp, p) => {\r\n        return p\r\n      }\r\n    },\r\n    \"vgg19\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return [inp[0], p.num_classes.value]\r\n      },\r\n      autoparams: (inp, p) => {\r\n        return p\r\n      }\r\n    },\r\n    \"alexnet\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return [inp[0], p.num_classes.value]\r\n      },\r\n      autoparams: (inp, p) => {\r\n        return p\r\n      }\r\n    },\r\n    \"squeezenet1_0\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return [inp[0], p.num_classes.value]\r\n      },\r\n      autoparams: (inp, p) => {\r\n        return p\r\n      }\r\n    },\r\n    \"squeezenet1_1\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return [inp[0], p.num_classes.value]\r\n      },\r\n      autoparams: (inp, p) => {\r\n        return p\r\n      }\r\n    },\r\n    \"densenet121\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return [inp[0], p.num_classes.value]\r\n      },\r\n      autoparams: (inp, p) => {\r\n        return p\r\n      }\r\n    },\r\n    \"densenet169\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return [inp[0], p.num_classes.value]\r\n      },\r\n      autoparams: (inp, p) => {\r\n        return p\r\n      }\r\n    },\r\n    \"densenet161\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return [inp[0], p.num_classes.value]\r\n      },\r\n      autoparams: (inp, p) => {\r\n        return p\r\n      }\r\n    },\r\n    \"densenet201\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return [inp[0], p.num_classes.value]\r\n      },\r\n      autoparams: (inp, p) => {\r\n        return p\r\n      }\r\n    },\r\n    \"inception_v3\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return [inp[0], p.num_classes.value]\r\n      },\r\n      autoparams: (inp, p) => {\r\n        return p\r\n      }\r\n    },\r\n    \"googlenet\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return [inp[0], p.num_classes.value]\r\n      },\r\n      autoparams: (inp, p) => {\r\n        return p\r\n      }\r\n    },\r\n    \"shufflenet_v2_x0_5\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return [inp[0], p.num_classes.value]\r\n      },\r\n      autoparams: (inp, p) => {\r\n        return p\r\n      }\r\n    },\r\n    \"shufflenet_v2_x1_0\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return [inp[0], p.num_classes.value]\r\n      },\r\n      autoparams: (inp, p) => {\r\n        return p\r\n      }\r\n    },\r\n    \"shufflenet_v2_x1_5\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return [inp[0], p.num_classes.value]\r\n      },\r\n      autoparams: (inp, p) => {\r\n        return p\r\n      }\r\n    },\r\n    \"shufflenet_v2_x2_0\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return [inp[0], p.num_classes.value]\r\n      },\r\n      autoparams: (inp, p) => {\r\n        return p\r\n      }\r\n    },\r\n    \"mobilenet_v2\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return [inp[0], p.num_classes.value]\r\n      },\r\n      autoparams: (inp, p) => {\r\n        return p\r\n      }\r\n    },\r\n    \"resnext50_32x4d\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return [inp[0], p.num_classes.value]\r\n      },\r\n      autoparams: (inp, p) => {\r\n        return p\r\n      }\r\n    },\r\n    \"resnext101_32x8d\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return [inp[0], p.num_classes.value]\r\n      },\r\n      autoparams: (inp, p) => {\r\n        return p\r\n      }\r\n    },\r\n    \"segmentation.fcn_resnet50\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return [inp[0], p.num_classes.value]\r\n      },\r\n      autoparams: (inp, p) => {\r\n        return p\r\n      }\r\n    },\r\n    \"segmentation.fcn_resnet101\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return [inp[0], p.num_classes.value]\r\n      },\r\n      autoparams: (inp, p) => {\r\n        return p\r\n      }\r\n    },\r\n    \"segmentation.deeplabv3_resnet50\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return [inp[0], p.num_classes.value]\r\n      },\r\n      autoparams: (inp, p) => {\r\n        return p\r\n      }\r\n    },\r\n    \"segmentation.deeplabv3_resnet101\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return [inp[0], p.num_classes.value]\r\n      },\r\n      autoparams: (inp, p) => {\r\n        return p\r\n      }\r\n    },\r\n    \"detection.fasterrcnn_resnet50_fpn\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return [inp[0], p.num_classes.value]\r\n      },\r\n      autoparams: (inp, p) => {\r\n        return p\r\n      }\r\n    },\r\n    \"detection.maskrcnn_resnet50_fpn\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return [inp[0], p.num_classes.value]\r\n      },\r\n      autoparams: (inp, p) => {\r\n        return p\r\n      }\r\n    },\r\n    \"detection.keypointrcnn_resnet50_fpn\": {\r\n      outshape: (inp, p) => {\r\n        inp = inp[0]\r\n        return [inp[0], p.num_classes.value]\r\n      },\r\n      autoparams: (inp, p) => {\r\n        return p\r\n      }\r\n    },\r\n  }\r\n}","import { MainLibrary } from \"./MainLibrary\";\r\n\r\n\r\n// Cascaded simplifying and de-simplifying\r\n\r\n// Parameters\r\nfunction SimplifyParameters(parameters) {\r\n  var new_parameters = [];\r\n  var keys = [];\r\n  Object.keys(parameters).map(p_key => {\r\n    if (p_key !== 'extras') keys.push(p_key)\r\n  })\r\n  keys.sort().map((p_key, idx) => {\r\n    new_parameters.push(parameters[p_key].value)\r\n  })\r\n  new_parameters.push(parameters.extras)\r\n  return new_parameters\r\n}\r\nfunction DeSimplifyParameters(parameters, recipe) {\r\n  recipe = JSON.parse(JSON.stringify(recipe));\r\n  const recipe_copy = JSON.parse(JSON.stringify(recipe))\r\n  var new_param_lib = {};\r\n  var keys = [];\r\n  Object.keys(recipe).map(p_key => {\r\n    if (p_key !== 'extras') keys.push(p_key)\r\n  })\r\n  keys.map(p_key => new_param_lib[p_key] = null)\r\n  keys.sort().map((p_key, idx) => {\r\n    new_param_lib[p_key] = recipe[p_key];\r\n    new_param_lib[p_key].value = parameters[idx];\r\n    if (new_param_lib[p_key].value === undefined) {\r\n      new_param_lib[p_key].value = recipe_copy[p_key].value\r\n    }\r\n  })\r\n  if (parameters[keys.length]) {\r\n    new_param_lib.extras = parameters[keys.length]\r\n  } else {\r\n    new_param_lib.extras = recipe.extras\r\n  }\r\n  return new_param_lib\r\n}\r\n\r\n// Content\r\nfunction SimplifyContent(content) {\r\n  var new_content = {};\r\n  Object.keys(content).sort().map((library_key, idx) => {\r\n    new_content[library_key] = [\r\n      content[library_key].reference,\r\n      SimplifyParameters(content[library_key].parameters)\r\n    ]\r\n  })\r\n  return new_content\r\n}\r\nfunction DeSimplifyContent(content, recipe) {\r\n  recipe = JSON.parse(JSON.stringify(recipe));\r\n  var new_content_lib = {}\r\n  Object.keys(recipe).sort().map((library_key, idx) => {\r\n    if (library_key in content) {\r\n      new_content_lib[library_key] = {\r\n        reference: content[library_key][0],\r\n        parameters: DeSimplifyParameters(content[library_key][1], recipe[library_key].parameters)\r\n      }\r\n    } else {\r\n      new_content_lib[library_key] = recipe[library_key]\r\n    }\r\n  })\r\n  return new_content_lib\r\n}\r\n\r\n// Outputs\r\nfunction SimplifyOutputs(outputs) {\r\n  var new_outputs = [];\r\n  Object.keys(outputs).sort().map(key => {\r\n    new_outputs.push(key)\r\n  })\r\n  return new_outputs\r\n}\r\nfunction DeSimplifyOutputs(outputs) {\r\n  var new_outputs_lib = {};\r\n  outputs.map(key => {\r\n    new_outputs_lib[key] = {}\r\n  })\r\n  return new_outputs_lib\r\n}\r\n\r\n// Position\r\nfunction SimplifyPosition(pos) {\r\n  return [\r\n    pos.x,\r\n    pos.y\r\n  ]\r\n}\r\nfunction DeSimplifyPosition(pos) {\r\n  return {\r\n    x: pos[0],\r\n    y: pos[1]\r\n  }\r\n}\r\n\r\n// Entire flowpoint\r\nfunction SimplifyFlowpoint(flowpoint) {\r\n  var new_flowpoint = {\r\n    ref: flowpoint.base_ref,\r\n    name: flowpoint.name,\r\n    isout: flowpoint.is_output,\r\n    out: SimplifyOutputs(flowpoint.outputs),\r\n    pos: SimplifyPosition(flowpoint.pos),\r\n    concat_inputs: flowpoint.concat_inputs,\r\n    concat_dim: flowpoint.concat_dim,\r\n    cont: {},\r\n    contig: flowpoint.contiguous,\r\n    re_ndims: flowpoint.reshape_ndims,\r\n    re_dims: flowpoint.reshape_dims\r\n  }\r\n  if (flowpoint.base_ref === 'Input') {\r\n    new_flowpoint.cont = flowpoint.content;\r\n  } else {\r\n    new_flowpoint.cont = SimplifyContent(flowpoint.content)\r\n  }\r\n  return new_flowpoint\r\n}\r\nfunction DeSimplifyFlowpoint(flowpoint, getEmptyFlowpointContent) {\r\n  const recipe = getEmptyFlowpointContent(flowpoint.ref);\r\n  var new_flowpoint_lib = {\r\n    base_ref: flowpoint.ref,\r\n    name: flowpoint.name,\r\n    is_output: flowpoint.isout,\r\n    outputs: DeSimplifyOutputs(flowpoint.out),\r\n    pos: DeSimplifyPosition(flowpoint.pos),\r\n    concat_inputs: flowpoint.concat_inputs || false,\r\n    concat_dim: flowpoint.concat_dim || 0,\r\n    output_shape: [],\r\n    content: {},\r\n    contiguous: flowpoint.contig || false,\r\n    reshape_ndims: flowpoint.re_ndims || 0,\r\n    reshape_dims: flowpoint.re_dims || []\r\n  };\r\n  if (flowpoint.ref === 'Input') {\r\n    new_flowpoint_lib.content = flowpoint.cont;\r\n  } else {\r\n    new_flowpoint_lib.content = DeSimplifyContent(flowpoint.cont, recipe, flowpoint.ref === 'Softmax')\r\n  }\r\n  return new_flowpoint_lib\r\n}\r\n\r\n// Fix tuples\r\nfunction FixTuples(flowpoints) {\r\n  Object.keys(flowpoints).map(key => {\r\n    var point = flowpoints[key];\r\n    if (point.base_ref !== 'Input') {\r\n      Object.keys(point.content).map(lib_key => {\r\n        var content = flowpoints[key].content[lib_key];\r\n        Object.keys(content.parameters).map(param_key => {\r\n          var param = flowpoints[key].content[lib_key].parameters[param_key];\r\n          if (param.istuple && !Array.isArray(param.value)) {\r\n\r\n            if (point.base_ref.toLowerCase().includes('1d')) {\r\n              param.value = [param.value];\r\n            } else if (point.base_ref.toLowerCase().includes('2d')) {\r\n              param.value = [param.value, param.value]\r\n            } else if (point.base_ref.toLowerCase().includes('3d')) {\r\n              param.value = [param.value, param.value, param.value]\r\n            }\r\n\r\n            if (!Array.isArray(param.value)) {\r\n              var sample_tuple = null;\r\n              Object.keys(content).map(param_key_2 => {\r\n                const p2 = content[param_key_2];\r\n                if (p2.istuple && Array.isArray(p2.value)) sample_tuple = p2.value.map(val => 1 * val)\r\n              })\r\n            }\r\n\r\n            if (!Array.isArray(param.value)) console.log('Could not fix', point)\r\n\r\n          }\r\n        })\r\n      })\r\n    }\r\n  })\r\n  return flowpoints\r\n}\r\n\r\n// Flowpoints (like plural)\r\nfunction SimplifyFlowpoints(flowpoints) {\r\n  var new_flowpoints = {};\r\n  Object.keys(flowpoints).sort().map((key, idx) => {\r\n    new_flowpoints[key] = SimplifyFlowpoint(flowpoints[key])\r\n  })\r\n  return new_flowpoints\r\n}\r\nfunction DeSimplifyFlowpoints(flowpoints, getEmptyFlowpointContent) {\r\n  var new_flowpoints_lib = {};\r\n  Object.keys(flowpoints).sort().map((key, idx) => {\r\n    new_flowpoints_lib[key] = DeSimplifyFlowpoint(flowpoints[key], getEmptyFlowpointContent)\r\n  })\r\n  return FixTuples(new_flowpoints_lib)\r\n}\r\n\r\n// Environment\r\nfunction SimplifyEnvironment(env) {\r\n  return [\r\n    env.library,\r\n    env.notes,\r\n    env.batch_first,\r\n    env.modelname,\r\n    env.include_training,\r\n    env.include_saveload,\r\n    env.include_predict\r\n  ]\r\n}\r\nfunction DeSimplifyEnvironment(env, main_env) {\r\n  var new_env_lib = JSON.parse(JSON.stringify(main_env));\r\n  new_env_lib.library = '' + env[0]\r\n  new_env_lib.notes = '' + env[1]\r\n  new_env_lib.batch_first = env[2] || false\r\n  new_env_lib.modelname = env[3] || 'NeuralNet'\r\n  new_env_lib.include_training = env[4] || false\r\n  new_env_lib.include_saveload = env[5] || false\r\n  new_env_lib.include_predict = env[6] || false\r\n  new_env_lib.autoparams = main_env.autoparams\r\n  return new_env_lib\r\n}\r\n\r\n// Visual\r\nfunction SimplifyVisual(vis) {\r\n  return [\r\n    vis.darkTheme,\r\n    vis.theme,\r\n    vis.background,\r\n    vis.variant,\r\n    vis.drawerOpen,\r\n    vis.showShape,\r\n    vis.showName,\r\n    vis.snap\r\n  ]\r\n}\r\nfunction DeSimplifyVisual(vis, main_vis) {\r\n  var new_vis_lib = JSON.parse(JSON.stringify(main_vis));\r\n  new_vis_lib.darkTheme = vis[0]\r\n  new_vis_lib.theme = vis[1]\r\n  new_vis_lib.background = vis[2]\r\n  new_vis_lib.variant = vis[3]\r\n  new_vis_lib.drawerOpen = vis[4]\r\n  new_vis_lib.showShape = vis[5]\r\n  new_vis_lib.showName = vis[6]\r\n  new_vis_lib.snap = vis[7]\r\n  return new_vis_lib\r\n}\r\n\r\n// Settings\r\nfunction SimplifySettings(settings) {\r\n  return [\r\n    settings.modelID,\r\n    settings.count,\r\n    settings.lastPos\r\n  ]\r\n}\r\nfunction DeSimplifySettings(settings, main_set) {\r\n  var new_set_lib = JSON.parse(JSON.stringify(main_set));\r\n  new_set_lib.modelID = settings[0]\r\n  new_set_lib.count = settings[1]\r\n  new_set_lib.lastPos = settings[2]\r\n  return new_set_lib\r\n}\r\n\r\n// Try to parse json\r\nfunction TryParseJSON(msg) {\r\n  try {\r\n    return JSON.parse(msg)\r\n  } catch(err) {}\r\n  return msg\r\n}\r\n\r\n// Full\r\nfunction Simplify(state) {\r\n  return {\r\n    flowpoints: SimplifyFlowpoints(state.flowpoints),\r\n    environment: SimplifyEnvironment(state.environment),\r\n    visual: SimplifyVisual(state.visual),\r\n    settings: SimplifySettings(state.settings),\r\n  }\r\n}\r\nfunction DeSimplify(state, getEmptyFlowpointContent, main_lib) {\r\n  state = TryParseJSON(state)\r\n  //var main_lib = MainLibrary();\r\n  return {\r\n    flowpoints: DeSimplifyFlowpoints(state.flowpoints, getEmptyFlowpointContent),\r\n    environment: DeSimplifyEnvironment(state.environment, main_lib.environment),\r\n    visual: DeSimplifyVisual(state.visual, main_lib.visual),\r\n    settings: DeSimplifySettings(state.settings, main_lib.settings),\r\n    notification: main_lib.notification\r\n  }\r\n}\r\n\r\n\r\nexport function Library2String(state) {\r\n\r\n  return JSON.stringify(Simplify(state))\r\n\r\n}\r\n\r\n\r\nexport function String2Library(msg, getEmptyFlowpointContent, main_lib) {\r\n  \r\n  return DeSimplify(msg, getEmptyFlowpointContent, main_lib)\r\n\r\n}","var axios = require('axios');\r\n\r\nfunction rjust(msg, n, rep) {\r\n  msg = '' + msg\r\n  Array.from(Array(Math.max(0, n - msg.length)).keys()).map(() => {\r\n    msg = rep + msg\r\n  })\r\n  return msg\r\n}\r\n\r\n\r\nfunction num2bigBase(num, lib) {\r\n  if (!lib) {\r\n    lib = '0123456789'\r\n    lib += 'abcdefghijklmnopqrstuvwxyz'\r\n    lib += 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\r\n  }\r\n  if (num < lib.length) {\r\n    return lib[num]\r\n  } else {\r\n    return num2bigBase(Math.floor(num / lib.length)) + lib[num % lib.length]\r\n  }\r\n}\r\n\r\n\r\nfunction getId(l) {\r\n  l = Math.min(20, Math.max(10, l || 15))\r\n  var lib = '0123456789'\r\n  lib += 'abcdefghijklmnopqrstuvwxyz'\r\n  lib += 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\r\n  var msg = ''\r\n  msg += Math.round(Math.random() * 100)\r\n  var d = new Date()\r\n  msg += rjust(d.getSeconds(), 2, 0)\r\n  msg += rjust(d.getMinutes(), 2, 0)\r\n  msg += rjust(d.getHours(), 2, 0)\r\n  msg += rjust(d.getDate(), 2, 0)\r\n  msg += rjust(d.getMonth(), 2, 0)\r\n  msg += rjust(parseInt(d.getYear().toString().substring(1)), 2, 0)\r\n  msg = num2bigBase(msg, lib)\r\n  Array.from(Array(l - msg.length).keys()).map(() => {\r\n    msg = lib[Math.round(Math.random() * (lib.length - 1))] + msg\r\n  })\r\n  return msg\r\n}\r\n\r\n\r\nexport function PostToDataBase(data, cb) {\r\n  let model_id = getId(12)\r\n  // data.match(/.{1,5000}/g).map((msg, idx) => {\r\n  //   try {\r\n  //     // var url = 'https://docs.google.com/forms/d/e/1FAIpQLSfA4C6HCBGWLtdfUI4th6VDR7cjtSsj0fp0Tomw96CbgqjO9g/formResponse?usp=pp_url'\r\n  //     var url = ''\r\n  //     url += '&entry.1116133740=' + model_id;\r\n  //     url += '&entry.1405886587=' + msg + '_NnUuMmBbEeRr_' + rjust('' + idx, 4, '0');\r\n  //     url += '&submit=Submit'\r\n  //     axios.get(url).then(() => {})\r\n  //   } catch(err) {}\r\n  // })\r\n  if (cb) cb(model_id)\r\n}\r\n\r\n\r\nexport function LoadDataBase(cb) {\r\n  var url = 'https://docs.google.com/spreadsheets/d/10LoweeCDvGHQBHb8Plr_1IrLXPy4-N7CFqzcO73MqCs/export?format=csv&id=1qNBuXr5KIHPHqoNBgZEao2F3rAjBtMiQf6fsEDug0mk&gid=0'\r\n  axios.get('').then(res => {\r\n    var data = {};\r\n    // var concat_data = {};\r\n    // var raw = res.data.split('\\r\\n');\r\n    // var tmp;\r\n    // for (var idx = 1; idx < raw.length; idx++) {\r\n    //   tmp = raw[idx].split(',')\r\n    //   if (!(tmp[0] in concat_data)) concat_data[tmp[0]] = {}\r\n    //   var number = tmp[1].substring(tmp[1].length - 18)\r\n    //   if (number.includes('NnUuMmBbEeRr')) concat_data[tmp[0]][number] = tmp[1].substring(0, tmp[1].length - 18)\r\n    // }\r\n    // // Concating data\r\n    // Object.keys(concat_data).map(key => {\r\n    //   data[key] = ''\r\n    //   Object.keys(concat_data[key]).sort().map(msg => {\r\n    //     data[key] += concat_data[key][msg]\r\n    //   })\r\n    // })\r\n    if (cb) cb(data)\r\n  })\r\n}","var CryptoJS = require(\"crypto-js\");\r\n\r\n\r\nfunction ReplaceAll(str, search, replacement) {\r\n  var newstr = ''\r\n  str.split(search).map(val => {newstr += val + replacement})\r\n  return newstr.substring(0, newstr.length - replacement.length)\r\n}\r\n\r\n\r\nfunction getSpecialsLib(reversed) {\r\n  var lib = {\r\n    '§': '%C2%A7',\r\n    '\"': '%22',\r\n    '#': '%23',\r\n    '%': '%25',\r\n    '&': '%26',\r\n    '=': '%3D',\r\n    '`': '%60',\r\n    '^': '%5E',\r\n    '+': '%2B',\r\n    '´': '%C2%B4',\r\n    '¨': '%C2%A8'\r\n  }\r\n  if (reversed) {\r\n    var revlib = {}\r\n    Object.keys(lib).map(key => {\r\n      revlib[lib[key]] = key\r\n    })\r\n    return revlib\r\n  }\r\n  return lib\r\n}\r\n\r\n\r\nexport function Encrypt(data, key) {\r\n  var toEncrypt = {\r\n    test_string: 'there_are_fish_in_the_ocean',\r\n    data: data\r\n  }\r\n  var encrypted = CryptoJS.AES.encrypt(JSON.stringify(toEncrypt), key).toString()\r\n  const specials = getSpecialsLib()\r\n  Object.keys(specials).map(key => {\r\n    encrypted = ReplaceAll(encrypted, key, specials[key])\r\n  })\r\n  return encrypted\r\n}\r\n\r\n\r\nexport function Decrypt(data, key) {\r\n  var msg = data\r\n  // console.log(data)\r\n  const specials = getSpecialsLib(true)\r\n  Object.keys(specials).map(key => {\r\n    msg = ReplaceAll(msg, key, specials[key])\r\n  })\r\n  var decrypted = '';\r\n  try {\r\n    decrypted = CryptoJS.AES.decrypt(msg, key).toString(CryptoJS.enc.Utf8)\r\n  } catch(err) {\r\n    return false\r\n  }\r\n  if (decrypted.includes('there_are_fish_in_the_ocean')) {\r\n    return JSON.parse(decrypted).data\r\n  }\r\n  return false\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Collapse from '@material-ui/core/Collapse';\r\n\r\n\r\nclass WhatIsThis extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div style={{padding:0}}>\r\n        <Button color='primary' style={{textTransform:'none', padding:'1', marginLeft:-7}} onClick={() => {this.setState({open:!this.state.open}); this.props.onClick()}}>\r\n          What is this?\r\n        </Button>\r\n        <div style={{marginLeft:20, marginTop:10}} onClick={() => {this.setState({open:false}); this.props.onClick()}}>\r\n          <Collapse in={this.state.open}>\r\n            <Typography color='inherit' paragraph>Model protection, using AES encryption.</Typography>\r\n            <Typography color='inherit' paragraph>\r\n              When a model is saved, it's content is converted to a string and stored in a\r\n              publicly view-able google sheet.<br/>\r\n              Altough anyone can see the model in this google sheet, encryption will make it\r\n              impossible for anyone without the password to read the model.\r\n            </Typography>\r\n            <Typography color='inherit' paragraph>\r\n              If you choose to encrypt your model, your own device will perform the\r\n              encryption, and then send the encrypted model to the google sheet.<br/><br/>\r\n\r\n              When you try to load an encrypted model, the encrypted string will be downloaded\r\n              from the google sheet, and then decrypted by your device.<br/><br/>\r\n              This ensures point-to-point encryption, in which no un-encrypted data is ever\r\n              transmitted over the internet.\r\n            </Typography>\r\n            <Typography color='inherit' style={{fontWeight:'bold'}} paragraph>\r\n              NB!<br/>\r\n              The password is NEVER STORED! If you forget your password, the contents\r\n              of your model cannot be recovered.\r\n            </Typography>\r\n          </Collapse>\r\n        </div>\r\n        <br/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport class LoadDialog extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      open: false,\r\n      pswd: ''\r\n    };\r\n    this.fieldRef = null;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Dialog\r\n        open={this.props.open}\r\n        onClose={this.props.onClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\">\r\n        <DialogTitle id=\"alert-dialog-title\">Encrypted model</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Please type your password in order to decrypt the model<br/>\r\n            <WhatIsThis onClick={() => {if (this.fieldRef) {this.fieldRef.focus()}}}/>\r\n            <form \r\n              autoComplete='off'\r\n              style={{marginTop:0, paddingTop:0, display:'none'}}\r\n              onSubmit={(e) => {\r\n                e.preventDefault();\r\n                if (this.props.onSubmit) {this.props.onSubmit(this.state.pswd)}\r\n              }}>\r\n              <TextField\r\n                id=\"pswdfield\"\r\n                label={this.props.error ? 'Wrong password' : 'Password'}\r\n                error={this.props.error}\r\n                value={this.state.pswd}\r\n                onChange={(e) => {\r\n                  this.setState({pswd:e.target.value})\r\n                }}\r\n                type=\"text\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                style={{width:'100%', marginTop:0, paddingTop:0}}\r\n                margin=\"normal\"\r\n                inputRef={(input) => {if (input) {input.focus(); this.fieldRef = input}}}/>\r\n            </form>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={() => {\r\n              if (this.state.pswd === '') {\r\n                this.props.onClose()\r\n              } else {\r\n                this.props.onSubmit(this.state.pswd)\r\n              }\r\n            }}\r\n            color=\"primary\">\r\n            {\r\n              (this.state.pswd === '') ? (this.props.continueMsg ? this.props.continueMsg : 'CONTINUE WITHOUT LOADING MODEL') : 'DECRYPT MODEL'\r\n            }\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport class SaveDialog extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      open: true,\r\n      pswd: ''\r\n    };\r\n    this.fieldRef = null;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Dialog\r\n        open={this.props.open}\r\n        onClose={this.props.onClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\">\r\n        <DialogTitle id=\"alert-dialog-title\">Model encryption (optional)</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {/* Type a password to encrypt your model, or leave the\r\n            password field empty in order to create a public link<br/> */}\r\n            <WhatIsThis onClick={() => {if (this.fieldRef) {this.fieldRef.focus()}}}/>\r\n            <form\r\n              autoComplete='off'\r\n              style={{marginTop:0, paddingTop:0, display:'none'}}\r\n              onSubmit={(e) => {\r\n                e.preventDefault();\r\n                if (this.props.onSubmit) this.props.onSubmit(this.state.pswd)\r\n              }}>\r\n              <TextField\r\n                id=\"pswdfield\"\r\n                label={this.props.error ? 'Wrong password' : 'Password'}\r\n                error={this.props.error}\r\n                value={this.state.pswd}\r\n                onChange={(e) => {\r\n                  this.setState({pswd:e.target.value})\r\n                }}\r\n                type=\"text\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                style={{width:'100%', marginTop:0, paddingTop:0}}\r\n                margin=\"normal\"\r\n                inputRef={(input) => {if (input) {input.focus(); this.fieldRef = input}}}/>\r\n            </form>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={() => {\r\n              this.props.onSubmit(this.state.pswd)\r\n            }}\r\n            color=\"primary\">\r\n            {\r\n              (this.state.pswd === '') ? (this.props.continueMsg ? this.props.continueMsg : 'Continue') : 'Continue'\r\n            }\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { Typography, Dialog, DialogTitle, DialogContentText, DialogContent, ExpansionPanel, ExpansionPanelSummary, Stepper, StepContent, StepLabel, Step, Link } from \"@material-ui/core\";\r\nimport FileUpload from './FileUpload';\r\n\r\nexport class HelpDialog extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { step:0 }\r\n    this.goTo = this.goTo.bind(this);\r\n  }\r\n\r\n  goTo(idx) {\r\n    this.setState({ step:idx })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      \r\n      <Dialog\r\n      \r\n        open={this.props.open}\r\n        onClose={this.props.onClose}\r\n        fullWidth\r\n        maxWidth='sm'\r\n        style={{maxHeight:'90vh', height:'auto'}}>\r\n        <DialogTitle>Getting started</DialogTitle>\r\n\r\n        <div style={{overflow:'scroll', width:'100%'}}>\r\n\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              Welcome to Flowpoints ML!<br/>\r\n              Here you can design deep learning models graphically.<br/><br/>\r\n              The following few sections will help you get going :)<br/>\r\n              You can also check out the <Link href='https://github.com/mariusbrataas/flowpoints_ml#readme' target='_blank'>documentation</Link> for more information.<br/><br/>\r\n              Found an bug? Please open a new <Link href=\"https://github.com/mariusbrataas/flowpoints_ml/issues\" target='_blank'>issue</Link>, and feel free to fix it!\r\n            </DialogContentText>\r\n          </DialogContent>\r\n\r\n          <Stepper activeStep={this.state.step} orientation='vertical'>\r\n\r\n            <Step key={0} completed={false}>\r\n              <StepLabel onClick={() => {this.goTo(0)}}>The main parts of the screen</StepLabel>\r\n              <StepContent>\r\n                <Typography>\r\n                  Before we get started you should know the main parts of this tool.<br/><br/>\r\n                  \r\n                  The little stack of colored buttons:<br/>\r\n                  You'll use these for creating new flowpoints, copy the entire code of your model,\r\n                  create shareable links to your model, show/hide the panel on the left of your screen,\r\n                  and to view this guide.<br/><br/>\r\n                  \r\n                  The \"Misc\" tab in the side panel:<br/>\r\n                  Here you can change what library you want to utilize to create your model,\r\n                  write some notes about your work, and change the appearance of things.\r\n                  \r\n                  The \"Code\" tab in the side panel:<br/>\r\n                  When you create a model, it's corresponding code will be displayed here.<br/><br/>\r\n                  \r\n                  The \"Flowpoint\" tab:<br/>\r\n                  All parameters of the selected flowpoint can be viewed and changed in this tab.\r\n                </Typography>\r\n              </StepContent>\r\n            </Step>\r\n\r\n            <Step key={1} completed={false}>\r\n              <StepLabel onClick={() => {this.goTo(1)}}>Creating a new flowpoint</StepLabel>\r\n              <StepContent>\r\n                <Typography>\r\n                  Click the + button in the button stack. This should create a new\r\n                  flowpoint on your screen and move focus to this one automatically.\r\n                </Typography>\r\n              </StepContent>\r\n            </Step>\r\n\r\n            <Step key={2} completed={false}>\r\n              <StepLabel onClick={() => {this.goTo(2)}}>Connecting flowpoints</StepLabel>\r\n              <StepContent>\r\n                <Typography>\r\n                  First create two flowpoints.<br/>\r\n                  Did they create a connection automatically? No worries, that is supposed\r\n                  to happen whenever you create a flowpoint while another flowpoint is selected.<br/><br/>\r\n                  To create a new connection manually, start by selecting the flowpoint\r\n                  you want to get the output from. Next, hold shift while clicking the flowpoint\r\n                  that should receive the output. Poof! They're connected!<br/><br/>\r\n                  Disconnecting flowpoints is just as simple. Select the flowpoint that supplies the output,\r\n                  hold shift, and click the flowpoint that's receiving the input.\r\n                </Typography>\r\n              </StepContent>\r\n            </Step>\r\n\r\n            <Step key={3} completed={false}>\r\n              <StepLabel onClick={() => {this.goTo(3)}}>Direction of connections</StepLabel>\r\n              <StepContent>\r\n                <Typography>\r\n                  All connections between flowpoints signify what direction data is moving.<br/><br/>\r\n                  When connecting two flowpoints, the first flowpoint you select will be used as\r\n                  the \"sender\" in that connection, while the second flowpoint will be the \"receiver\".<br/><br/>\r\n                  The color-gradient of connections help identify which is which.\r\n                </Typography>\r\n              </StepContent>\r\n            </Step>\r\n\r\n            <Step key={4} completed={false}>\r\n              <StepLabel onClick={() => {this.goTo(4)}}>Changing a flowpoint's parameters</StepLabel>\r\n              <StepContent>\r\n                <Typography>\r\n                  If you head over to the \"Flowpoint\" tab you should see a bunch of fields\r\n                  (click on a flowpoint if you can't see any such fields).<br/><br/>\r\n                  To change the value of a field, click it, and try typing something.\r\n                  Note that some fields will only accept numbers.\r\n                </Typography>\r\n              </StepContent>\r\n            </Step>\r\n\r\n            <Step key={5} completed={false}>\r\n              <StepLabel onClick={() => {this.goTo(5)}}>Layer types</StepLabel>\r\n              <StepContent>\r\n                <Typography>\r\n                  The field at the very top in the \"Flowpoint\" tab is where you assign\r\n                  a layer type to your flowpoint.<br/><br/>\r\n                  When you click this field, a long list will pop up. These are all\r\n                  the layers available. Small, colored badges indicate what libraries the\r\n                  layer is available in, i.e. TF for TensorFlow, or PT for PyTorch.<br/><br/>\r\n                  If you start typing the name of a layer, the list will try to suggest a smaller selection of layers.<br/><br/>\r\n                  Ideally, it should be possible to create models utilizing layers that are available\r\n                  in either library, and quickly switch between them by just changing the \"Library\" field\r\n                  in the \"Misc\" tab.<br/>\r\n                  This won't always be the case, but entertain this idea, paramaters from all libraries\r\n                  will be stored whenever you create a link to your model.\r\n                </Typography>\r\n              </StepContent>\r\n            </Step>\r\n\r\n            <Step key={6} completed={false}>\r\n              <StepLabel onClick={() => {this.goTo(6)}}>Changing appearance</StepLabel>\r\n              <StepContent>\r\n                <Typography>\r\n                  Head over to the \"Misc\" tab. You'll see the fields \"Theme\" and \"Variant\",\r\n                  and a couple of buttons just beneath.<br/><br/>\r\n                  These have no practical application what-so-ever, but you'll be able to\r\n                  create deep learning models with style! I recommend trying the theme \"orange\"\r\n                  with the variant \"paper\".<br/><br/>\r\n                  Play arround till you find something you like. When you share a model, any\r\n                  changes to it's appearance will be included.\r\n                </Typography>\r\n              </StepContent>\r\n            </Step>\r\n\r\n            <Step key={7} completed={false}>\r\n              <StepLabel onClick={() => {this.goTo(7)}}>Sharing</StepLabel>\r\n              <StepContent>\r\n                <Typography>\r\n                  Ready to show off your work?<br/><br/>\r\n                  Click the button in the button stack showing a link. This should open a new box on your\r\n                  screen, asking wether you'd like to encrypt your model.<br/><br/>\r\n                  Adding encryption will ensure that no one without the correct password can open your model.<br/><br/>\r\n                  If you want to create a public link, just leave the text field empty and click continue.<br/><br/>\r\n                  The link will be copied to your clip-board, and the current URL should at the top of your\r\n                  browser will change in order to match the link.<br/><br/>\r\n                  If you chose to add a password, this password will be requested the next time you open your model.<br/><br/>\r\n                  Note that if you forget your password, the data of your model can be considered lost.\r\n                  Your password is not stored anywhere, and there exists no other keys that can decrypt your data.\r\n                </Typography>\r\n              </StepContent>\r\n            </Step>\r\n\r\n            <Step key={8} completed={false}>\r\n              <StepLabel onClick={() => {this.goTo(8)}}>Examples</StepLabel>\r\n              <StepContent>\r\n                <Typography>\r\n                  <Link href=\"https://mariusbrataas.github.io/flowpoints_ml/?p=KlHpdLzP3SDx\" target=\"_blank\">TensorFlow CNN used for the CIFAR10 example</Link><br/>\r\n                  <Link href=\"https://mariusbrataas.github.io/flowpoints_ml/?p=9fehu18ra4ty\" target=\"_blank\">PyTorch CNN used for the CIFAR10 example</Link>\r\n                </Typography>\r\n              </StepContent>\r\n            </Step>\r\n\r\n          </Stepper>\r\n        </div>\r\n      </Dialog>\r\n      \r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\n// Importing installed tools\r\nimport { Flowpoint, Flowspace } from 'flowpoints';\r\nimport copy from 'copy-to-clipboard';\r\n\r\n\r\n// Importing local tools\r\nimport { Sidebar } from './sidebar/Sidebar.js';\r\nimport { MainButtons } from './MainButtons';\r\nimport { Parser } from './parser/Parser';\r\nimport { Library2String, String2Library } from './LibraryParser';\r\nimport { PostToDataBase, LoadDataBase } from './DataBaseHandler';\r\nimport { Encrypt, Decrypt } from './Cryptographer';\r\nimport { Snackbar, SnackbarContent } from '@material-ui/core';\r\nimport { LoadDialog, SaveDialog } from './PasswordDialog.js';\r\nimport { MainLibrary } from './MainLibrary';\r\nimport { HelpDialog } from './HelpDialog';\r\nimport { useState, useRef, useCallback, useEffect } from 'react';\r\nimport FileUpload from './FileUpload';\r\n\r\nvar keys = ''\r\nvar model_id = ''\r\n\r\nfunction saveFile(content, fileName, contentType) {\r\n  const a = document.createElement('a');\r\n  const file = new Blob([content], { type: contentType });\r\n\r\n  a.href = URL.createObjectURL(file);\r\n  a.download = fileName;\r\n  a.click();\r\n\r\n  // 清理\r\n  URL.revokeObjectURL(a.href);\r\n}\r\n\r\nfunction shapeBox(shape) {\r\n  var msg = '['\r\n  shape.map(val => {\r\n    msg += val + ','\r\n  })\r\n  if (shape.length > 0) msg = msg.substring(0, msg.length - 1)\r\n  msg += ']'\r\n  return (\r\n    <div style={{ textAlign: 'center', paddingBottom: '10px' }}>\r\n      {\r\n        msg\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Building state library\r\n    this.state = MainLibrary()\r\n\r\n    // Helpers\r\n    this.diagramRef = null;\r\n\r\n    // Binding class methods\r\n    this.showNotification = this.showNotification.bind(this);\r\n    this.updateCode = this.updateCode.bind(this);\r\n    this.updateAvailableLayers = this.updateAvailableLayers.bind(this);\r\n    this.prepOutputShapes = this.prepOutputShapes.bind(this);\r\n    this.loadDecryptedModel = this.loadDecryptedModel.bind(this);\r\n    this.getEmptyFlowpointContent = this.getEmptyFlowpointContent.bind(this);\r\n    this.addFlowpoint = this.addFlowpoint.bind(this);\r\n    this.copyCode = this.copyCode.bind(this);\r\n    this.createLink = this.createLink.bind(this);\r\n    this.showHideHelp = this.showHideHelp.bind(this);\r\n    this.showHide = this.showHide.bind(this);\r\n    this.deleteFlowpoint = this.deleteFlowpoint.bind(this);\r\n    this.deleteSelected = this.deleteSelected.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.componentDidMount = this.componentDidMount.bind(this);\r\n    this.fileUp = this.fileUp.bind(this);\r\n    this.fileUPe = this.fileUPe.bind(this);\r\n    this.fileUPer = this.fileUPer.bind(this);\r\n\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n\r\n    // Open drawer\r\n    var visual = this.state.visual;\r\n    visual.drawerOpen = true;\r\n    this.setState({ visual });\r\n\r\n    // Loading model?\r\n    var query = window.location.href.split(this.state.settings.baseUrl)[1]\r\n    // if (query.includes('p=')) {\r\n\r\n    //   // const keys = query.substring(query.indexOf('key=') + 4, query.length)\r\n    //   query = query.substring(query.indexOf('p=') + 2, query.length)\r\n    //   query = query.substring(0, 12)\r\n    //   // console.log(keys, query)\r\n\r\n    query = model_id\r\n    if (keys != '') {\r\n    // Notify user that model is trying to load\r\n    this.showNotification('Trying to load model...', 'info')\r\n\r\n\r\n\r\n\r\n    // Loading database\r\n    LoadDataBase(data => {\r\n\r\n      // console.log(query)\r\n      // console.log(data)\r\n      // Model in data?\r\n      // if (query in data) {\r\n      // var decrypted = Decrypt(data[query], 'Hello world')\r\n      \r\n\r\n        var decrypted = Decrypt(keys, 'Hello world')\r\n        // Encryption?\r\n        if (decrypted) {\r\n          this.loadDecryptedModel(decrypted, query)\r\n        } else {\r\n          this.showNotification('Model is encrypted')\r\n          var visual = this.state.visual;\r\n          var environment = this.state.environment;\r\n          var settings = this.state.settings;\r\n          settings.modelID = query;\r\n          environment.encrypted_model = data[query]\r\n          visual.show_load_dialog = true;\r\n          this.setState({ visual, environment, settings })\r\n        }\r\n\r\n\r\n      \r\n\r\n      // } else {\r\n      //   this.showNotification('Could not find model in database', 'error')\r\n      // }\r\n\r\n    })\r\n  }\r\n    // }\r\n\r\n    // Updating available layers\r\n    this.updateAvailableLayers()\r\n\r\n  }\r\n\r\n\r\n  showNotification(msg, color) {\r\n    if (!((color || 'nothing').includes('#'))) {\r\n      switch (color) {\r\n        case 'info':\r\n          color = '#2979ff'\r\n          break;\r\n        case 'error':\r\n          color = '#dd2c00'\r\n          break;\r\n        case 'warning':\r\n          color = '#ffd600'\r\n          break;\r\n        case 'success':\r\n          color = '#00b843'\r\n          break;\r\n        default:\r\n          color = '#37474f'\r\n      }\r\n    }\r\n    var notification = this.state.notification;\r\n    notification.queue.push({\r\n      msg,\r\n      color,\r\n      key: new Date().getTime()\r\n    })\r\n    if (notification.show) {\r\n      notification.show = false;\r\n    } else {\r\n      if (notification.queue.length) {\r\n        notification.content = notification.queue.shift()\r\n        notification.show = true\r\n      }\r\n    }\r\n    this.setState({ notification })\r\n  }\r\n\r\n\r\n  updateCode(cb) {\r\n    var environment = this.state.environment;\r\n    let tmp = Parser(this.state)\r\n    environment.code = tmp.msg;\r\n    environment.order = tmp.order;\r\n    environment.dummies = tmp.dummies;\r\n    this.setState({ environment })\r\n    this.prepOutputShapes();\r\n    if (cb) cb(environment.code)\r\n  }\r\n\r\n\r\n  updateAvailableLayers() {\r\n\r\n    var environment = this.state.environment;\r\n\r\n    // Creating list\r\n    var availableLayers = { Input: Object.keys(environment.libraryFetchers) };\r\n    Object.keys(environment.baseLib).map(layer_key => {\r\n      availableLayers[layer_key] = Object.keys(environment.baseLib[layer_key])\r\n    })\r\n\r\n    // Updating environment\r\n    environment.availableLayers = availableLayers;\r\n\r\n    // Updating state\r\n    this.setState({ environment })\r\n\r\n  }\r\n\r\n\r\n  prepOutputShapes(cb) {\r\n\r\n    if (this.state.environment.library in this.state.environment.autoparams) {\r\n\r\n      // Helpers\r\n      const autoparams = this.state.environment.autoparams[this.state.environment.library]();\r\n      var flowpoints = this.state.flowpoints;\r\n      var dummies = this.state.environment.dummies;\r\n      const order = this.state.environment.order;\r\n      const library = this.state.environment.library;\r\n\r\n      // Setting output-shapes of inputs\r\n      var visited = []\r\n      order.map(key => {\r\n        var point = flowpoints[key]\r\n        if (point.base_ref === 'Input') {\r\n          point.output_shape = Object.keys(point.content.dimensions).map(dimkey => {\r\n            return parseInt(point.content.dimensions[dimkey])\r\n          })\r\n          visited.push(key)\r\n        }\r\n      })\r\n\r\n      // Setting all output-shapes\r\n      order.map(key => {\r\n        if (!visited.includes(key)) {\r\n          var point = flowpoints[key];\r\n          if (point.content[library]) {\r\n            var tmp_autoparams = autoparams[point.content[library].reference];\r\n            if (tmp_autoparams) {\r\n              var bestInp = null\r\n              var all_inps = []\r\n              dummies[key].inputs.map(inp_key => {\r\n                if (visited.includes(inp_key)) {\r\n                  bestInp = inp_key\r\n                  all_inps.push(flowpoints[inp_key].output_shape.map(value => 1 * value))\r\n                }\r\n              })\r\n              if (flowpoints[bestInp]) {\r\n                const prevshape = flowpoints[bestInp].output_shape.map(value => 1 * value);\r\n                point.content[library].parameters = tmp_autoparams.autoparams(all_inps, point.content[library].parameters)\r\n                point.output_shape = tmp_autoparams.outshape(all_inps, point.content[library].parameters).map(value => parseInt(value))\r\n                visited.push(key)\r\n              }\r\n            }\r\n          } else {\r\n            point.output_shape = []\r\n          }\r\n        }\r\n      })\r\n\r\n      // Updating state\r\n      this.setState({ flowpoints })\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n  loadDecryptedModel(decrypted, model_id) {\r\n\r\n    // Parsing\r\n    var new_state = String2Library(decrypted, this.getEmptyFlowpointContent, this.state)\r\n\r\n    // Updating visual\r\n    new_state.visual.show_load_dialog = false;\r\n    new_state.visual.load_dialog_error = false;\r\n    new_state.visual.show_save_dialog = false;\r\n\r\n    // Ensuring getbaselib and library fetchers are added\r\n    new_state.environment.getBaseLibrary = this.state.environment.getBaseLibrary\r\n    new_state.environment.libraryFetchers = this.state.environment.libraryFetchers\r\n\r\n    // Fixing model ID\r\n    new_state.settings.modelID = model_id || this.state.settings.modelID;\r\n\r\n    // Setting state\r\n    this.setState({ flowpoints: {}, settings: { ...this.state.settings, count: 0 } }, () => {\r\n      this.setState(new_state, () => {\r\n        // Showing notification\r\n        this.showNotification('Loaded model', '#00b24a')\r\n\r\n        // Updating code and layers\r\n        this.updateAvailableLayers()\r\n        this.updateCode()\r\n      })\r\n    })\r\n\r\n  }\r\n\r\n\r\n  getEmptyFlowpointContent(base_ref) {\r\n\r\n    // Input nodes are treated differently from all other nodes\r\n    if (base_ref === 'Input') {\r\n      return {\r\n        n_dims: 4,\r\n        dimensions: {\r\n          0: 1,\r\n          1: 1,\r\n          2: 1,\r\n          3: 1\r\n        }\r\n      }\r\n    }\r\n\r\n    // Not an input node? Getting base_library references\r\n    var environment = this.state.environment;\r\n    const base_point = environment.getBaseLibrary()[base_ref];\r\n\r\n    // Adding contents and returning\r\n    var content = {};\r\n    Object.keys(base_point).map(library_key => {\r\n      if (library_key in environment.libraryFetchers) {\r\n        content[library_key] = {\r\n          reference: base_point[library_key],\r\n          parameters: environment.libraryFetchers[library_key]()[base_point[library_key]]\r\n        }\r\n      }\r\n    })\r\n    return content\r\n\r\n  }\r\n\r\n\r\n  addFlowpoint() {\r\n\r\n    // Loading from state\r\n    var flowpoints = this.state.flowpoints;\r\n    var settings = this.state.settings;\r\n\r\n    // Creating flowpoint\r\n    const base_ref = settings.count === 0 ? 'Input' : 'Linear';\r\n    var newPoint = {\r\n      base_ref: base_ref,\r\n      name: '',\r\n      outputs: {},\r\n      is_output: false,\r\n      concat_inputs: false,\r\n      concat_dim: 0,\r\n      output_shape: [],\r\n      contiguous: false,\r\n      reshape_ndims: 0,\r\n      reshape_dims: [],\r\n      pos: {\r\n        x: settings.lastPos.x,\r\n        y: settings.lastPos.y + 90\r\n      },\r\n      content: this.getEmptyFlowpointContent(base_ref)\r\n    }\r\n\r\n    // Adding flowpoint\r\n    flowpoints['' + settings.count] = newPoint;\r\n\r\n    // Connecting previously selected flowpoint to this one (maybe)\r\n    if (settings.selected) flowpoints[settings.selected].outputs['' + settings.count] = {}\r\n\r\n    // Updating settings\r\n    settings.selected = '' + settings.count\r\n    settings.count += 1\r\n    settings.lastPos = {\r\n      x: settings.lastPos.x,\r\n      y: settings.lastPos.y + 90\r\n    }\r\n\r\n    // Updating state\r\n    this.setState({\r\n      flowpoints,\r\n      settings\r\n    })\r\n\r\n    this.updateCode()\r\n\r\n  }\r\n\r\n\r\n  copyCode() {\r\n    this.updateCode(code => {\r\n      copy(code);\r\n      this.showNotification('Code copied to clip-board', 'info')\r\n    })\r\n  }\r\n\r\n\r\n  createLink() {\r\n    var visual = this.state.visual;\r\n\r\n    // Showing encryption dialog\r\n    visual.show_save_dialog = true\r\n\r\n    // Updating state\r\n    this.setState({ visual })\r\n\r\n  }\r\n\r\n\r\n  showHideHelp() {\r\n    var visual = this.state.visual;\r\n    visual.show_help_dialog = !visual.show_help_dialog;\r\n    this.setState({ visual })\r\n  }\r\n\r\n  fileUPer(e) {\r\n    // 在这里处理文件内容，例如在控制台输出\r\n    // console.log(e.target.result);\r\n\r\n    const result = e.target.result.split(\":\");\r\n\r\n    model_id = result[0]\r\n    keys = result[1]\r\n\r\n    // console.log(keys)\r\n    // console.log(this.componentDidMount);\r\n    ///////////\r\n    this.componentDidMount();\r\n  }\r\n\r\n\r\n  fileUPe(e) {\r\n    // console.log(this.state);\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      // 创建FileReader对象\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        this.fileUPer(e);\r\n      }\r\n      reader.readAsText(file);\r\n    }\r\n  }\r\n\r\n  fileUp() {\r\n    const fileInput = document.createElement('input');\r\n    fileInput.type = 'file';\r\n    fileInput.style.display = 'none'; // 隐藏输入元素\r\n    fileInput.accept = \".ml\";\r\n    const state = this.state;\r\n    const setState = this.setState;\r\n    // 监听文件选择的变化\r\n    fileInput.addEventListener('change', (event) => { this.fileUPe(event) });\r\n\r\n    // 触发文件输入的点击事件以打开文件选择对话框\r\n    fileInput.click();\r\n  }\r\n\r\n\r\n  showHide() {\r\n\r\n    // Loading from state\r\n    var visual = this.state.visual;\r\n\r\n    // Open/close drawer\r\n    visual.drawerOpen = !visual.drawerOpen;\r\n\r\n    // Updating state\r\n    this.setState({ visual })\r\n\r\n  }\r\n\r\n\r\n  deleteFlowpoint(key) {\r\n\r\n    // Loading from state\r\n    var flowpoints = this.state.flowpoints;\r\n    var settings = this.state.settings;\r\n\r\n    // Removing selected?\r\n    if (key === settings.selected) settings.selected = null;\r\n\r\n    // Deleting flowpoint\r\n    delete flowpoints[key];\r\n\r\n    // Removing any connections other flowpoints have to the deleted one\r\n    Object.keys(flowpoints).map(test_key => {\r\n      if (key in flowpoints[test_key].outputs) {\r\n        delete flowpoints[test_key].outputs[key]\r\n      }\r\n    })\r\n\r\n    // Updating state\r\n    this.setState({\r\n      flowpoints,\r\n      settings\r\n    })\r\n\r\n  }\r\n\r\n\r\n  deleteSelected() {\r\n    this.deleteFlowpoint(this.state.settings.selected);\r\n  }\r\n\r\n\r\n  handleClick(key, e) {\r\n\r\n    // Loading from state\r\n    var flowpoints = this.state.flowpoints;\r\n    var settings = this.state.settings;\r\n\r\n    // Handling click\r\n    if (e.shiftKey) {\r\n      // If shift is pressed: Create / delete connection\r\n      if (settings.selected === null) {\r\n        // Nothing selected: selecting current\r\n        settings.selected = key;\r\n      } else {\r\n        if (settings.selected !== key) {\r\n          // Creating connection from previously clicked to current clicked\r\n          var pointA = flowpoints[settings.selected]\r\n          if (key in pointA.outputs) {\r\n            delete pointA.outputs[key]\r\n          } else {\r\n            pointA.outputs[key] = {}\r\n          }\r\n          this.updateCode()\r\n        }\r\n      }\r\n    } else {\r\n      // If not shift pressed: Select / deselect flowpoint\r\n      settings.selected = (settings.selected === null ? key : (settings.selected == key ? null : key))\r\n    }\r\n\r\n    // Updating state\r\n    this.setState({\r\n      flowpoints,\r\n      settings\r\n    })\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n\r\n      <div style={{ backgroundColor: (this.state.visual.darkTheme ? 'black' : 'white') }}>\r\n        {/* <FileUpload onUpload={()=>{}} /> */}\r\n\r\n        <Sidebar\r\n          state={this.state}\r\n          refresh={() => { return this.state }}\r\n          updateFlowpoints={flowpoints => { this.setState({ flowpoints }); this.updateCode() }}\r\n          updateEnvironment={environment => { this.setState({ environment }); this.updateCode() }}\r\n          updateVisual={visual => this.setState({ visual })}\r\n          updateSettings={settings => { this.setState({ settings }); this.updateCode() }}\r\n          notification={(msg, color) => this.showNotification(msg, color)}\r\n          getEmptyFlowpointContent={this.getEmptyFlowpointContent}\r\n          deleteSelected={this.deleteSelected}\r\n          updateAvailableLayers={this.updateAvailableLayers}\r\n          diagramRef={this.diagramRef}\r\n          prepOutputShapes={this.prepOutputShapes} />\r\n\r\n\r\n        <Flowspace\r\n          theme={this.state.visual.theme}\r\n          variant={this.state.visual.variant}\r\n          background={this.state.visual.darkTheme ? 'black' : 'white'}\r\n          selected={this.state.settings.selected}\r\n          getDiagramRef={ref => { this.diagramRef = ref }}\r\n          avoidCollisions\r\n          onClick={() => {\r\n\r\n            // Loading from state\r\n            var settings = this.state.settings;\r\n            settings.selected = null;\r\n\r\n            // Updating state\r\n            this.setState({ settings })\r\n\r\n          }}\r\n          style={{\r\n            height: '100vh',\r\n            width: 'calc(100vw - ' + this.state.visual.drawerWidth * this.state.visual.drawerOpen + ')',\r\n            marginLeft: this.state.visual.drawerWidth * this.state.visual.drawerOpen,\r\n            transition: 'margin-left 0.4s ease-out'\r\n          }}>\r\n\r\n          {\r\n            Object.keys(this.state.flowpoints).map(key => {\r\n              const point = this.state.flowpoints[key];\r\n              return (\r\n                <Flowpoint\r\n                  key={key}\r\n                  outputs={point.outputs}\r\n                  onClick={e => { this.handleClick(key, e) }}\r\n                  startPosition={point.pos}\r\n                  snap={{ x: 10, y: 10 }}\r\n                  style={{\r\n                    width: 'auto',\r\n                    height: 'auto',\r\n                    minWidth: 150,\r\n                    maxHeight: (this.state.visual.showShape && this.state.environment.library in this.state.environment.autoparams) ? 150 : 50\r\n                  }}\r\n                  onDrag={pos => {\r\n                    var flowpoints = this.state.flowpoints;\r\n                    var settings = this.state.settings;\r\n                    flowpoints[key].pos = pos;\r\n                    settings.lastPos = pos;\r\n                    this.setState({ flowpoints, settings })\r\n                  }}>\r\n                  <div style={{ height: 'auto', paddingLeft: 4, paddingRight: 4 }}>\r\n                    <div style={{ display: 'table', width: '100%', height: '50px' }}>\r\n                      <div style={{ display: 'table-cell', verticalAlign: 'middle', textAlign: 'center' }}>\r\n                        {\r\n                          this.state.visual.showName ? (point.name !== '' ? point.name : 'p_' + key) : point.base_ref\r\n                        }\r\n                      </div>\r\n                    </div>\r\n                    {\r\n                      (this.state.visual.showShape && this.state.environment.library in this.state.environment.autoparams) ? shapeBox(point.output_shape) : null\r\n                    }\r\n                  </div>\r\n                </Flowpoint>\r\n              )\r\n            })\r\n          }\r\n\r\n        </Flowspace>\r\n\r\n\r\n        <MainButtons\r\n          state={this.state}\r\n          addFlowpoint={this.addFlowpoint}\r\n          copyCode={this.copyCode}\r\n          createLink={this.createLink}\r\n          showHide={this.showHide}\r\n          showFileup={this.fileUp} \r\n          showHideHelp={this.showHideHelp}\r\n          \r\n          />\r\n\r\n\r\n        <Snackbar\r\n          autoHideDuration={4000}\r\n          onClose={() => {\r\n            var notification = this.state.notification;\r\n            notification.show = false;\r\n            this.setState({ notification })\r\n          }}\r\n          onExited={() => {\r\n            var notification = this.state.notification;\r\n            if (notification.queue.length > 0) {\r\n              notification.content = notification.queue.shift();\r\n              notification.show = true\r\n            }\r\n            this.setState({ notification })\r\n          }}\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n          open={this.state.notification.show}>\r\n          <SnackbarContent\r\n            message={this.state.notification.content.msg}\r\n            style={{ backgroundColor: this.state.notification.content.color, boxShadow: 'none' }} />\r\n        </Snackbar>\r\n\r\n\r\n        <HelpDialog\r\n          open={this.state.visual.show_help_dialog}\r\n          onClose={() => {\r\n            var visual = this.state.visual;\r\n            visual.show_help_dialog = false;\r\n            this.setState({ visual })\r\n          }} />\r\n\r\n\r\n        <LoadDialog\r\n          error={this.state.visual.load_dialog_error}\r\n          open={this.state.visual.show_load_dialog}\r\n          onClose={() => {\r\n            var visual = this.state.visual;\r\n            visual.show_load_dialog = false;\r\n            this.setState({ visual, settings: { ...this.state.settings, modelID: null } })\r\n          }}\r\n          onSubmit={pswd => {\r\n            var visual = this.state.visual;\r\n            visual.show_save_dialog = false;\r\n            this.setState({ visual })\r\n            var environment = this.state.environment;\r\n\r\n            var decrypted = Decrypt(keys, pswd)\r\n            if (decrypted) {\r\n              this.loadDecryptedModel(decrypted)\r\n            } else {\r\n              var visual = this.state.visual;\r\n              visual.load_dialog_error = true;\r\n              this.setState({ visual })\r\n              this.showNotification('Wrong password', 'error')\r\n            }\r\n          }} />\r\n\r\n\r\n        <SaveDialog\r\n          error={this.state.visual.save_dialog_error}\r\n          open={this.state.visual.show_save_dialog}\r\n          onClose={() => {\r\n            var visual = this.state.visual;\r\n            visual.show_save_dialog = false;\r\n            this.setState({ visual })\r\n          }}\r\n          onSubmit={pswd => {\r\n            var visual = this.state.visual;\r\n            visual.show_save_dialog = false;\r\n            this.setState({ visual })\r\n            // console.log(this.state.environment)\r\n            keys = Encrypt(Library2String(this.state), (pswd === '' ? 'Hello world' : pswd))\r\n            // console.log(keys)\r\n\r\n            PostToDataBase(keys, model_id => {\r\n              saveFile(model_id + ':' + keys, model_id + '.ml', 'ml');\r\n              // Loading from state\r\n              var settings = this.state.settings;\r\n\r\n              var newUrl = settings.baseUrl\r\n              // var newUrl = settings.baseUrl + '?p=' + model_id;\r\n\r\n              // Setting model id\r\n              settings.modelID = model_id;\r\n\r\n              // Updating state\r\n              this.setState({ settings })\r\n\r\n              // Updating code\r\n              this.updateCode()\r\n\r\n              // Changing current url\r\n              window.history.pushState({}, model_id, newUrl);\r\n\r\n              // Copy link to clip-board and display notification\r\n              copy(newUrl)\r\n              this.showNotification('Model saved and link copied to clip-board')\r\n\r\n            })\r\n          }} />\r\n\r\n\r\n      </div>\r\n    )\r\n\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n","import { getBaseLibrary } from \"./libraries/base_library\";\r\nimport { getPyTorchLibrary } from \"./libraries/pytorch_library\";\r\nimport { getTensorFlowLibrary } from \"./libraries/tensorflow_library\";\r\nimport { getPyTorchAutoparams } from \"./libraries/pytorch_autoparams\";\r\n\r\nexport function MainLibrary() {\r\n  return {\r\n    flowpoints: {},\r\n    environment: {\r\n      getBaseLibrary: getBaseLibrary,\r\n      baseLib: getBaseLibrary(),\r\n      library: 'pytorch',\r\n      libraryFetchers: {\r\n        pytorch: getPyTorchLibrary,\r\n        tensorflow: getTensorFlowLibrary\r\n      },\r\n      autoparams: {\r\n        pytorch: getPyTorchAutoparams\r\n      },\r\n      availableLayers: [],\r\n      code: 'Dont panick',\r\n      encrypted_model: '',\r\n      notes: '',\r\n      order: [],\r\n      dummies: {},\r\n      batch_first: false,\r\n      modelname: 'NeuralNet',\r\n      include_training: false,\r\n      include_saveload: false,\r\n      include_predict: false,\r\n    },\r\n    visual: {\r\n      darkTheme: true,\r\n      theme: 'indigo',\r\n      background: 'white',\r\n      variant: 'outlined',\r\n      drawerOpen: false,\r\n      drawerWidth: 360,\r\n      showShape: true,\r\n      showName: false,\r\n      snap: true,\r\n      show_load_dialog: false,\r\n      load_dialog_error: false,\r\n      show_save_dialog: false,\r\n      show_help_dialog: false\r\n    },\r\n    settings: {\r\n      tab: 'Misc',\r\n      modelID: null,\r\n      baseUrl: window.location.href.split('/?')[0],\r\n      count: 0,\r\n      selected: null,\r\n      lastPos: {x:50, y:-40}\r\n    },\r\n    notification: {\r\n      show: false,\r\n      content: {\r\n        msg: 'Hello world',\r\n        color: '#00e676'\r\n      },\r\n      queue: []\r\n    }\r\n  }\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport FileUpload from './FileUpload';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}